{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chint\\\\Downloads\\\\Naaviverse 2\\\\naaviverse-frontend\\\\src\\\\context\\\\CoinContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CoinContext = /*#__PURE__*/createContext();\nexport const CoinContextProvider = ({\n  children\n}) => {\n  _s();\n  const [coinActionEnabled, setCoinActionEnabled] = useState(false);\n  const [addBankingEnabled, setAddBankingEnabled] = useState(false);\n  const [coinType, setCoinType] = useState(\"crypto\");\n  const [trackerType, setTrackerType] = useState(\"deposit\");\n  const [coinAction, setCoinAction] = useState([\"Menu\"]);\n  const [swapMenu, setSwapMenu] = useState(false);\n  const [placeholder, setPlaceholder] = useState(\"Search Crypto Vaults\");\n  const [senbtnClicked, setSendBtnClicked] = useState(\"\");\n  const [selectedCoin, setSelectedCoin] = useState({});\n  const [swapActionStep, setSwapActionStep] = useState(\"step1\");\n  const [selectedSwapAction, setSelectedSwapAction] = useState(\"\");\n  const [enteredSwapValue, setEnteredSwapValue] = useState();\n  const [buyResult, setBuyResult] = useState([]);\n  const [sellResult, setSellResult] = useState([]);\n  const [buyQuote, setBuyQuote] = useState([]);\n  const [sellQuote, setSellQuote] = useState([]);\n  const [fromAsset, setFromAsset] = useState({});\n  const [assetName, setAssetName] = useState(\"\");\n  const [selectAsset, setSelectAsset] = useState(false);\n  const [updateAfterTrade, setUpdateAfterTrade] = useState(false);\n\n  // Withdraw Action states\n  const [step, setStep] = useState(1);\n  const [addressTerm, setAddressTerm] = useState(\"\");\n  const [fromTerm, setFromTerm] = useState(\"\");\n  const [toTerm, setToTerm] = useState(\"\");\n  const [checkedOne, setCheckedOne] = useState(false);\n  const [checkedTwo, setCheckedTwo] = useState(false);\n  const [initiateWithdraw, setInitiateWithdraw] = useState(false);\n  const [isWithdrawConfirmed, setIsWithdrawConfirmed] = useState(false);\n\n  // Forex Currency Action\n  const [addApiValue, setAddApiValue] = useState();\n  const [addApiValueCoin, setAddApiValueCoin] = useState();\n  const [toCurrencyApiValue, setToCurrencyApiValue] = useState();\n  const [countryApiValue, setCountryApiValue] = useState();\n  const [payMethodApiValue, setPayMethodApiValue] = useState();\n  const [eachCardShowValue, setEachCardShowValue] = useState();\n  const [fundingCurrency, setFundingCurrency] = useState(false);\n  const [payMethod, setPayMethod] = useState(false);\n  const [otcDesk, setOtcDesk] = useState(false);\n  const [currentStep, setCurrentStep] = useState(\"step1\");\n  const [newWholeValue, setNewWholeValue] = useState({\n    step1: \"\",\n    step2: \"\",\n    step3: \"\",\n    step4: \"\"\n  });\n  const [fromCurrencyData, setFromCurrencyData] = useState({\n    step1: \"\",\n    step2: \"\",\n    step3: \"\",\n    step4: \"\"\n  });\n  const [bankerId, setBankerId] = useState(\"\");\n  const [enterAmount, setEnterAmount] = useState(false);\n  const [otcApiValue, setOtcApiValue] = useState();\n  const [selectedTab, setSelectedTab] = useState(\"sendingCurrency\");\n  const [isCoinLoadingInAddAction, setCoinLoadingInAddAction] = useState(false);\n  const [updateVaultData, setUpdateVaultData] = useState(true);\n  const [updateBondVaultData, setUpdateBondVaultData] = useState(true);\n  const [updateMMVaultData, setUpdateMMVaultData] = useState(true);\n  const [updateBankAccounts, setUpdateBankAccounts] = useState(true);\n  const [finalToAmountValue, setFinalToAmountValue] = useState();\n  const [pathData, setPathData] = useState();\n  const [sendVerificationMail, setSendVerificationMail] = useState(false);\n  const [otp, setOtp] = useState(\"\");\n  const [confirmAmount, setConfirmAmount] = useState(false);\n  const [confirmQuote, setConfirmQuote] = useState(false);\n  const [addActionStep, setAddActionStep] = useState(1);\n  const [hashText, setHashText] = useState(\"\");\n  const [submitHashEnabled, setSubmitHashEnabled] = useState(false);\n  const [transferActionStep, setTransferActionStep] = useState(1);\n  const [transferAmount, setTransferAmount] = useState();\n  const [transferMethod, setTransferMethod] = useState(\"bonds\");\n  const [addForexCurrencyValue, setAddForexCurrencyValue] = useState();\n  const [bankAccountId, setBankAccountId] = useState(\"\");\n  const [isAddingForexLoading, setIsAddingForexLoading] = useState(false);\n  const [withdrawForexStep, setWithdrawForexStep] = useState(\"1\");\n  const [withdrawForexCurrency, setWithdrawForexCurrency] = useState();\n  const [withdrawForexCountry, setWithdrawForexCountry] = useState();\n  const [withdrawForexPaymentMethod, setWithdrawForexPaymentMethod] = useState();\n  const [withdrawForexOtcDesk, setWithdrawForexOtcDesk] = useState();\n  const [withdrawForexAccountId, setWithdrawForexAccountId] = useState();\n  const [withdrawForexAccountName, setWithdrawForexAccountName] = useState();\n  const [withdrawForexEnteredAmount, setWithdrawForexEnteredAmount] = useState(\"\");\n  const [addBankAccountStep, setAddBankAccountStep] = useState(1);\n  const [addAccountStepName, setAddAccountStepName] = useState(\"\");\n  const [bankingPaymentMethod, setBankingPaymentMethod] = useState();\n  const [instituteName, setInstituteName] = useState();\n  const [instituteId, setInstituteId] = useState();\n  const [enableAccountCreation, setEnableAccountCreation] = useState(false);\n  const [addBankAccountLoading, setAddBankAccountLoading] = useState(false);\n  const [selectedPaymentType, setSelectedPaymentType] = useState(null);\n  const [selectedBankType, setSelectedBankType] = useState(null);\n  const [selectedCountry, setSelectedCountry] = useState(null);\n  const [nameOnBankAccount, setNameOnBankAccount] = useState(\"\");\n  const [bankingPhoneNumber, setBankingPhoneNumber] = useState(\"\");\n  const [beneficiaryAddress, setBeneficiaryAddress] = useState(\"\");\n  const [upiId, setUpiId] = useState(\"\");\n  const [upiPhoneNumber, setUpiPhoneNumber] = useState(\"\");\n  const [backToMenu, setBackToMenu] = useState(false);\n  const [checkedOneForex, setCheckedOneForex] = useState(false);\n  const [allApiData, setAllApiData] = useState();\n  const [forexPathId, setForexPathId] = useState(\"\");\n  const [forexQuote, setForexQuote] = useState([]);\n  const [otpForex, setOtpForex] = useState(\"\");\n  const [updatedForexBalance, setUpdatedForexBalance] = useState([]);\n\n  //sidebar\n  const [isClose, setIsClose] = useState(false);\n\n  //toggle balance when vaults type change\n  const [check, setCheck] = useState(false);\n\n  //onhold admin change\n  const [onhold, setOnHold] = useState(\"\");\n\n  //Google map\n  const [directions, setDirections] = useState(null);\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [showDirections, setShowDirections] = useState(true);\n  const [searchTerm, setSearchterm] = useState(\"\");\n  const [pathItemSelected, setPathItemSelected] = useState(false);\n  const [pathItemStep, setPathItemStep] = useState(1);\n  const [selectedPathItem, setSelectedPathItem] = useState([]);\n  const [allSteps, setAllSteps] = useState([]);\n  const [stepsToggle, setStepsToggle] = useState(false);\n\n  //add path form\n  const [pathSteps, setPathSteps] = useState({\n    email: \"\",\n    nameOfPath: \"\",\n    description: \"\",\n    length: \"\",\n    path_type: \"\",\n    step_ids: [],\n    destination_institution: \"\"\n  });\n  const [selectedSteps, setSelectedSteps] = useState([]);\n  const [creatingPath, setCreatingPath] = useState(false);\n  const [mypathsMenu, setMypathsMenu] = useState(\"Paths\");\n  const [currentStepData, setCurrentStepData] = useState(\"\");\n  const [currentStepdataPathId, setCurrentStepDataPathId] = useState(\"\");\n  const [currentStepDataLength, setCurrentStepDataLength] = useState();\n  const [showPathDetails, setShowPathDetails] = useState(false);\n  const [preLoginMenu, setPreLoginMenu] = useState(\"About Us\");\n  const [schoolSearch, setSchoolSearch] = useState(\"\");\n  const [programSearch, setProgramSearch] = useState(\"\");\n  const [showDdown, setShowDdown] = useState(\"\");\n  const [preLoginPathViewData, setPreLoginPathViewData] = useState([]);\n  const [showPreLoginModal, setShowPreLoginModal] = useState(false);\n  const [checkForHistory, setCheckForHistory] = useState(false);\n  const [preLoginHistoryData, setPreLoginHistoryData] = useState([]);\n  const [allServices, setAllServices] = useState([]);\n  const [servicesToggle, setServicesToggle] = useState(false);\n\n  // transaction page\n  const [transactionSelected, setTransactionSelected] = useState(false);\n  const [transactionData, setTransactionData] = useState([]);\n\n  // Forex Currency Add Action\n  const [paymentMethodData, setPaymentMethodData] = useState([]);\n  const [selectedPaymentMethod, setSelectedPaymentMethod] = useState(\"\");\n  const [addForexAmount, setAddForexAmount] = useState();\n\n  //mob single directory product page\n  const [selectedDirectoryProduct, setSelectedDirectoryProduct] = useState([]);\n\n  //mob single service product page\n  const [selecteServiceProduct, setSelectedSingleProduct] = useState([]);\n  const [stepServices, setStepServices] = useState([]);\n  useEffect(() => {\n    if (coinType == \"bonds\" || coinType == \"moneyMarkets\") {\n      // console.log('bonds');\n      setCheck(true);\n    } else {\n      // console.log('others');\n      setCheck(false);\n    }\n  }, [coinType]);\n  useEffect(() => {\n    axios.get(`https://comms.globalxchange.io/coin/vault/countries/data/get`).then(({\n      data\n    }) => {\n      if (data.status) {\n        setCountryApiValue(data === null || data === void 0 ? void 0 : data.countries);\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CoinContext.Provider, {\n    value: {\n      coinActionEnabled,\n      setCoinActionEnabled,\n      addBankingEnabled,\n      setAddBankingEnabled,\n      coinAction,\n      setCoinAction,\n      swapMenu,\n      setSwapMenu,\n      coinType,\n      setCoinType,\n      trackerType,\n      setTrackerType,\n      placeholder,\n      setPlaceholder,\n      selectedCoin,\n      setSelectedCoin,\n      swapActionStep,\n      setSwapActionStep,\n      selectedSwapAction,\n      setSelectedSwapAction,\n      enteredSwapValue,\n      setEnteredSwapValue,\n      buyResult,\n      setBuyResult,\n      sellResult,\n      setSellResult,\n      buyQuote,\n      setBuyQuote,\n      sellQuote,\n      setSellQuote,\n      fromAsset,\n      setFromAsset,\n      assetName,\n      setAssetName,\n      selectAsset,\n      setSelectAsset,\n      updateAfterTrade,\n      setUpdateAfterTrade,\n      senbtnClicked,\n      setSendBtnClicked,\n      // Withdraw Action\n      step,\n      setStep,\n      addressTerm,\n      setAddressTerm,\n      fromTerm,\n      setFromTerm,\n      toTerm,\n      setToTerm,\n      checkedOne,\n      setCheckedOne,\n      checkedTwo,\n      setCheckedTwo,\n      initiateWithdraw,\n      setInitiateWithdraw,\n      isWithdrawConfirmed,\n      setIsWithdrawConfirmed,\n      // Forex Currency Action\n      addApiValue,\n      setAddApiValue,\n      addApiValueCoin,\n      setAddApiValueCoin,\n      toCurrencyApiValue,\n      setToCurrencyApiValue,\n      countryApiValue,\n      setCountryApiValue,\n      payMethodApiValue,\n      setPayMethodApiValue,\n      eachCardShowValue,\n      setEachCardShowValue,\n      fundingCurrency,\n      setFundingCurrency,\n      payMethod,\n      setPayMethod,\n      otcDesk,\n      setOtcDesk,\n      currentStep,\n      setCurrentStep,\n      newWholeValue,\n      setNewWholeValue,\n      fromCurrencyData,\n      setFromCurrencyData,\n      enterAmount,\n      setEnterAmount,\n      otcApiValue,\n      setOtcApiValue,\n      selectedTab,\n      setSelectedTab,\n      confirmAmount,\n      setConfirmAmount,\n      bankerId,\n      setBankerId,\n      isCoinLoadingInAddAction,\n      setCoinLoadingInAddAction,\n      updateVaultData,\n      setUpdateVaultData,\n      updateBondVaultData,\n      setUpdateBondVaultData,\n      updateMMVaultData,\n      setUpdateMMVaultData,\n      sendVerificationMail,\n      setSendVerificationMail,\n      otp,\n      setOtp,\n      addActionStep,\n      setAddActionStep,\n      hashText,\n      setHashText,\n      submitHashEnabled,\n      setSubmitHashEnabled,\n      addForexCurrencyValue,\n      setAddForexCurrencyValue,\n      confirmQuote,\n      setConfirmQuote,\n      isAddingForexLoading,\n      setIsAddingForexLoading,\n      bankAccountId,\n      setBankAccountId,\n      transferActionStep,\n      setTransferActionStep,\n      transferAmount,\n      setTransferAmount,\n      transferMethod,\n      setTransferMethod,\n      withdrawForexStep,\n      setWithdrawForexStep,\n      withdrawForexCurrency,\n      setWithdrawForexCurrency,\n      withdrawForexCountry,\n      setWithdrawForexCountry,\n      withdrawForexPaymentMethod,\n      setWithdrawForexPaymentMethod,\n      withdrawForexOtcDesk,\n      setWithdrawForexOtcDesk,\n      withdrawForexAccountId,\n      setWithdrawForexAccountId,\n      withdrawForexAccountName,\n      setWithdrawForexAccountName,\n      withdrawForexEnteredAmount,\n      setWithdrawForexEnteredAmount,\n      checkedOneForex,\n      setCheckedOneForex,\n      allApiData,\n      setAllApiData,\n      forexPathId,\n      setForexPathId,\n      forexQuote,\n      setForexQuote,\n      otpForex,\n      setOtpForex,\n      updatedForexBalance,\n      setUpdatedForexBalance,\n      addBankAccountStep,\n      setAddBankAccountStep,\n      bankingPaymentMethod,\n      setBankingPaymentMethod,\n      instituteName,\n      setInstituteName,\n      instituteId,\n      setInstituteId,\n      nameOnBankAccount,\n      setNameOnBankAccount,\n      bankingPhoneNumber,\n      setBankingPhoneNumber,\n      beneficiaryAddress,\n      setBeneficiaryAddress,\n      upiId,\n      setUpiId,\n      upiPhoneNumber,\n      setUpiPhoneNumber,\n      enableAccountCreation,\n      setEnableAccountCreation,\n      addBankAccountLoading,\n      setAddBankAccountLoading,\n      updateBankAccounts,\n      setUpdateBankAccounts,\n      finalToAmountValue,\n      setFinalToAmountValue,\n      pathData,\n      setPathData,\n      //Add Account States\n      addAccountStepName,\n      setAddAccountStepName,\n      selectedPaymentType,\n      setSelectedPaymentType,\n      selectedBankType,\n      setSelectedBankType,\n      selectedCountry,\n      setSelectedCountry,\n      backToMenu,\n      setBackToMenu,\n      //sidebar\n      isClose,\n      setIsClose,\n      //toggle\n      check,\n      setCheck,\n      //onhold admin change\n      onhold,\n      setOnHold,\n      //Google maps\n      directions,\n      setDirections,\n      selectedLocation,\n      setSelectedLocation,\n      showDirections,\n      setShowDirections,\n      searchTerm,\n      setSearchterm,\n      pathItemSelected,\n      setPathItemSelected,\n      pathItemStep,\n      setPathItemStep,\n      selectedPathItem,\n      setSelectedPathItem,\n      allSteps,\n      setAllSteps,\n      stepsToggle,\n      setStepsToggle,\n      //add path form\n      pathSteps,\n      setPathSteps,\n      selectedSteps,\n      setSelectedSteps,\n      creatingPath,\n      setCreatingPath,\n      mypathsMenu,\n      setMypathsMenu,\n      currentStepData,\n      setCurrentStepData,\n      currentStepdataPathId,\n      setCurrentStepDataPathId,\n      currentStepDataLength,\n      setCurrentStepDataLength,\n      showPathDetails,\n      setShowPathDetails,\n      preLoginMenu,\n      setPreLoginMenu,\n      schoolSearch,\n      setSchoolSearch,\n      programSearch,\n      setProgramSearch,\n      showDdown,\n      setShowDdown,\n      preLoginPathViewData,\n      setPreLoginPathViewData,\n      showPreLoginModal,\n      setShowPreLoginModal,\n      checkForHistory,\n      setCheckForHistory,\n      preLoginHistoryData,\n      setPreLoginHistoryData,\n      allServices,\n      setAllServices,\n      servicesToggle,\n      setServicesToggle,\n      // transaction page\n      transactionSelected,\n      setTransactionSelected,\n      transactionData,\n      setTransactionData,\n      // Forex Currency Add Action\n      paymentMethodData,\n      setPaymentMethodData,\n      selectedPaymentMethod,\n      setSelectedPaymentMethod,\n      addForexAmount,\n      setAddForexAmount,\n      //mob single directory product page\n      selectedDirectoryProduct,\n      setSelectedDirectoryProduct,\n      //mob single service product page\n      selecteServiceProduct,\n      setSelectedSingleProduct,\n      stepServices,\n      setStepServices\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n};\n_s(CoinContextProvider, \"B3wOf+jCZMWy+FeGiZ5/m9NMkJo=\");\n_c = CoinContextProvider;\nexport const useCoinContextData = () => {\n  _s2();\n  return useContext(CoinContext);\n};\n_s2(useCoinContextData, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CoinContextProvider\");","map":{"version":3,"names":["axios","React","createContext","useContext","useEffect","useState","jsxDEV","_jsxDEV","CoinContext","CoinContextProvider","children","_s","coinActionEnabled","setCoinActionEnabled","addBankingEnabled","setAddBankingEnabled","coinType","setCoinType","trackerType","setTrackerType","coinAction","setCoinAction","swapMenu","setSwapMenu","placeholder","setPlaceholder","senbtnClicked","setSendBtnClicked","selectedCoin","setSelectedCoin","swapActionStep","setSwapActionStep","selectedSwapAction","setSelectedSwapAction","enteredSwapValue","setEnteredSwapValue","buyResult","setBuyResult","sellResult","setSellResult","buyQuote","setBuyQuote","sellQuote","setSellQuote","fromAsset","setFromAsset","assetName","setAssetName","selectAsset","setSelectAsset","updateAfterTrade","setUpdateAfterTrade","step","setStep","addressTerm","setAddressTerm","fromTerm","setFromTerm","toTerm","setToTerm","checkedOne","setCheckedOne","checkedTwo","setCheckedTwo","initiateWithdraw","setInitiateWithdraw","isWithdrawConfirmed","setIsWithdrawConfirmed","addApiValue","setAddApiValue","addApiValueCoin","setAddApiValueCoin","toCurrencyApiValue","setToCurrencyApiValue","countryApiValue","setCountryApiValue","payMethodApiValue","setPayMethodApiValue","eachCardShowValue","setEachCardShowValue","fundingCurrency","setFundingCurrency","payMethod","setPayMethod","otcDesk","setOtcDesk","currentStep","setCurrentStep","newWholeValue","setNewWholeValue","step1","step2","step3","step4","fromCurrencyData","setFromCurrencyData","bankerId","setBankerId","enterAmount","setEnterAmount","otcApiValue","setOtcApiValue","selectedTab","setSelectedTab","isCoinLoadingInAddAction","setCoinLoadingInAddAction","updateVaultData","setUpdateVaultData","updateBondVaultData","setUpdateBondVaultData","updateMMVaultData","setUpdateMMVaultData","updateBankAccounts","setUpdateBankAccounts","finalToAmountValue","setFinalToAmountValue","pathData","setPathData","sendVerificationMail","setSendVerificationMail","otp","setOtp","confirmAmount","setConfirmAmount","confirmQuote","setConfirmQuote","addActionStep","setAddActionStep","hashText","setHashText","submitHashEnabled","setSubmitHashEnabled","transferActionStep","setTransferActionStep","transferAmount","setTransferAmount","transferMethod","setTransferMethod","addForexCurrencyValue","setAddForexCurrencyValue","bankAccountId","setBankAccountId","isAddingForexLoading","setIsAddingForexLoading","withdrawForexStep","setWithdrawForexStep","withdrawForexCurrency","setWithdrawForexCurrency","withdrawForexCountry","setWithdrawForexCountry","withdrawForexPaymentMethod","setWithdrawForexPaymentMethod","withdrawForexOtcDesk","setWithdrawForexOtcDesk","withdrawForexAccountId","setWithdrawForexAccountId","withdrawForexAccountName","setWithdrawForexAccountName","withdrawForexEnteredAmount","setWithdrawForexEnteredAmount","addBankAccountStep","setAddBankAccountStep","addAccountStepName","setAddAccountStepName","bankingPaymentMethod","setBankingPaymentMethod","instituteName","setInstituteName","instituteId","setInstituteId","enableAccountCreation","setEnableAccountCreation","addBankAccountLoading","setAddBankAccountLoading","selectedPaymentType","setSelectedPaymentType","selectedBankType","setSelectedBankType","selectedCountry","setSelectedCountry","nameOnBankAccount","setNameOnBankAccount","bankingPhoneNumber","setBankingPhoneNumber","beneficiaryAddress","setBeneficiaryAddress","upiId","setUpiId","upiPhoneNumber","setUpiPhoneNumber","backToMenu","setBackToMenu","checkedOneForex","setCheckedOneForex","allApiData","setAllApiData","forexPathId","setForexPathId","forexQuote","setForexQuote","otpForex","setOtpForex","updatedForexBalance","setUpdatedForexBalance","isClose","setIsClose","check","setCheck","onhold","setOnHold","directions","setDirections","selectedLocation","setSelectedLocation","showDirections","setShowDirections","searchTerm","setSearchterm","pathItemSelected","setPathItemSelected","pathItemStep","setPathItemStep","selectedPathItem","setSelectedPathItem","allSteps","setAllSteps","stepsToggle","setStepsToggle","pathSteps","setPathSteps","email","nameOfPath","description","length","path_type","step_ids","destination_institution","selectedSteps","setSelectedSteps","creatingPath","setCreatingPath","mypathsMenu","setMypathsMenu","currentStepData","setCurrentStepData","currentStepdataPathId","setCurrentStepDataPathId","currentStepDataLength","setCurrentStepDataLength","showPathDetails","setShowPathDetails","preLoginMenu","setPreLoginMenu","schoolSearch","setSchoolSearch","programSearch","setProgramSearch","showDdown","setShowDdown","preLoginPathViewData","setPreLoginPathViewData","showPreLoginModal","setShowPreLoginModal","checkForHistory","setCheckForHistory","preLoginHistoryData","setPreLoginHistoryData","allServices","setAllServices","servicesToggle","setServicesToggle","transactionSelected","setTransactionSelected","transactionData","setTransactionData","paymentMethodData","setPaymentMethodData","selectedPaymentMethod","setSelectedPaymentMethod","addForexAmount","setAddForexAmount","selectedDirectoryProduct","setSelectedDirectoryProduct","selecteServiceProduct","setSelectedSingleProduct","stepServices","setStepServices","get","then","data","status","countries","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCoinContextData","_s2","$RefreshReg$"],"sources":["C:/Users/chint/Downloads/Naaviverse 2/naaviverse-frontend/src/context/CoinContext.js"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\r\n\r\nexport const CoinContext = createContext();\r\n\r\nexport const CoinContextProvider = ({ children }) => {\r\n  const [coinActionEnabled, setCoinActionEnabled] = useState(false);\r\n  const [addBankingEnabled, setAddBankingEnabled] = useState(false);\r\n  const [coinType, setCoinType] = useState(\"crypto\");\r\n  const [trackerType, setTrackerType] = useState(\"deposit\");\r\n  const [coinAction, setCoinAction] = useState([\"Menu\"]);\r\n  const [swapMenu, setSwapMenu] = useState(false);\r\n  const [placeholder, setPlaceholder] = useState(\"Search Crypto Vaults\");\r\n  const [senbtnClicked, setSendBtnClicked] = useState(\"\");\r\n  const [selectedCoin, setSelectedCoin] = useState({});\r\n  const [swapActionStep, setSwapActionStep] = useState(\"step1\");\r\n  const [selectedSwapAction, setSelectedSwapAction] = useState(\"\");\r\n  const [enteredSwapValue, setEnteredSwapValue] = useState();\r\n  const [buyResult, setBuyResult] = useState([]);\r\n  const [sellResult, setSellResult] = useState([]);\r\n  const [buyQuote, setBuyQuote] = useState([]);\r\n  const [sellQuote, setSellQuote] = useState([]);\r\n\r\n  const [fromAsset, setFromAsset] = useState({});\r\n  const [assetName, setAssetName] = useState(\"\");\r\n  const [selectAsset, setSelectAsset] = useState(false);\r\n  const [updateAfterTrade, setUpdateAfterTrade] = useState(false);\r\n\r\n  // Withdraw Action states\r\n  const [step, setStep] = useState(1);\r\n  const [addressTerm, setAddressTerm] = useState(\"\");\r\n  const [fromTerm, setFromTerm] = useState(\"\");\r\n  const [toTerm, setToTerm] = useState(\"\");\r\n  const [checkedOne, setCheckedOne] = useState(false);\r\n  const [checkedTwo, setCheckedTwo] = useState(false);\r\n  const [initiateWithdraw, setInitiateWithdraw] = useState(false);\r\n  const [isWithdrawConfirmed, setIsWithdrawConfirmed] = useState(false);\r\n\r\n  // Forex Currency Action\r\n  const [addApiValue, setAddApiValue] = useState();\r\n  const [addApiValueCoin, setAddApiValueCoin] = useState();\r\n  const [toCurrencyApiValue, setToCurrencyApiValue] = useState();\r\n  const [countryApiValue, setCountryApiValue] = useState();\r\n  const [payMethodApiValue, setPayMethodApiValue] = useState();\r\n  const [eachCardShowValue, setEachCardShowValue] = useState();\r\n  const [fundingCurrency, setFundingCurrency] = useState(false);\r\n  const [payMethod, setPayMethod] = useState(false);\r\n  const [otcDesk, setOtcDesk] = useState(false);\r\n  const [currentStep, setCurrentStep] = useState(\"step1\");\r\n  const [newWholeValue, setNewWholeValue] = useState({\r\n    step1: \"\",\r\n    step2: \"\",\r\n    step3: \"\",\r\n    step4: \"\",\r\n  });\r\n  const [fromCurrencyData, setFromCurrencyData] = useState({\r\n    step1: \"\",\r\n    step2: \"\",\r\n    step3: \"\",\r\n    step4: \"\",\r\n  });\r\n  const [bankerId, setBankerId] = useState(\"\");\r\n  const [enterAmount, setEnterAmount] = useState(false);\r\n  const [otcApiValue, setOtcApiValue] = useState();\r\n  const [selectedTab, setSelectedTab] = useState(\"sendingCurrency\");\r\n  const [isCoinLoadingInAddAction, setCoinLoadingInAddAction] = useState(false);\r\n  const [updateVaultData, setUpdateVaultData] = useState(true);\r\n  const [updateBondVaultData, setUpdateBondVaultData] = useState(true);\r\n  const [updateMMVaultData, setUpdateMMVaultData] = useState(true);\r\n  const [updateBankAccounts, setUpdateBankAccounts] = useState(true);\r\n  const [finalToAmountValue, setFinalToAmountValue] = useState();\r\n  const [pathData, setPathData] = useState();\r\n\r\n  const [sendVerificationMail, setSendVerificationMail] = useState(false);\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [confirmAmount, setConfirmAmount] = useState(false);\r\n  const [confirmQuote, setConfirmQuote] = useState(false);\r\n\r\n  const [addActionStep, setAddActionStep] = useState(1);\r\n  const [hashText, setHashText] = useState(\"\");\r\n  const [submitHashEnabled, setSubmitHashEnabled] = useState(false);\r\n\r\n  const [transferActionStep, setTransferActionStep] = useState(1);\r\n  const [transferAmount, setTransferAmount] = useState();\r\n  const [transferMethod, setTransferMethod] = useState(\"bonds\");\r\n\r\n  const [addForexCurrencyValue, setAddForexCurrencyValue] = useState();\r\n  const [bankAccountId, setBankAccountId] = useState(\"\");\r\n\r\n  const [isAddingForexLoading, setIsAddingForexLoading] = useState(false);\r\n\r\n  const [withdrawForexStep, setWithdrawForexStep] = useState(\"1\");\r\n  const [withdrawForexCurrency, setWithdrawForexCurrency] = useState();\r\n  const [withdrawForexCountry, setWithdrawForexCountry] = useState();\r\n  const [withdrawForexPaymentMethod, setWithdrawForexPaymentMethod] =\r\n    useState();\r\n  const [withdrawForexOtcDesk, setWithdrawForexOtcDesk] = useState();\r\n  const [withdrawForexAccountId, setWithdrawForexAccountId] = useState();\r\n  const [withdrawForexAccountName, setWithdrawForexAccountName] = useState();\r\n  const [withdrawForexEnteredAmount, setWithdrawForexEnteredAmount] =\r\n    useState(\"\");\r\n\r\n  const [addBankAccountStep, setAddBankAccountStep] = useState(1);\r\n  const [addAccountStepName, setAddAccountStepName] = useState(\"\");\r\n  const [bankingPaymentMethod, setBankingPaymentMethod] = useState();\r\n  const [instituteName, setInstituteName] = useState();\r\n  const [instituteId, setInstituteId] = useState();\r\n\r\n  const [enableAccountCreation, setEnableAccountCreation] = useState(false);\r\n  const [addBankAccountLoading, setAddBankAccountLoading] = useState(false);\r\n\r\n  const [selectedPaymentType, setSelectedPaymentType] = useState(null);\r\n  const [selectedBankType, setSelectedBankType] = useState(null);\r\n  const [selectedCountry, setSelectedCountry] = useState(null);\r\n  const [nameOnBankAccount, setNameOnBankAccount] = useState(\"\");\r\n  const [bankingPhoneNumber, setBankingPhoneNumber] = useState(\"\");\r\n  const [beneficiaryAddress, setBeneficiaryAddress] = useState(\"\");\r\n  const [upiId, setUpiId] = useState(\"\");\r\n  const [upiPhoneNumber, setUpiPhoneNumber] = useState(\"\");\r\n\r\n  const [backToMenu, setBackToMenu] = useState(false);\r\n  const [checkedOneForex, setCheckedOneForex] = useState(false);\r\n  const [allApiData, setAllApiData] = useState();\r\n  const [forexPathId, setForexPathId] = useState(\"\");\r\n  const [forexQuote, setForexQuote] = useState([]);\r\n  const [otpForex, setOtpForex] = useState(\"\");\r\n  const [updatedForexBalance, setUpdatedForexBalance] = useState([]);\r\n\r\n  //sidebar\r\n  const [isClose, setIsClose] = useState(false);\r\n\r\n  //toggle balance when vaults type change\r\n  const [check, setCheck] = useState(false);\r\n\r\n  //onhold admin change\r\n  const [onhold, setOnHold] = useState(\"\");\r\n\r\n  //Google map\r\n  const [directions, setDirections] = useState(null);\r\n  const [selectedLocation, setSelectedLocation] = useState(null);\r\n  const [showDirections, setShowDirections] = useState(true);\r\n\r\n  const [searchTerm, setSearchterm] = useState(\"\");\r\n  const [pathItemSelected, setPathItemSelected] = useState(false);\r\n  const [pathItemStep, setPathItemStep] = useState(1);\r\n  const [selectedPathItem, setSelectedPathItem] = useState([]);\r\n  const [allSteps, setAllSteps] = useState([]);\r\n  const [stepsToggle, setStepsToggle] = useState(false);\r\n\r\n  //add path form\r\n  const [pathSteps, setPathSteps] = useState({\r\n    email: \"\",\r\n    nameOfPath: \"\",\r\n    description: \"\",\r\n    length: \"\",\r\n    path_type: \"\",\r\n    step_ids: [],\r\n    destination_institution: \"\",\r\n  });\r\n  const [selectedSteps, setSelectedSteps] = useState([]);\r\n  const [creatingPath, setCreatingPath] = useState(false);\r\n  const [mypathsMenu, setMypathsMenu] = useState(\"Paths\");\r\n  const [currentStepData, setCurrentStepData] = useState(\"\");\r\n  const [currentStepdataPathId, setCurrentStepDataPathId] = useState(\"\");\r\n  const [currentStepDataLength, setCurrentStepDataLength] = useState();\r\n  const [showPathDetails, setShowPathDetails] = useState(false);\r\n  const [preLoginMenu, setPreLoginMenu] = useState(\"About Us\");\r\n  const [schoolSearch, setSchoolSearch] = useState(\"\");\r\n  const [programSearch, setProgramSearch] = useState(\"\");\r\n  const [showDdown, setShowDdown] = useState(\"\");\r\n  const [preLoginPathViewData, setPreLoginPathViewData] = useState([]);\r\n  const [showPreLoginModal, setShowPreLoginModal] = useState(false);\r\n  const [checkForHistory, setCheckForHistory] = useState(false);\r\n  const [preLoginHistoryData, setPreLoginHistoryData] = useState([]);\r\n  const [allServices, setAllServices] = useState([]);\r\n  const [servicesToggle, setServicesToggle] = useState(false);\r\n\r\n  // transaction page\r\n  const [transactionSelected, setTransactionSelected] = useState(false);\r\n  const [transactionData, setTransactionData] = useState([]);\r\n\r\n  // Forex Currency Add Action\r\n  const [paymentMethodData, setPaymentMethodData] = useState([]);\r\n  const [selectedPaymentMethod, setSelectedPaymentMethod] = useState(\"\");\r\n  const [addForexAmount, setAddForexAmount] = useState();\r\n\r\n  //mob single directory product page\r\n  const [selectedDirectoryProduct, setSelectedDirectoryProduct] = useState([]);\r\n\r\n  //mob single service product page\r\n  const [selecteServiceProduct, setSelectedSingleProduct] = useState([]);\r\n\r\n  const [ stepServices, setStepServices] = useState([])\r\n\r\n  useEffect(() => {\r\n    if (coinType == \"bonds\" || coinType == \"moneyMarkets\") {\r\n      // console.log('bonds');\r\n      setCheck(true);\r\n    } else {\r\n      // console.log('others');\r\n      setCheck(false);\r\n    }\r\n  }, [coinType]);\r\n\r\n  useEffect(() => {\r\n    axios.get(`https://comms.globalxchange.io/coin/vault/countries/data/get`).then(({data}) => {\r\n        if(data.status){\r\n          setCountryApiValue(data?.countries)\r\n        }\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <CoinContext.Provider\r\n      value={{\r\n        coinActionEnabled,\r\n        setCoinActionEnabled,\r\n        addBankingEnabled,\r\n        setAddBankingEnabled,\r\n        coinAction,\r\n        setCoinAction,\r\n        swapMenu,\r\n        setSwapMenu,\r\n        coinType,\r\n        setCoinType,\r\n        trackerType,\r\n        setTrackerType,\r\n        placeholder,\r\n        setPlaceholder,\r\n        selectedCoin,\r\n        setSelectedCoin,\r\n        swapActionStep,\r\n        setSwapActionStep,\r\n        selectedSwapAction,\r\n        setSelectedSwapAction,\r\n        enteredSwapValue,\r\n        setEnteredSwapValue,\r\n        buyResult,\r\n        setBuyResult,\r\n        sellResult,\r\n        setSellResult,\r\n        buyQuote,\r\n        setBuyQuote,\r\n        sellQuote,\r\n        setSellQuote,\r\n        fromAsset,\r\n        setFromAsset,\r\n        assetName,\r\n        setAssetName,\r\n        selectAsset,\r\n        setSelectAsset,\r\n        updateAfterTrade,\r\n        setUpdateAfterTrade,\r\n        senbtnClicked,\r\n        setSendBtnClicked,\r\n\r\n        // Withdraw Action\r\n        step,\r\n        setStep,\r\n        addressTerm,\r\n        setAddressTerm,\r\n        fromTerm,\r\n        setFromTerm,\r\n        toTerm,\r\n        setToTerm,\r\n        checkedOne,\r\n        setCheckedOne,\r\n        checkedTwo,\r\n        setCheckedTwo,\r\n        initiateWithdraw,\r\n        setInitiateWithdraw,\r\n        isWithdrawConfirmed,\r\n        setIsWithdrawConfirmed,\r\n\r\n        // Forex Currency Action\r\n        addApiValue,\r\n        setAddApiValue,\r\n        addApiValueCoin,\r\n        setAddApiValueCoin,\r\n        toCurrencyApiValue,\r\n        setToCurrencyApiValue,\r\n        countryApiValue,\r\n        setCountryApiValue,\r\n        payMethodApiValue,\r\n        setPayMethodApiValue,\r\n        eachCardShowValue,\r\n        setEachCardShowValue,\r\n        fundingCurrency,\r\n        setFundingCurrency,\r\n        payMethod,\r\n        setPayMethod,\r\n        otcDesk,\r\n        setOtcDesk,\r\n        currentStep,\r\n        setCurrentStep,\r\n        newWholeValue,\r\n        setNewWholeValue,\r\n        fromCurrencyData,\r\n        setFromCurrencyData,\r\n        enterAmount,\r\n        setEnterAmount,\r\n        otcApiValue,\r\n        setOtcApiValue,\r\n        selectedTab,\r\n        setSelectedTab,\r\n        confirmAmount,\r\n        setConfirmAmount,\r\n        bankerId,\r\n        setBankerId,\r\n        isCoinLoadingInAddAction,\r\n        setCoinLoadingInAddAction,\r\n\r\n        updateVaultData,\r\n        setUpdateVaultData,\r\n        updateBondVaultData,\r\n        setUpdateBondVaultData,\r\n        updateMMVaultData,\r\n        setUpdateMMVaultData,\r\n\r\n        sendVerificationMail,\r\n        setSendVerificationMail,\r\n        otp,\r\n        setOtp,\r\n\r\n        addActionStep,\r\n        setAddActionStep,\r\n        hashText,\r\n        setHashText,\r\n        submitHashEnabled,\r\n        setSubmitHashEnabled,\r\n\r\n        addForexCurrencyValue,\r\n        setAddForexCurrencyValue,\r\n        confirmQuote,\r\n        setConfirmQuote,\r\n        isAddingForexLoading,\r\n        setIsAddingForexLoading,\r\n        bankAccountId,\r\n        setBankAccountId,\r\n\r\n        transferActionStep,\r\n        setTransferActionStep,\r\n        transferAmount,\r\n        setTransferAmount,\r\n        transferMethod,\r\n        setTransferMethod,\r\n\r\n        withdrawForexStep,\r\n        setWithdrawForexStep,\r\n        withdrawForexCurrency,\r\n        setWithdrawForexCurrency,\r\n        withdrawForexCountry,\r\n        setWithdrawForexCountry,\r\n        withdrawForexPaymentMethod,\r\n        setWithdrawForexPaymentMethod,\r\n        withdrawForexOtcDesk,\r\n        setWithdrawForexOtcDesk,\r\n        withdrawForexAccountId,\r\n        setWithdrawForexAccountId,\r\n        withdrawForexAccountName,\r\n        setWithdrawForexAccountName,\r\n        withdrawForexEnteredAmount,\r\n        setWithdrawForexEnteredAmount,\r\n        checkedOneForex,\r\n        setCheckedOneForex,\r\n        allApiData,\r\n        setAllApiData,\r\n        forexPathId,\r\n        setForexPathId,\r\n        forexQuote,\r\n        setForexQuote,\r\n        otpForex,\r\n        setOtpForex,\r\n        updatedForexBalance,\r\n        setUpdatedForexBalance,\r\n\r\n        addBankAccountStep,\r\n        setAddBankAccountStep,\r\n\r\n        bankingPaymentMethod,\r\n        setBankingPaymentMethod,\r\n        instituteName,\r\n        setInstituteName,\r\n        instituteId,\r\n        setInstituteId,\r\n        nameOnBankAccount,\r\n        setNameOnBankAccount,\r\n        bankingPhoneNumber,\r\n        setBankingPhoneNumber,\r\n        beneficiaryAddress,\r\n        setBeneficiaryAddress,\r\n        upiId,\r\n        setUpiId,\r\n        upiPhoneNumber,\r\n        setUpiPhoneNumber,\r\n        enableAccountCreation,\r\n        setEnableAccountCreation,\r\n        addBankAccountLoading,\r\n        setAddBankAccountLoading,\r\n        updateBankAccounts,\r\n        setUpdateBankAccounts,\r\n        finalToAmountValue,\r\n        setFinalToAmountValue,\r\n        pathData,\r\n        setPathData,\r\n\r\n        //Add Account States\r\n        addAccountStepName,\r\n        setAddAccountStepName,\r\n        selectedPaymentType,\r\n        setSelectedPaymentType,\r\n        selectedBankType,\r\n        setSelectedBankType,\r\n        selectedCountry,\r\n        setSelectedCountry,\r\n        backToMenu,\r\n        setBackToMenu,\r\n\r\n        //sidebar\r\n        isClose,\r\n        setIsClose,\r\n\r\n        //toggle\r\n        check,\r\n        setCheck,\r\n\r\n        //onhold admin change\r\n        onhold,\r\n        setOnHold,\r\n\r\n        //Google maps\r\n        directions,\r\n        setDirections,\r\n        selectedLocation,\r\n        setSelectedLocation,\r\n        showDirections,\r\n        setShowDirections,\r\n\r\n        searchTerm,\r\n        setSearchterm,\r\n        pathItemSelected,\r\n        setPathItemSelected,\r\n        pathItemStep,\r\n        setPathItemStep,\r\n        selectedPathItem,\r\n        setSelectedPathItem,\r\n        allSteps,\r\n        setAllSteps,\r\n        stepsToggle,\r\n        setStepsToggle,\r\n\r\n        //add path form\r\n        pathSteps,\r\n        setPathSteps,\r\n        selectedSteps,\r\n        setSelectedSteps,\r\n        creatingPath,\r\n        setCreatingPath,\r\n        mypathsMenu,\r\n        setMypathsMenu,\r\n        currentStepData,\r\n        setCurrentStepData,\r\n        currentStepdataPathId,\r\n        setCurrentStepDataPathId,\r\n        currentStepDataLength,\r\n        setCurrentStepDataLength,\r\n        showPathDetails,\r\n        setShowPathDetails,\r\n        preLoginMenu,\r\n        setPreLoginMenu,\r\n        schoolSearch,\r\n        setSchoolSearch,\r\n        programSearch,\r\n        setProgramSearch,\r\n        showDdown,\r\n        setShowDdown,\r\n        preLoginPathViewData,\r\n        setPreLoginPathViewData,\r\n        showPreLoginModal,\r\n        setShowPreLoginModal,\r\n        checkForHistory,\r\n        setCheckForHistory,\r\n        preLoginHistoryData,\r\n        setPreLoginHistoryData,\r\n        allServices,\r\n        setAllServices,\r\n        servicesToggle,\r\n        setServicesToggle,\r\n\r\n        // transaction page\r\n        transactionSelected,\r\n        setTransactionSelected,\r\n        transactionData,\r\n        setTransactionData,\r\n\r\n        // Forex Currency Add Action\r\n        paymentMethodData,\r\n        setPaymentMethodData,\r\n        selectedPaymentMethod,\r\n        setSelectedPaymentMethod,\r\n        addForexAmount,\r\n        setAddForexAmount,\r\n\r\n        //mob single directory product page\r\n        selectedDirectoryProduct,\r\n        setSelectedDirectoryProduct,\r\n        \r\n        //mob single service product page\r\n        selecteServiceProduct,\r\n        setSelectedSingleProduct,\r\n        stepServices,\r\n        setStepServices\r\n      }}\r\n    >\r\n      {children}\r\n    </CoinContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCoinContextData = () => useContext(CoinContext);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}