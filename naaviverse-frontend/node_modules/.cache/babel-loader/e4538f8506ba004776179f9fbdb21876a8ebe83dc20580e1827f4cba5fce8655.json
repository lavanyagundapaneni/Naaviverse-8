{"ast":null,"code":"import axios from 'axios';\nimport * as jose from 'jose';\nimport { predefinedToast } from './toast';\nconst secret = 'uyrw7826^&(896GYUFWE&*#GBjkbuaf'; // secret not to be disclosed anywhere.\nconst emailDev = 'pavithran@inr.group'; // email of the developer.\n\nfunction renameFile(originalFile, newName) {\n  return new File([originalFile], newName, {\n    type: originalFile.type,\n    lastModified: originalFile.lastModified\n  });\n}\nconst signJwt = async (fileName, emailDev, secret) => {\n  try {\n    const jwts = await new jose.SignJWT({\n      name: fileName,\n      email: emailDev\n    }).setProtectedHeader({\n      alg: 'HS512'\n    }).setIssuer('gxjwtenchs512').setExpirationTime('10m').sign(new TextEncoder().encode(secret));\n    return jwts;\n  } catch (error) {\n    console.log(error, 'kjbedkjwebdw');\n  }\n};\nexport const uploadImageFunc = async (e, setImage, setLoading) => {\n  setLoading(true);\n  const fileName = `${new Date().getTime()}${e.target.files[0].name.substr(e.target.files[0].name.lastIndexOf('.'))}`;\n  const formData = new FormData();\n  const file = renameFile(e.target.files[0], fileName);\n  formData.append('files', file);\n  const path_inside_brain = 'root/';\n  const jwts = await signJwt(fileName, emailDev, secret);\n  // console.log(jwts, 'lkjkswedcf');\n  // let { data } = await axios.post(\n  //   `https://drivetest.globalxchange.io/file/dev-upload-file?email=${emailDev}&path=${path_inside_brain}&token=${jwts}&name=${fileName}`,\n  //   formData,\n  //   {\n  //     headers: {\n  //       'Access-Control-Allow-Origin': '*',\n  //     },\n  //   }\n  // );\n  let {\n    data\n  } = await axios.post(`https://insurance.apimachine.com/insurance/general/upload`, formData, {\n    headers: {\n      'Access-Control-Allow-Origin': '*'\n    }\n  });\n  if ((data === null || data === void 0 ? void 0 : data.length) > 0) {\n    var _data$, _data$2;\n    console.log(data[0], 'dfile name upload');\n    setImage( // (prev) => {\n    // console.log(\n    //   { ...prev, eachItem: data[0]?.originalname },\n    //   \"{ ...prev, eachItem: data[0]?.originalname }\"\n    // );\n    // return { ...prev, [eachItem]: data[0]?.originalname };\n    // }\n    (_data$ = data[0]) === null || _data$ === void 0 ? void 0 : _data$.urlName);\n    setLoading(false);\n    return (_data$2 = data[0]) === null || _data$2 === void 0 ? void 0 : _data$2.urlName;\n  } else {\n    predefinedToast('Error while uploading file');\n    setLoading(false);\n  }\n  // console.log(data.payload.url, 'drive uploaded img');\n  // setImage(data.payload.url);\n  // setLoading(false);\n};","map":{"version":3,"names":["axios","jose","predefinedToast","secret","emailDev","renameFile","originalFile","newName","File","type","lastModified","signJwt","fileName","jwts","SignJWT","name","email","setProtectedHeader","alg","setIssuer","setExpirationTime","sign","TextEncoder","encode","error","console","log","uploadImageFunc","e","setImage","setLoading","Date","getTime","target","files","substr","lastIndexOf","formData","FormData","file","append","path_inside_brain","data","post","headers","length","_data$","_data$2","urlName"],"sources":["C:/Users/chint/Downloads/Naaviverse 2/naaviverse-frontend/src/utils/imageUpload.js"],"sourcesContent":["import axios from 'axios';\r\nimport * as jose from 'jose';\r\nimport { predefinedToast } from './toast';\r\n\r\nconst secret = 'uyrw7826^&(896GYUFWE&*#GBjkbuaf'; // secret not to be disclosed anywhere.\r\nconst emailDev = 'pavithran@inr.group'; // email of the developer.\r\n\r\nfunction renameFile(originalFile, newName) {\r\n  return new File([originalFile], newName, {\r\n    type: originalFile.type,\r\n    lastModified: originalFile.lastModified,\r\n  });\r\n}\r\n\r\nconst signJwt = async (fileName, emailDev, secret) => {\r\n  try {\r\n    const jwts = await new jose.SignJWT({ name: fileName, email: emailDev })\r\n      .setProtectedHeader({ alg: 'HS512' })\r\n      .setIssuer('gxjwtenchs512')\r\n      .setExpirationTime('10m')\r\n      .sign(new TextEncoder().encode(secret));\r\n    return jwts;\r\n  } catch (error) {\r\n    console.log(error, 'kjbedkjwebdw');\r\n  }\r\n};\r\n\r\nexport const uploadImageFunc = async (e, setImage, setLoading) => {\r\n  setLoading(true);\r\n  const fileName = `${new Date().getTime()}${e.target.files[0].name.substr(\r\n    e.target.files[0].name.lastIndexOf('.')\r\n  )}`;\r\n  const formData = new FormData();\r\n  const file = renameFile(e.target.files[0], fileName);\r\n  formData.append('files', file);\r\n  const path_inside_brain = 'root/';\r\n\r\n  const jwts = await signJwt(fileName, emailDev, secret);\r\n  // console.log(jwts, 'lkjkswedcf');\r\n  // let { data } = await axios.post(\r\n  //   `https://drivetest.globalxchange.io/file/dev-upload-file?email=${emailDev}&path=${path_inside_brain}&token=${jwts}&name=${fileName}`,\r\n  //   formData,\r\n  //   {\r\n  //     headers: {\r\n  //       'Access-Control-Allow-Origin': '*',\r\n  //     },\r\n  //   }\r\n  // );\r\n  let { data } = await axios.post(\r\n    `https://insurance.apimachine.com/insurance/general/upload`,\r\n    formData,\r\n    {\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n      },\r\n    }\r\n  );\r\n  if (data?.length > 0) {\r\n    console.log(data[0], 'dfile name upload');\r\n    setImage(\r\n      // (prev) => {\r\n      // console.log(\r\n      //   { ...prev, eachItem: data[0]?.originalname },\r\n      //   \"{ ...prev, eachItem: data[0]?.originalname }\"\r\n      // );\r\n      // return { ...prev, [eachItem]: data[0]?.originalname };\r\n      // }\r\n      data[0]?.urlName\r\n    );\r\n    setLoading(false);\r\n    return data[0]?.urlName;\r\n  } else {\r\n    predefinedToast('Error while uploading file');\r\n    setLoading(false);\r\n  }\r\n  // console.log(data.payload.url, 'drive uploaded img');\r\n  // setImage(data.payload.url);\r\n  // setLoading(false);\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}