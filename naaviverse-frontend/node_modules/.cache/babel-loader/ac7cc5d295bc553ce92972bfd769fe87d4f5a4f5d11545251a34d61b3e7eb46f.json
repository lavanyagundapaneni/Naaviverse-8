{"ast":null,"code":"import axios from \"axios\";\n\n// Login API\nexport const Loginservice = async object => {\n  try {\n    console.log(\"Payload Sent to API:\", object); // Debugging step\n    const response = await axios.post(`/auth/login`, object, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return response;\n  } catch (error) {\n    var _error$response;\n    console.error(\"Login API Error:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw error;\n  }\n};\n\n// Register API\n// export const RegisterOnApp = async (object) => {\n//   try {\n//     const response = await axios.post(`/auth/signup`, object);\n//     return response;\n//   } catch (error) {\n//     console.error(\"Signup API Error:\", error);\n//     throw error; // Rethrow to handle it in calling code\n//   }\n// };\n_c = Loginservice;\nvar _c;\n$RefreshReg$(_c, \"Loginservice\");","map":{"version":3,"names":["axios","Loginservice","object","console","log","response","post","headers","error","_error$response","data","message","_c","$RefreshReg$"],"sources":["C:/Users/chint/Downloads/Naaviverse 2/naaviverse-frontend/src/services/loginapis.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n\r\n// Login API\r\nexport const Loginservice = async (object) => {\r\n  try {\r\n    console.log(\"Payload Sent to API:\", object); // Debugging step\r\n    const response = await axios.post(`/auth/login`, object, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    console.error(\"Login API Error:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\n// Register API\r\n// export const RegisterOnApp = async (object) => {\r\n//   try {\r\n//     const response = await axios.post(`/auth/signup`, object);\r\n//     return response;\r\n//   } catch (error) {\r\n//     console.error(\"Signup API Error:\", error);\r\n//     throw error; // Rethrow to handle it in calling code\r\n//   }\r\n// };\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAGzB;AACA,OAAO,MAAMC,YAAY,GAAG,MAAOC,MAAM,IAAK;EAC5C,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,MAAM,CAAC,CAAC,CAAC;IAC7C,MAAMG,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAE,aAAY,EAAEJ,MAAM,EAAE;MACvDK,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,OAAOF,QAAQ;EACjB,CAAC,CAAC,OAAOG,KAAK,EAAE;IAAA,IAAAC,eAAA;IACdN,OAAO,CAACK,KAAK,CAAC,kBAAkB,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBC,IAAI,KAAIF,KAAK,CAACG,OAAO,CAAC;IACxE,MAAMH,KAAK;EACb;AACF,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAI,EAAA,GAzBaX,YAAY;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}