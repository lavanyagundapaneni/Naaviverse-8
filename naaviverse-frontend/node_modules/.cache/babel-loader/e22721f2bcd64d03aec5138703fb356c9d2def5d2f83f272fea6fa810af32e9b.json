{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chint\\\\Downloads\\\\Naaviverse 2\\\\naaviverse-frontend\\\\src\\\\context\\\\VaultPageContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport { ASSET_CLASSES } from \"../configs/constants\";\nimport { useUserVaults, useVaultTxns } from \"../pages/Transactions/VaultComponent/queryHooks\";\nimport { useCoinContextData } from \"./CoinContext\";\nimport { MainContext } from \"./Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const VaultPageContext = /*#__PURE__*/createContext();\nfunction VaultPageContextProvider({\n  children\n}) {\n  _s();\n  const {\n    email\n  } = useContext(MainContext);\n  const [appSelected, setAppSelected] = useState();\n  const [vaultSelected, setVaultSelected] = useState();\n  const [assetClass, setAssetClass] = useState(ASSET_CLASSES[0]);\n  const [cpanelOpen, setCpanelOpen] = useState(false);\n  const {\n    assetClassParam\n  } = useParams();\n  const {\n    updateVaultData,\n    trackerType\n  } = useCoinContextData();\n  const appCurrencyName = \"USD\";\n\n  //stacking rewards (bonds)\n  const [bondsPagination, setBondsPagination] = useState(0);\n  const [bondsTxnsPerPage, setBondsTxnsPerPage] = useState(25);\n\n  //tracker data\n  const [trackerData, settrackerData] = useState(\"\");\n  const [trackerDataLoading, settrackerDataLoading] = useState(false);\n  const [trackerDataDeposit, settrackerDataDeposit] = useState(\"\");\n  const [assetDropdown, setassetDropdown] = useState(false);\n  const [statusDropdown, setstatusDropdown] = useState(false);\n  const [assetDropdownItems, setassetDropdownItems] = useState(\"\");\n  const [assetDropdownSelected, setassetDropdownSelected] = useState(\"\");\n  const [statusDropdownSelected, setstatusDropdownSelected] = useState(\"\");\n  const [trackerImageOpen, settrackerImageOpen] = useState(\"\");\n  const [trackingImage, setTrackingImage] = useState(\"\");\n  const [trackingImageResponse, setTrackingImageResponse] = useState(\"\");\n  const [uploadedImageTracker, setuploadedImageTracker] = useState(\"\");\n  const [uploadedDescTracker, setuploadedDescTracker] = useState(\"\");\n  const [transactionDetailSelected, setTransactionDetailSelected] = useState(\"\");\n  const [transactionId, settransactionId] = useState(\"\");\n  const [transactionDetail, setTransactionDetail] = useState(\"\");\n  const [transactionDetailSteps, setTransactionDetailSteps] = useState(\"\");\n  const [transactionDetailStepsLoading, setTransactionDetailStepsLoading] = useState(false);\n  const [imagesBtnLoading, setimagesBtnLoading] = useState(false);\n\n  //reset pagination vaults\n  useEffect(() => {\n    setBondsPagination(0);\n    setBondsTxnsPerPage(25);\n  }, [assetClass]);\n  useEffect(() => {\n    setstatusDropdown(false);\n    setassetDropdown(false);\n    // console.log(trackerType, \"trackerType vault context useffect\");\n    if (trackerType == \"withdraw\") {\n      getTracketData(`https://comms.globalxchange.io/coin/vault/service/path/withdraw/txn/get?app_code=naavi&email=${email}`);\n    } else if (assetDropdownSelected && statusDropdownSelected) {\n      getTracketData(`https://comms.globalxchange.io/coin/vault/service/path/deposit/txn/get?email=${email}&status=${statusDropdownSelected}&app_code=naavi&coin=${assetDropdownSelected}`);\n    } else if (assetDropdownSelected) {\n      getTracketData(`https://comms.globalxchange.io/coin/vault/service/path/deposit/txn/get?email=${email}&app_code=naavi&coin=${assetDropdownSelected}`);\n    } else if (statusDropdownSelected) {\n      getTracketData(`https://comms.globalxchange.io/coin/vault/service/path/deposit/txn/get?email=${email}&status=${statusDropdownSelected}&app_code=naavi`);\n    } else {\n      getTracketData(`https://comms.globalxchange.io/coin/vault/service/path/deposit/txn/get?email=${email}&app_code=naavi`);\n    }\n    assetDropdownDeposit();\n  }, [statusDropdownSelected, assetDropdownSelected, trackerType]);\n  function getTracketData(API) {\n    settrackerDataLoading(true);\n    // console.log(trackerType, 'trackerType vault context');\n    axios.get(API).then(response => {\n      var _response$data, _response$data$perApp;\n      settrackerData(response === null || response === void 0 ? void 0 : response.data);\n      if ((response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$perApp = _response$data.perAppCode) === null || _response$data$perApp === void 0 ? void 0 : _response$data$perApp.length) > 0) {\n        var _response$data2, _response$data2$perAp;\n        settrackerDataDeposit(response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$perAp = _response$data2.perAppCode[0]) === null || _response$data2$perAp === void 0 ? void 0 : _response$data2$perAp.count);\n      }\n      settrackerDataLoading(false);\n    }).catch(error => {\n      console.log(\"error on tracker data\", error === null || error === void 0 ? void 0 : error.message);\n      settrackerDataLoading(false);\n    });\n  }\n  function assetDropdownDeposit() {\n    // console.log('assetDropdownDeposit');\n    axios.get(`https://comms.globalxchange.io/coin/vault/service/path/deposit/txn/get?email=${email}&app_code=naavi`).then(response => {\n      // console.log('assetDropdownDeposit', response?.data);\n      setassetDropdownItems(response === null || response === void 0 ? void 0 : response.data);\n    }).catch(error => {\n      console.log(\"error on assetDropdownDeposit\", error === null || error === void 0 ? void 0 : error.message);\n    });\n  }\n  // function statusDropdownDeposit() {\n  //   console.log('statusDropdownDeposit');\n  //   axios\n  //     .get(\n  //       `https://comms.globalxchange.io/coin/vault/service/path/deposit/txn/get?email=${email}&app_code=naavi`\n  //     )\n  //     .then((response) => {\n  //       console.log('statusDropdownDeposit', response?.data);\n  //     })\n  //     .catch((error) => {\n  //       console.log('error on statusDropdownDeposit', error?.message);\n  //     });\n  // }\n\n  useEffect(() => {\n    const assetCls = ASSET_CLASSES.filter(assetClass => assetClass.name === assetClassParam)[0];\n    if (assetCls) setAssetClass(assetCls);\n  }, [assetClassParam]);\n  const {\n    data: vaultsListFxCrypto = [],\n    isLoading: vaultsListFxCryptoLoading,\n    refetch: refetchVaultsListFxCrypto\n  } = useUserVaults(email, assetClass === null || assetClass === void 0 ? void 0 : assetClass.name, appSelected === null || appSelected === void 0 ? void 0 : appSelected.app_code, undefined, undefined, appCurrencyName);\n  const [allDirection, setAllDirection] = useState(\"All Directions\");\n  const [allTypes, setAllTypes] = useState(\"All Types\");\n  const {\n    data: txnListFxCrypto,\n    isLoading: txnListLoadingFxCrypto = true,\n    refetch: refetchTxnListFxCrypto\n  } = useVaultTxns(email, 'naavi', vaultSelected === null || vaultSelected === void 0 ? void 0 : vaultSelected.coinSymbol, undefined, updateVaultData, appCurrencyName, allDirection, allTypes);\n\n  // const {\n  //   data: vaultsListBonds,\n  //   isLoading: vaultsListBondsLoading,\n  //   refetch: refetchVaultsListBonds,\n  // } = useUserBondsList(email, appCurrencyName);\n\n  // const {\n  //   data: txnListBonds,\n  //   isLoading: txnListLoadingBonds = true,\n  //   refetch: refetchTxnListBonds,\n  // } = useUserBondsTxns(\n  //   email,\n  //   vaultSelected?.coinSymbol,\n  //   bondsPagination,\n  //   bondsTxnsPerPage\n  // );\n\n  // const {\n  //   data: vaultsListMM,\n  //   isLoading: vaultsListLoadingMM,\n  //   refetch: refetchVaultsListMM,\n  // } = useUserMoneMarketsList(email, appSelected?.app_code, appCurrencyName);\n\n  // const {\n  //   data: txnListMM,\n  //   isLoading: txnListLoadingMM = true,\n  //   refetch: refetchtxnListMM,\n  // } = useUserMoneyMarketsTxns(\n  //   email,\n  //   vaultSelected?.coinSymbol,\n  //   appSelected?.app_code\n  // );\n\n  // const {\n  //   data: vaultsListShares,\n  //   isLoading: vaultsListLoadingShares,\n  //   refetch: refetchVaultsListShares,\n  // } = useShareTokensVaultsList(email, appSelected?.app_code);\n\n  // const {\n  //   data: txnListShares,\n  //   isLoading: txnListLoadingShares = true,\n  //   refetch: refetchtxnListShares,\n  // } = useVaultTxns(\n  //   email,\n  //   vaultSelected?.app_code,\n  //   vaultSelected?.tokens &&\n  //     vaultSelected?.tokens[0]?.token_profile_data?.coinSymbol,\n  //   vaultSelected?.profile_id,\n  //   updateVaultData,\n  //   appCurrencyName\n  // );\n\n  function refetchData() {\n    refetchVaultsListFxCrypto();\n    refetchTxnListFxCrypto();\n    // refetchVaultsListBonds();\n    // refetchTxnListBonds();\n    // refetchVaultsListMM();\n    // refetchtxnListMM();\n    // refetchVaultsListShares();\n    // refetchtxnListShares();\n  }\n\n  // useEffect(() => {\n  //   console.log(allDirection, 'allDirection');\n  //   console.log(allTypes, 'allTypes');\n  //   refetchData();\n  // }, [allDirection, allTypes]);\n\n  useEffect(() => {\n    setimagesBtnLoading(true);\n    axios.get(`https://comms.globalxchange.io/coin/vault/service/get/user/file/uploads?id=${trackingImage}`).then(response => {\n      var _response$data3;\n      // console.log(response?.data?.result, 'responsee from image traking');\n      setTrackingImageResponse(response === null || response === void 0 ? void 0 : (_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : _response$data3.result);\n      setimagesBtnLoading(false);\n    }).catch(error => {\n      console.log(error, \"errorrr from traking\");\n      setimagesBtnLoading(false);\n    });\n  }, [trackingImage, trackerImageOpen]);\n  useEffect(() => {\n    var _trackerData$txns;\n    setTransactionDetail(\"\");\n    if ((trackerData === null || trackerData === void 0 ? void 0 : (_trackerData$txns = trackerData.txns) === null || _trackerData$txns === void 0 ? void 0 : _trackerData$txns.length) > 0) {\n      var _trackerData$txns2;\n      let filteredItem = trackerData === null || trackerData === void 0 ? void 0 : (_trackerData$txns2 = trackerData.txns) === null || _trackerData$txns2 === void 0 ? void 0 : _trackerData$txns2.filter(eachTxns => {\n        return (eachTxns === null || eachTxns === void 0 ? void 0 : eachTxns._id) == transactionId;\n      });\n      setTransactionDetail(filteredItem[0]);\n    }\n  }, [transactionId]);\n  useEffect(() => {\n    setTransactionDetailStepsLoading(true);\n    if (transactionDetailSelected) {\n      axios.get(`https://comms.globalxchange.io/coin/vault/service/payment/paths/get?path_id=${transactionDetailSelected}`).then(response => {\n        var _response$data4, _response$data4$paths;\n        let res;\n        if ((response === null || response === void 0 ? void 0 : (_response$data4 = response.data) === null || _response$data4 === void 0 ? void 0 : (_response$data4$paths = _response$data4.paths) === null || _response$data4$paths === void 0 ? void 0 : _response$data4$paths.length) > 0) {\n          var _response$data5, _response$data5$paths;\n          res = response === null || response === void 0 ? void 0 : (_response$data5 = response.data) === null || _response$data5 === void 0 ? void 0 : (_response$data5$paths = _response$data5.paths[0]) === null || _response$data5$paths === void 0 ? void 0 : _response$data5$paths.total_steps;\n        }\n        // console.log(res, 'transactionDetailSelected 1');\n        let arr = Object.keys(res).map(key => {\n          return {\n            id: key,\n            ...res[key]\n          };\n        });\n        // console.log(arr, 'transactionDetailSelected 2');\n        setTransactionDetailSteps(arr);\n        setTransactionDetailStepsLoading(false);\n      }).catch(error => {\n        console.log(error === null || error === void 0 ? void 0 : error.message, \"steps detail\");\n        setTransactionDetailStepsLoading(false);\n      });\n    } else {\n      // console.log(transactionDetailSelected, 'transactionDetailSelected path');\n      setTransactionDetailStepsLoading(false);\n    }\n  }, [transactionDetailSelected, transactionId]);\n  return /*#__PURE__*/_jsxDEV(VaultPageContext.Provider, {\n    value: {\n      assetClass,\n      setAssetClass,\n      appSelected,\n      setAppSelected,\n      vaultSelected,\n      setVaultSelected,\n      cpanelOpen,\n      setCpanelOpen,\n      vaultsListFxCrypto,\n      vaultsListFxCryptoLoading,\n      // vaultsListBonds,\n      // vaultsListBondsLoading,\n      // vaultsListMM,\n      // vaultsListLoadingMM,\n      // txnListBonds,\n      // txnListLoadingBonds,\n      // txnListMM,\n      // txnListLoadingMM,\n      txnListFxCrypto,\n      txnListLoadingFxCrypto,\n      // vaultsListShares: vaultsListShares?.vaultsData,\n      // vaultsListLoadingShares,\n      // txnListShares,\n      // txnListLoadingShares,\n      refetchData,\n      trackerData,\n      trackerDataLoading,\n      trackerDataDeposit,\n      statusDropdown,\n      setstatusDropdown,\n      assetDropdown,\n      setassetDropdown,\n      assetDropdownItems,\n      setassetDropdownItems,\n      assetDropdownSelected,\n      setassetDropdownSelected,\n      statusDropdownSelected,\n      setstatusDropdownSelected,\n      trackerImageOpen,\n      settrackerImageOpen,\n      trackingImage,\n      setTrackingImage,\n      trackingImageResponse,\n      setTrackingImageResponse,\n      uploadedImageTracker,\n      setuploadedImageTracker,\n      uploadedDescTracker,\n      setuploadedDescTracker,\n      transactionDetailSelected,\n      setTransactionDetailSelected,\n      transactionId,\n      settransactionId,\n      transactionDetail,\n      setTransactionDetail,\n      transactionDetailSteps,\n      setTransactionDetailSteps,\n      transactionDetailStepsLoading,\n      setTransactionDetailStepsLoading,\n      imagesBtnLoading,\n      setimagesBtnLoading,\n      // bankAccountIdValue,\n      // setBankAccountIdValue,\n      // bankInfoValues,\n      // setbankInfoValues,\n\n      //staking rewards (bonds)\n      bondsPagination,\n      setBondsPagination,\n      bondsTxnsPerPage,\n      setBondsTxnsPerPage,\n      allDirection,\n      setAllDirection,\n      allTypes,\n      setAllTypes\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 296,\n    columnNumber: 5\n  }, this);\n}\n_s(VaultPageContextProvider, \"yX4jkT5zLyHYQuPtAXiKHO/Xq0Q=\", false, function () {\n  return [useParams, useCoinContextData, useUserVaults, useVaultTxns];\n});\n_c = VaultPageContextProvider;\nexport default VaultPageContextProvider;\nvar _c;\n$RefreshReg$(_c, \"VaultPageContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","axios","useParams","ASSET_CLASSES","useUserVaults","useVaultTxns","useCoinContextData","MainContext","jsxDEV","_jsxDEV","VaultPageContext","VaultPageContextProvider","children","_s","email","appSelected","setAppSelected","vaultSelected","setVaultSelected","assetClass","setAssetClass","cpanelOpen","setCpanelOpen","assetClassParam","updateVaultData","trackerType","appCurrencyName","bondsPagination","setBondsPagination","bondsTxnsPerPage","setBondsTxnsPerPage","trackerData","settrackerData","trackerDataLoading","settrackerDataLoading","trackerDataDeposit","settrackerDataDeposit","assetDropdown","setassetDropdown","statusDropdown","setstatusDropdown","assetDropdownItems","setassetDropdownItems","assetDropdownSelected","setassetDropdownSelected","statusDropdownSelected","setstatusDropdownSelected","trackerImageOpen","settrackerImageOpen","trackingImage","setTrackingImage","trackingImageResponse","setTrackingImageResponse","uploadedImageTracker","setuploadedImageTracker","uploadedDescTracker","setuploadedDescTracker","transactionDetailSelected","setTransactionDetailSelected","transactionId","settransactionId","transactionDetail","setTransactionDetail","transactionDetailSteps","setTransactionDetailSteps","transactionDetailStepsLoading","setTransactionDetailStepsLoading","imagesBtnLoading","setimagesBtnLoading","getTracketData","assetDropdownDeposit","API","get","then","response","_response$data","_response$data$perApp","data","perAppCode","length","_response$data2","_response$data2$perAp","count","catch","error","console","log","message","assetCls","filter","name","vaultsListFxCrypto","isLoading","vaultsListFxCryptoLoading","refetch","refetchVaultsListFxCrypto","app_code","undefined","allDirection","setAllDirection","allTypes","setAllTypes","txnListFxCrypto","txnListLoadingFxCrypto","refetchTxnListFxCrypto","coinSymbol","refetchData","_response$data3","result","_trackerData$txns","txns","_trackerData$txns2","filteredItem","eachTxns","_id","_response$data4","_response$data4$paths","res","paths","_response$data5","_response$data5$paths","total_steps","arr","Object","keys","map","key","id","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/chint/Downloads/Naaviverse 2/naaviverse-frontend/src/context/VaultPageContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { ASSET_CLASSES } from \"../configs/constants\";\r\nimport {\r\n  useUserVaults,\r\n  useVaultTxns,\r\n} from \"../pages/Transactions/VaultComponent/queryHooks\";\r\nimport { useCoinContextData } from \"./CoinContext\";\r\nimport { MainContext } from \"./Context\";\r\n\r\nexport const VaultPageContext = createContext();\r\nfunction VaultPageContextProvider({ children }) {\r\n  const { email } = useContext(MainContext);\r\n  const [appSelected, setAppSelected] = useState();\r\n  const [vaultSelected, setVaultSelected] = useState();\r\n  const [assetClass, setAssetClass] = useState(ASSET_CLASSES[0]);\r\n  const [cpanelOpen, setCpanelOpen] = useState(false);\r\n  const { assetClassParam } = useParams();\r\n  const { updateVaultData, trackerType } = useCoinContextData();\r\n  const appCurrencyName = \"USD\";\r\n\r\n  //stacking rewards (bonds)\r\n  const [bondsPagination, setBondsPagination] = useState(0);\r\n  const [bondsTxnsPerPage, setBondsTxnsPerPage] = useState(25);\r\n\r\n  //tracker data\r\n  const [trackerData, settrackerData] = useState(\"\");\r\n  const [trackerDataLoading, settrackerDataLoading] = useState(false);\r\n  const [trackerDataDeposit, settrackerDataDeposit] = useState(\"\");\r\n  const [assetDropdown, setassetDropdown] = useState(false);\r\n  const [statusDropdown, setstatusDropdown] = useState(false);\r\n  const [assetDropdownItems, setassetDropdownItems] = useState(\"\");\r\n  const [assetDropdownSelected, setassetDropdownSelected] = useState(\"\");\r\n  const [statusDropdownSelected, setstatusDropdownSelected] = useState(\"\");\r\n  const [trackerImageOpen, settrackerImageOpen] = useState(\"\");\r\n  const [trackingImage, setTrackingImage] = useState(\"\");\r\n  const [trackingImageResponse, setTrackingImageResponse] = useState(\"\");\r\n  const [uploadedImageTracker, setuploadedImageTracker] = useState(\"\");\r\n  const [uploadedDescTracker, setuploadedDescTracker] = useState(\"\");\r\n  const [transactionDetailSelected, setTransactionDetailSelected] =\r\n    useState(\"\");\r\n  const [transactionId, settransactionId] = useState(\"\");\r\n  const [transactionDetail, setTransactionDetail] = useState(\"\");\r\n  const [transactionDetailSteps, setTransactionDetailSteps] = useState(\"\");\r\n  const [transactionDetailStepsLoading, setTransactionDetailStepsLoading] =\r\n    useState(false);\r\n  const [imagesBtnLoading, setimagesBtnLoading] = useState(false);\r\n\r\n  //reset pagination vaults\r\n  useEffect(() => {\r\n    setBondsPagination(0);\r\n    setBondsTxnsPerPage(25);\r\n  }, [assetClass]);\r\n\r\n  useEffect(() => {\r\n    setstatusDropdown(false);\r\n    setassetDropdown(false);\r\n    // console.log(trackerType, \"trackerType vault context useffect\");\r\n    if (trackerType == \"withdraw\") {\r\n      getTracketData(\r\n        `https://comms.globalxchange.io/coin/vault/service/path/withdraw/txn/get?app_code=naavi&email=${email}`\r\n      );\r\n    } else if (assetDropdownSelected && statusDropdownSelected) {\r\n      getTracketData(\r\n        `https://comms.globalxchange.io/coin/vault/service/path/deposit/txn/get?email=${email}&status=${statusDropdownSelected}&app_code=naavi&coin=${assetDropdownSelected}`\r\n      );\r\n    } else if (assetDropdownSelected) {\r\n      getTracketData(\r\n        `https://comms.globalxchange.io/coin/vault/service/path/deposit/txn/get?email=${email}&app_code=naavi&coin=${assetDropdownSelected}`\r\n      );\r\n    } else if (statusDropdownSelected) {\r\n      getTracketData(\r\n        `https://comms.globalxchange.io/coin/vault/service/path/deposit/txn/get?email=${email}&status=${statusDropdownSelected}&app_code=naavi`\r\n      );\r\n    } else {\r\n      getTracketData(\r\n        `https://comms.globalxchange.io/coin/vault/service/path/deposit/txn/get?email=${email}&app_code=naavi`\r\n      );\r\n    }\r\n\r\n    assetDropdownDeposit();\r\n  }, [statusDropdownSelected, assetDropdownSelected, trackerType]);\r\n\r\n  function getTracketData(API) {\r\n    settrackerDataLoading(true);\r\n    // console.log(trackerType, 'trackerType vault context');\r\n    axios\r\n      .get(API)\r\n      .then((response) => {\r\n        settrackerData(response?.data);\r\n        if (response?.data?.perAppCode?.length > 0) {\r\n          settrackerDataDeposit(response?.data?.perAppCode[0]?.count);\r\n        }\r\n        settrackerDataLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error on tracker data\", error?.message);\r\n        settrackerDataLoading(false);\r\n      });\r\n  }\r\n  function assetDropdownDeposit() {\r\n    // console.log('assetDropdownDeposit');\r\n    axios\r\n      .get(\r\n        `https://comms.globalxchange.io/coin/vault/service/path/deposit/txn/get?email=${email}&app_code=naavi`\r\n      )\r\n      .then((response) => {\r\n        // console.log('assetDropdownDeposit', response?.data);\r\n        setassetDropdownItems(response?.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error on assetDropdownDeposit\", error?.message);\r\n      });\r\n  }\r\n  // function statusDropdownDeposit() {\r\n  //   console.log('statusDropdownDeposit');\r\n  //   axios\r\n  //     .get(\r\n  //       `https://comms.globalxchange.io/coin/vault/service/path/deposit/txn/get?email=${email}&app_code=naavi`\r\n  //     )\r\n  //     .then((response) => {\r\n  //       console.log('statusDropdownDeposit', response?.data);\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.log('error on statusDropdownDeposit', error?.message);\r\n  //     });\r\n  // }\r\n\r\n  useEffect(() => {\r\n    const assetCls = ASSET_CLASSES.filter(\r\n      (assetClass) => assetClass.name === assetClassParam\r\n    )[0];\r\n    if (assetCls) setAssetClass(assetCls);\r\n  }, [assetClassParam]);\r\n\r\n  const {\r\n    data: vaultsListFxCrypto = [],\r\n    isLoading: vaultsListFxCryptoLoading,\r\n    refetch: refetchVaultsListFxCrypto,\r\n  } = useUserVaults(\r\n    email,\r\n    assetClass?.name,\r\n    appSelected?.app_code,\r\n    undefined,\r\n    undefined,\r\n    appCurrencyName\r\n  );\r\n\r\n  const [allDirection, setAllDirection] = useState(\"All Directions\");\r\n  const [allTypes, setAllTypes] = useState(\"All Types\");\r\n\r\n  const {\r\n    data: txnListFxCrypto,\r\n    isLoading: txnListLoadingFxCrypto = true,\r\n    refetch: refetchTxnListFxCrypto,\r\n  } = useVaultTxns(\r\n    email,\r\n    'naavi',\r\n    vaultSelected?.coinSymbol,\r\n    undefined,\r\n    updateVaultData,\r\n    appCurrencyName,\r\n    allDirection,\r\n    allTypes\r\n  );\r\n\r\n  // const {\r\n  //   data: vaultsListBonds,\r\n  //   isLoading: vaultsListBondsLoading,\r\n  //   refetch: refetchVaultsListBonds,\r\n  // } = useUserBondsList(email, appCurrencyName);\r\n\r\n  // const {\r\n  //   data: txnListBonds,\r\n  //   isLoading: txnListLoadingBonds = true,\r\n  //   refetch: refetchTxnListBonds,\r\n  // } = useUserBondsTxns(\r\n  //   email,\r\n  //   vaultSelected?.coinSymbol,\r\n  //   bondsPagination,\r\n  //   bondsTxnsPerPage\r\n  // );\r\n\r\n  // const {\r\n  //   data: vaultsListMM,\r\n  //   isLoading: vaultsListLoadingMM,\r\n  //   refetch: refetchVaultsListMM,\r\n  // } = useUserMoneMarketsList(email, appSelected?.app_code, appCurrencyName);\r\n\r\n  // const {\r\n  //   data: txnListMM,\r\n  //   isLoading: txnListLoadingMM = true,\r\n  //   refetch: refetchtxnListMM,\r\n  // } = useUserMoneyMarketsTxns(\r\n  //   email,\r\n  //   vaultSelected?.coinSymbol,\r\n  //   appSelected?.app_code\r\n  // );\r\n\r\n  // const {\r\n  //   data: vaultsListShares,\r\n  //   isLoading: vaultsListLoadingShares,\r\n  //   refetch: refetchVaultsListShares,\r\n  // } = useShareTokensVaultsList(email, appSelected?.app_code);\r\n\r\n  // const {\r\n  //   data: txnListShares,\r\n  //   isLoading: txnListLoadingShares = true,\r\n  //   refetch: refetchtxnListShares,\r\n  // } = useVaultTxns(\r\n  //   email,\r\n  //   vaultSelected?.app_code,\r\n  //   vaultSelected?.tokens &&\r\n  //     vaultSelected?.tokens[0]?.token_profile_data?.coinSymbol,\r\n  //   vaultSelected?.profile_id,\r\n  //   updateVaultData,\r\n  //   appCurrencyName\r\n  // );\r\n\r\n  function refetchData() {\r\n    refetchVaultsListFxCrypto();\r\n    refetchTxnListFxCrypto();\r\n    // refetchVaultsListBonds();\r\n    // refetchTxnListBonds();\r\n    // refetchVaultsListMM();\r\n    // refetchtxnListMM();\r\n    // refetchVaultsListShares();\r\n    // refetchtxnListShares();\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   console.log(allDirection, 'allDirection');\r\n  //   console.log(allTypes, 'allTypes');\r\n  //   refetchData();\r\n  // }, [allDirection, allTypes]);\r\n\r\n  useEffect(() => {\r\n    setimagesBtnLoading(true);\r\n    axios\r\n      .get(\r\n        `https://comms.globalxchange.io/coin/vault/service/get/user/file/uploads?id=${trackingImage}`\r\n      )\r\n      .then((response) => {\r\n        // console.log(response?.data?.result, 'responsee from image traking');\r\n        setTrackingImageResponse(response?.data?.result);\r\n        setimagesBtnLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error, \"errorrr from traking\");\r\n        setimagesBtnLoading(false);\r\n      });\r\n  }, [trackingImage, trackerImageOpen]);\r\n\r\n  useEffect(() => {\r\n    setTransactionDetail(\"\");\r\n    if (trackerData?.txns?.length > 0) {\r\n      let filteredItem = trackerData?.txns?.filter((eachTxns) => {\r\n        return eachTxns?._id == transactionId;\r\n      });\r\n      setTransactionDetail(filteredItem[0]);\r\n    }\r\n  }, [transactionId]);\r\n\r\n  useEffect(() => {\r\n    setTransactionDetailStepsLoading(true);\r\n    if (transactionDetailSelected) {\r\n      axios\r\n        .get(\r\n          `https://comms.globalxchange.io/coin/vault/service/payment/paths/get?path_id=${transactionDetailSelected}`\r\n        )\r\n        .then((response) => {\r\n          let res;\r\n          if (response?.data?.paths?.length > 0) {\r\n            res = response?.data?.paths[0]?.total_steps;\r\n          }\r\n          // console.log(res, 'transactionDetailSelected 1');\r\n          let arr = Object.keys(res).map((key) => {\r\n            return { id: key, ...res[key] };\r\n          });\r\n          // console.log(arr, 'transactionDetailSelected 2');\r\n          setTransactionDetailSteps(arr);\r\n          setTransactionDetailStepsLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error?.message, \"steps detail\");\r\n          setTransactionDetailStepsLoading(false);\r\n        });\r\n    } else {\r\n      // console.log(transactionDetailSelected, 'transactionDetailSelected path');\r\n      setTransactionDetailStepsLoading(false);\r\n    }\r\n  }, [transactionDetailSelected, transactionId]);\r\n\r\n  return (\r\n    <VaultPageContext.Provider\r\n      value={{\r\n        assetClass,\r\n        setAssetClass,\r\n        appSelected,\r\n        setAppSelected,\r\n        vaultSelected,\r\n        setVaultSelected,\r\n        cpanelOpen,\r\n        setCpanelOpen,\r\n        vaultsListFxCrypto,\r\n        vaultsListFxCryptoLoading,\r\n        // vaultsListBonds,\r\n        // vaultsListBondsLoading,\r\n        // vaultsListMM,\r\n        // vaultsListLoadingMM,\r\n        // txnListBonds,\r\n        // txnListLoadingBonds,\r\n        // txnListMM,\r\n        // txnListLoadingMM,\r\n        txnListFxCrypto,\r\n        txnListLoadingFxCrypto,\r\n        // vaultsListShares: vaultsListShares?.vaultsData,\r\n        // vaultsListLoadingShares,\r\n        // txnListShares,\r\n        // txnListLoadingShares,\r\n        refetchData,\r\n        trackerData,\r\n        trackerDataLoading,\r\n        trackerDataDeposit,\r\n        statusDropdown,\r\n        setstatusDropdown,\r\n        assetDropdown,\r\n        setassetDropdown,\r\n        assetDropdownItems,\r\n        setassetDropdownItems,\r\n        assetDropdownSelected,\r\n        setassetDropdownSelected,\r\n        statusDropdownSelected,\r\n        setstatusDropdownSelected,\r\n        trackerImageOpen,\r\n        settrackerImageOpen,\r\n        trackingImage,\r\n        setTrackingImage,\r\n        trackingImageResponse,\r\n        setTrackingImageResponse,\r\n        uploadedImageTracker,\r\n        setuploadedImageTracker,\r\n        uploadedDescTracker,\r\n        setuploadedDescTracker,\r\n        transactionDetailSelected,\r\n        setTransactionDetailSelected,\r\n        transactionId,\r\n        settransactionId,\r\n        transactionDetail,\r\n        setTransactionDetail,\r\n        transactionDetailSteps,\r\n        setTransactionDetailSteps,\r\n        transactionDetailStepsLoading,\r\n        setTransactionDetailStepsLoading,\r\n        imagesBtnLoading,\r\n        setimagesBtnLoading,\r\n\r\n        // bankAccountIdValue,\r\n        // setBankAccountIdValue,\r\n        // bankInfoValues,\r\n        // setbankInfoValues,\r\n\r\n        //staking rewards (bonds)\r\n        bondsPagination,\r\n        setBondsPagination,\r\n        bondsTxnsPerPage,\r\n        setBondsTxnsPerPage,\r\n        allDirection,\r\n        setAllDirection,\r\n        allTypes,\r\n        setAllTypes,\r\n      }}\r\n    >\r\n      {children}\r\n    </VaultPageContext.Provider>\r\n  );\r\n}\r\n\r\nexport default VaultPageContextProvider;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}