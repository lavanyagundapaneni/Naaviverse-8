{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  email: \"\",\n  token: \"\",\n  accesToken: \"\",\n  deviceId: \"\",\n  refreshToken: \"\"\n};\nexport const loginSlice = createSlice({\n  name: \"loginData\",\n  initialState,\n  reducers: {\n    logout: state => {\n      state.email = \"\";\n      state.token = \"\";\n      state.accesToken = \"\";\n      state.deviceId = \"\";\n      state.refreshToken = \"\";\n    },\n    login: (state, action) => {\n      state.email = action.payload.email;\n      state.token = action.payload.token;\n      state.accesToken = action.payload.accesToken;\n      state.deviceId = action.payload.deviceId;\n      state.refreshToken = action.payload.refreshToken;\n    }\n  }\n});\nexport const {\n  logout,\n  login\n} = loginSlice.actions;\nexport const selectLoginData = state => state.loginData;\nexport default loginSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","email","token","accesToken","deviceId","refreshToken","loginSlice","name","reducers","logout","state","login","action","payload","actions","selectLoginData","loginData","reducer"],"sources":["C:/Users/chint/Downloads/naaviverse-frontend/src/app/loginSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nexport interface LoginState {\r\n  email: String;\r\n  token: String;\r\n  accesToken: String;\r\n  deviceId: String;\r\n  refreshToken: String;\r\n}\r\n\r\nconst initialState: LoginState = {\r\n  email: \"\",\r\n  token: \"\",\r\n  accesToken: \"\",\r\n  deviceId: \"\",\r\n  refreshToken: \"\",\r\n};\r\n\r\nexport const loginSlice = createSlice({\r\n  name: \"loginData\",\r\n  initialState,\r\n  reducers: {\r\n    logout: (state) => {\r\n      state.email = \"\";\r\n      state.token = \"\";\r\n      state.accesToken = \"\";\r\n      state.deviceId = \"\";\r\n      state.refreshToken = \"\";\r\n    },\r\n    login: (state, action: PayloadAction<LoginState>) => {\r\n      state.email = action.payload.email;\r\n      state.token = action.payload.token;\r\n      state.accesToken = action.payload.accesToken;\r\n      state.deviceId = action.payload.deviceId;\r\n      state.refreshToken = action.payload.refreshToken;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { logout, login } = loginSlice.actions;\r\n\r\nexport const selectLoginData = (state: any) => state.loginData;\r\n\r\nexport default loginSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAU7D,MAAMC,YAAwB,GAAG;EAC/BC,KAAK,EAAE,EAAE;EACTC,KAAK,EAAE,EAAE;EACTC,UAAU,EAAE,EAAE;EACdC,QAAQ,EAAE,EAAE;EACZC,YAAY,EAAE;AAChB,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGP,WAAW,CAAC;EACpCQ,IAAI,EAAE,WAAW;EACjBP,YAAY;EACZQ,QAAQ,EAAE;IACRC,MAAM,EAAGC,KAAK,IAAK;MACjBA,KAAK,CAACT,KAAK,GAAG,EAAE;MAChBS,KAAK,CAACR,KAAK,GAAG,EAAE;MAChBQ,KAAK,CAACP,UAAU,GAAG,EAAE;MACrBO,KAAK,CAACN,QAAQ,GAAG,EAAE;MACnBM,KAAK,CAACL,YAAY,GAAG,EAAE;IACzB,CAAC;IACDM,KAAK,EAAEA,CAACD,KAAK,EAAEE,MAAiC,KAAK;MACnDF,KAAK,CAACT,KAAK,GAAGW,MAAM,CAACC,OAAO,CAACZ,KAAK;MAClCS,KAAK,CAACR,KAAK,GAAGU,MAAM,CAACC,OAAO,CAACX,KAAK;MAClCQ,KAAK,CAACP,UAAU,GAAGS,MAAM,CAACC,OAAO,CAACV,UAAU;MAC5CO,KAAK,CAACN,QAAQ,GAAGQ,MAAM,CAACC,OAAO,CAACT,QAAQ;MACxCM,KAAK,CAACL,YAAY,GAAGO,MAAM,CAACC,OAAO,CAACR,YAAY;IAClD;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEI,MAAM;EAAEE;AAAM,CAAC,GAAGL,UAAU,CAACQ,OAAO;AAEnD,OAAO,MAAMC,eAAe,GAAIL,KAAU,IAAKA,KAAK,CAACM,SAAS;AAE9D,eAAeV,UAAU,CAACW,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}