{"ast":null,"code":"import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { exportElement } from './export-element';\n/**\n * @hidden\n */\nexport function provideSaveTreeListPDF(savePDF) {\n  return function (treeList, pdfExportOptions, callback, data, columns) {\n    if (pdfExportOptions === void 0) {\n      pdfExportOptions = {};\n    }\n    return saveTreeListPDF(savePDF, treeList, pdfExportOptions, callback, data, columns);\n  };\n}\nfunction saveTreeListPDF(savePDF, treeList, pdfExportOptions, callback, data, columns) {\n  if (pdfExportOptions === void 0) {\n    pdfExportOptions = {};\n  }\n  rendertreeList();\n  var treeListOuterWrapper;\n  var treeListInnerWrapper;\n  var finalContainer;\n  function rendertreeList() {\n    treeListOuterWrapper = document.createElement('div');\n    treeListOuterWrapper.setAttribute('style', 'position:absolute; left: -5000px; top: 0px;');\n    treeListInnerWrapper = document.createElement('div');\n    treeListOuterWrapper.appendChild(treeListInnerWrapper);\n    document.body.appendChild(treeListOuterWrapper);\n    ReactDOM.render(prepareRawTreeListForExport(), treeListInnerWrapper, ontreeListRendered);\n  }\n  function ontreeListRendered() {\n    savePDF(prepareFinalElementForExport(), pdfExportOptions, cleanUpAndInvokeCallback);\n  }\n  function cleanUpAndInvokeCallback() {\n    document.body.removeChild(treeListOuterWrapper);\n    document.body.removeChild(finalContainer);\n    treeListOuterWrapper = finalContainer = undefined;\n    if (callback) {\n      callback();\n    }\n  }\n  function prepareFinalElementForExport() {\n    /* Ultimatelly, there is no need for double DOM-copying of the treeList.\n    The one in this method is a copied Angular implementation\n    that has been plugged almost seemlessly. */\n    finalContainer = document.createElement('div');\n    finalContainer.className = 'k-treelist-pdf-export-element';\n    var result = exportElement(treeListInnerWrapper);\n    finalContainer.appendChild(result);\n    document.body.appendChild(finalContainer);\n    return finalContainer;\n  }\n  function prepareRawTreeListForExport() {\n    var customDataProps = pdfExportOptions.allPages && data ? {\n      data: data,\n      take: Number.MAX_VALUE,\n      skip: 0\n    } : {};\n    // A custom width is needed because otherwise when all pages are exported,\n    // the \"hidden\" PDF treeList will be visible.\n    var customStyleProp = {\n      style: Object.assign({}, treeList.props.style, {\n        width: '1000px'\n      })\n    };\n    var customProps = Object.assign({}, customDataProps, customStyleProp);\n    if (columns && columns.length > 0) {\n      return React.cloneElement(treeList, Object.assign({}, customProps, {\n        columns: columns\n      }));\n    } else {\n      return React.cloneElement(treeList, customProps);\n    }\n  }\n}","map":{"version":3,"names":["ReactDOM","React","exportElement","provideSaveTreeListPDF","savePDF","treeList","pdfExportOptions","callback","data","columns","saveTreeListPDF","rendertreeList","treeListOuterWrapper","treeListInnerWrapper","finalContainer","document","createElement","setAttribute","appendChild","body","render","prepareRawTreeListForExport","ontreeListRendered","prepareFinalElementForExport","cleanUpAndInvokeCallback","removeChild","undefined","className","result","customDataProps","allPages","take","Number","MAX_VALUE","skip","customStyleProp","style","Object","assign","props","width","customProps","length","cloneElement"],"sources":["C:/Users/chint/Downloads/naaviverse-frontend/node_modules/@progress/kendo-react-pdf/dist/es/treelist/provideSaveTreeListPDF.js"],"sourcesContent":["import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { exportElement } from './export-element';\n/**\n * @hidden\n */\nexport function provideSaveTreeListPDF(savePDF) {\n    return function (treeList, pdfExportOptions, callback, data, columns) {\n        if (pdfExportOptions === void 0) { pdfExportOptions = {}; }\n        return saveTreeListPDF(savePDF, treeList, pdfExportOptions, callback, data, columns);\n    };\n}\nfunction saveTreeListPDF(savePDF, treeList, pdfExportOptions, callback, data, columns) {\n    if (pdfExportOptions === void 0) { pdfExportOptions = {}; }\n    rendertreeList();\n    var treeListOuterWrapper;\n    var treeListInnerWrapper;\n    var finalContainer;\n    function rendertreeList() {\n        treeListOuterWrapper = document.createElement('div');\n        treeListOuterWrapper.setAttribute('style', 'position:absolute; left: -5000px; top: 0px;');\n        treeListInnerWrapper = document.createElement('div');\n        treeListOuterWrapper.appendChild(treeListInnerWrapper);\n        document.body.appendChild(treeListOuterWrapper);\n        ReactDOM.render(prepareRawTreeListForExport(), treeListInnerWrapper, ontreeListRendered);\n    }\n    function ontreeListRendered() {\n        savePDF(prepareFinalElementForExport(), pdfExportOptions, cleanUpAndInvokeCallback);\n    }\n    function cleanUpAndInvokeCallback() {\n        document.body.removeChild(treeListOuterWrapper);\n        document.body.removeChild(finalContainer);\n        treeListOuterWrapper = finalContainer = undefined;\n        if (callback) {\n            callback();\n        }\n    }\n    function prepareFinalElementForExport() {\n        /* Ultimatelly, there is no need for double DOM-copying of the treeList.\n        The one in this method is a copied Angular implementation\n        that has been plugged almost seemlessly. */\n        finalContainer = document.createElement('div');\n        finalContainer.className = 'k-treelist-pdf-export-element';\n        var result = exportElement(treeListInnerWrapper);\n        finalContainer.appendChild(result);\n        document.body.appendChild(finalContainer);\n        return finalContainer;\n    }\n    function prepareRawTreeListForExport() {\n        var customDataProps = pdfExportOptions.allPages && data ? { data: data, take: Number.MAX_VALUE, skip: 0 } : {};\n        // A custom width is needed because otherwise when all pages are exported,\n        // the \"hidden\" PDF treeList will be visible.\n        var customStyleProp = { style: Object.assign({}, treeList.props.style, { width: '1000px' }) };\n        var customProps = Object.assign({}, customDataProps, customStyleProp);\n        if (columns && columns.length > 0) {\n            return React.cloneElement(treeList, Object.assign({}, customProps, { columns: columns }));\n        }\n        else {\n            return React.cloneElement(treeList, customProps);\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}