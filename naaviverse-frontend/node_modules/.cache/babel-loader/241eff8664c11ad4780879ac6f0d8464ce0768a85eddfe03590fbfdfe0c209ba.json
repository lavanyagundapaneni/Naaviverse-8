{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chint\\\\Downloads\\\\naaviverse-frontend\\\\src\\\\RegistrationContext.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\n// import { BankContext } from \"./Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RegistrationContext = /*#__PURE__*/createContext();\nconst RegistrationContextProvider = props => {\n  _s();\n  // const { email } = useContext(BankContext);\n\n  const [step, setStep] = useState(\"\");\n  const [appData, setAppData] = useState(null);\n  const [affiliateData, setAffiliateData] = useState(null);\n  const [initialPath, setInitialPath] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [pasteContent, setPasteContent] = useState(\"\");\n  const [affEmail, setAffEmail] = useState(\"\");\n  const [affData, setAffData] = useState(null);\n  const [userName, setUserName] = useState(\"\");\n  const [userEmail, setUserEmail] = useState(\"\");\n  const [userPassword, setUserPassword] = useState(\"\");\n  const [createAccountLoading, setCreateAccountLoading] = useState(false);\n  const [pin, setPin] = useState(\"\");\n  const [pinMisMatch, setPinMisMatch] = useState(false);\n  const [loadingRight, setLoadingRight] = useState(false);\n\n  //PreRegistered States\n\n  const [authId, setAuthId] = useState(null);\n  const [tempEmail, setTempEmail] = useState(\"\");\n  const [tempUsername, setTempUsername] = useState(\"\");\n  const [challengeName, setChallengeName] = useState(\"\");\n  const [session, setSession] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [affType, setAffType] = useState(true);\n  const handleCreateAccount = lastRoute => {\n    var _affData$hardCoded, _affData$hardCoded$, _affData$hardCoded$$d;\n    setCreateAccountLoading(true);\n    axios.post(`https://gxauth.apimachine.com/gx/user/signup`, {\n      username: userName,\n      email: userEmail,\n      password: userPassword,\n      ref_affiliate: affData === null || affData === void 0 ? void 0 : (_affData$hardCoded = affData.hardCoded) === null || _affData$hardCoded === void 0 ? void 0 : (_affData$hardCoded$ = _affData$hardCoded[0]) === null || _affData$hardCoded$ === void 0 ? void 0 : (_affData$hardCoded$$d = _affData$hardCoded$.data) === null || _affData$hardCoded$$d === void 0 ? void 0 : _affData$hardCoded$$d.username,\n      account_type: \"Personal\",\n      signedup_app: appData === null || appData === void 0 ? void 0 : appData.app_code\n    }).then(({\n      data\n    }) => {\n      if (data.status) {\n        setStep(\"step7\");\n        setCreateAccountLoading(false);\n      }\n    });\n\n    // console.log(\"create account now\");\n    // console.log(\"aff Upline: \", affData?.hardCoded?.[0]?.data?.username);\n    // console.log(\"userEmail: \", userName);\n    // console.log(\"userEmail: \", userEmail);\n    // console.log(\"userPassword: \", userPassword);\n    // console.log(\"signedupApp: \", appData?.app_code);\n    // setStep(\"step7\");\n  };\n\n  const confirmEmail = () => {\n    setStep(\"step8\");\n    axios.post(`https://gxauth.apimachine.com/gx/user/confirm`, {\n      email: userEmail,\n      code: pin\n    }).then(({\n      data\n    }) => {\n      if (data.status) {\n        setStep(\"step9\");\n      } else {\n        setStep(\"step7\");\n        setPinMisMatch(true);\n      }\n    });\n  };\n  useEffect(() => {\n    setLoading(true);\n    axios.get(`https://comms.globalxchange.io/gxb/apps/get?app_code=naavi`).then(({\n      data\n    }) => {\n      if (data.apps.length > 0) {\n        setAppData(data.apps[0]);\n        setLoading(false);\n      } else {\n        setAppData(data.apps[0]);\n        setLoading(false);\n      }\n    });\n  }, []);\n  const value = {\n    step,\n    setStep,\n    initialPath,\n    setInitialPath,\n    appData,\n    setAppData,\n    loading,\n    setLoading,\n    pasteContent,\n    setPasteContent,\n    //input states\n    affEmail,\n    setAffEmail,\n    affData,\n    setAffData,\n    userEmail,\n    setUserEmail,\n    userName,\n    setUserName,\n    userPassword,\n    setUserPassword,\n    pin,\n    setPin,\n    createAccountLoading,\n    setCreateAccountLoading,\n    loadingRight,\n    setLoadingRight,\n    //Functions\n    handleCreateAccount,\n    confirmEmail,\n    //Pre-Registered States\n\n    authId,\n    setAuthId,\n    tempEmail,\n    setTempEmail,\n    tempUsername,\n    setTempUsername,\n    challengeName,\n    setChallengeName,\n    session,\n    setSession,\n    newPassword,\n    setNewPassword,\n    //by-myself\n    affType,\n    setAffType\n  };\n  return /*#__PURE__*/_jsxDEV(RegistrationContext.Provider, {\n    value: value,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n_s(RegistrationContextProvider, \"8IStJQ+ShCXLnxbrRLVNiM8Si1g=\");\n_c = RegistrationContextProvider;\nexport default RegistrationContextProvider;\nvar _c;\n$RefreshReg$(_c, \"RegistrationContextProvider\");","map":{"version":3,"names":["axios","React","createContext","useContext","useEffect","useState","jsxDEV","_jsxDEV","RegistrationContext","RegistrationContextProvider","props","_s","step","setStep","appData","setAppData","affiliateData","setAffiliateData","initialPath","setInitialPath","loading","setLoading","pasteContent","setPasteContent","affEmail","setAffEmail","affData","setAffData","userName","setUserName","userEmail","setUserEmail","userPassword","setUserPassword","createAccountLoading","setCreateAccountLoading","pin","setPin","pinMisMatch","setPinMisMatch","loadingRight","setLoadingRight","authId","setAuthId","tempEmail","setTempEmail","tempUsername","setTempUsername","challengeName","setChallengeName","session","setSession","newPassword","setNewPassword","affType","setAffType","handleCreateAccount","lastRoute","_affData$hardCoded","_affData$hardCoded$","_affData$hardCoded$$d","post","username","email","password","ref_affiliate","hardCoded","data","account_type","signedup_app","app_code","then","status","confirmEmail","code","get","apps","length","value","Provider","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/chint/Downloads/naaviverse-frontend/src/RegistrationContext.js"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\r\n// import { BankContext } from \"./Context\";\r\n\r\nexport const RegistrationContext = createContext();\r\nconst RegistrationContextProvider = (props) => {\r\n  // const { email } = useContext(BankContext);\r\n\r\n  const [step, setStep] = useState(\"\");\r\n  const [appData, setAppData] = useState(null);\r\n  const [affiliateData, setAffiliateData] = useState(null);\r\n  const [initialPath, setInitialPath] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [pasteContent, setPasteContent] = useState(\"\");\r\n\r\n  const [affEmail, setAffEmail] = useState(\"\");\r\n  const [affData, setAffData] = useState(null);\r\n\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [userEmail, setUserEmail] = useState(\"\");\r\n  const [userPassword, setUserPassword] = useState(\"\");\r\n\r\n  const [createAccountLoading, setCreateAccountLoading] = useState(false);\r\n\r\n  const [pin, setPin] = useState(\"\");\r\n  const [pinMisMatch, setPinMisMatch] = useState(false);\r\n\r\n  const [loadingRight, setLoadingRight] = useState(false);\r\n\r\n  //PreRegistered States\r\n\r\n  const [authId, setAuthId] = useState(null);\r\n  const [tempEmail, setTempEmail] = useState(\"\");\r\n  const [tempUsername, setTempUsername] = useState(\"\");\r\n  const [challengeName, setChallengeName] = useState(\"\");\r\n  const [session, setSession] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [affType, setAffType] = useState(true);\r\n\r\n  const handleCreateAccount = (lastRoute) => {\r\n    setCreateAccountLoading(true);\r\n\r\n    axios\r\n      .post(`https://gxauth.apimachine.com/gx/user/signup`, {\r\n        username: userName,\r\n        email: userEmail,\r\n        password: userPassword,\r\n        ref_affiliate: affData?.hardCoded?.[0]?.data?.username,\r\n        account_type: \"Personal\",\r\n        signedup_app: appData?.app_code,\r\n      })\r\n      .then(({ data }) => {\r\n        if (data.status) {\r\n          setStep(\"step7\");\r\n          setCreateAccountLoading(false);\r\n        }\r\n      });\r\n\r\n    // console.log(\"create account now\");\r\n    // console.log(\"aff Upline: \", affData?.hardCoded?.[0]?.data?.username);\r\n    // console.log(\"userEmail: \", userName);\r\n    // console.log(\"userEmail: \", userEmail);\r\n    // console.log(\"userPassword: \", userPassword);\r\n    // console.log(\"signedupApp: \", appData?.app_code);\r\n    // setStep(\"step7\");\r\n  };\r\n\r\n  const confirmEmail = () => {\r\n    setStep(\"step8\");\r\n    axios\r\n      .post(`https://gxauth.apimachine.com/gx/user/confirm`, {\r\n        email: userEmail,\r\n        code: pin,\r\n      })\r\n      .then(({ data }) => {\r\n        if (data.status) {\r\n          setStep(\"step9\");\r\n        } else {\r\n          setStep(\"step7\");\r\n          setPinMisMatch(true);\r\n        }\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    axios\r\n      .get(`https://comms.globalxchange.io/gxb/apps/get?app_code=naavi`)\r\n      .then(({ data }) => {\r\n        if (data.apps.length > 0) {\r\n          setAppData(data.apps[0]);\r\n          setLoading(false);\r\n        } else {\r\n          setAppData(data.apps[0]);\r\n          setLoading(false);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  const value = {\r\n    step,\r\n    setStep,\r\n    initialPath,\r\n    setInitialPath,\r\n    appData,\r\n    setAppData,\r\n    loading,\r\n    setLoading,\r\n    pasteContent,\r\n    setPasteContent,\r\n\r\n    //input states\r\n    affEmail,\r\n    setAffEmail,\r\n    affData,\r\n    setAffData,\r\n    userEmail,\r\n    setUserEmail,\r\n    userName,\r\n    setUserName,\r\n    userPassword,\r\n    setUserPassword,\r\n\r\n    pin,\r\n    setPin,\r\n    createAccountLoading,\r\n    setCreateAccountLoading,\r\n    loadingRight,\r\n    setLoadingRight,\r\n    //Functions\r\n    handleCreateAccount,\r\n    confirmEmail,\r\n\r\n    //Pre-Registered States\r\n\r\n    authId,\r\n    setAuthId,\r\n    tempEmail,\r\n    setTempEmail,\r\n    tempUsername,\r\n    setTempUsername,\r\n    challengeName,\r\n    setChallengeName,\r\n    session,\r\n    setSession,\r\n    newPassword,\r\n    setNewPassword,\r\n\r\n    //by-myself\r\n    affType,\r\n    setAffType,\r\n  };\r\n  return (\r\n    <RegistrationContext.Provider value={value}>\r\n      {props.children}\r\n    </RegistrationContext.Provider>\r\n  );\r\n};\r\n\r\nexport default RegistrationContextProvider;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}