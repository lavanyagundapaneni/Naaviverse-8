{"ast":null,"code":"import create from \"zustand\";\nexport const useStore = create(set => ({\n  isOpen: false,\n  setOpen: open => set({\n    isOpen: open\n  }),\n  ismobnav: false,\n  setmobnav: mobnav => set({\n    ismobnav: mobnav\n  }),\n  mobMenuOpen: false,\n  setmobMenuOpen: menu => set({\n    mobMenuOpen: menu\n  }),\n  selectedNav: \"About Us\",\n  setselectedNav: nav => set({\n    selectedNav: nav\n  }),\n  mobsize: 0,\n  setmobsize: mob => set({\n    mobsize: mob\n  }),\n  scrollmenu: \"Individuals\",\n  setscrollmenu: smenu => set({\n    scrollmenu: smenu\n  }),\n  sideNav: \"Paths\",\n  setsideNav: sidenav => set({\n    sideNav: sidenav\n  }),\n  accsideNav: \"CRM\",\n  setaccsideNav: accsidenav => set({\n    accsideNav: accsidenav\n  }),\n  isLoading: false,\n  setisLoading: loading => set({\n    isLoading: loading\n  }),\n  ispopular: false,\n  setispopular: popular => set({\n    ispopular: popular\n  }),\n  planBAccountPicUploading: false,\n  setplanBAccountPicUploading: accountPicUpload => set({\n    planBAccountPicUploading: accountPicUpload\n  }),\n  selectedDropDown: false,\n  setSelectedDropDown: dropdown => set({\n    selectedDropDown: dropdown\n  }),\n  loginType: \"Users\",\n  setLoginType: login => set({\n    loginType: login\n  }),\n  singleDirectory: {},\n  setSingleDirectory: eachDirectory => set({\n    singleDirectory: eachDirectory\n  }),\n  index: [],\n  setIndex: data => set({\n    index: data\n  }),\n  buy: \"step1\",\n  setBuy: step => set({\n    buy: step\n  }),\n  mallCoindata: [],\n  setMallCoinData: coindata => set({\n    mallCoindata: coindata\n  }),\n  filteredcoins: [],\n  setfilteredcoins: coins => set({\n    filteredcoins: coins\n  }),\n  mallselectedCoin: [],\n  setMallSeclectedCoin: selectedcoin => set({\n    mallselectedCoin: selectedcoin\n  }),\n  balanceToggle: false,\n  setBalanceToggle: toggle => set({\n    balanceToggle: toggle\n  }),\n  coinType: \"fiat\",\n  setCoinType: ctype => set({\n    coinType: ctype\n  }),\n  check: false,\n  setCheck: chk => set({\n    check: chk\n  }),\n  selectedCoin: {},\n  setSelectedCoin: coin => set({\n    selectedCoin: coin\n  }),\n  allDirection: \"All Directions\",\n  setAllDirection: direction => set({\n    allDirection: direction\n  }),\n  allTypes: \"All Types\",\n  setAllTypes: type => set({\n    allTypes: type\n  })\n}));","map":{"version":3,"names":["create","useStore","set","isOpen","setOpen","open","ismobnav","setmobnav","mobnav","mobMenuOpen","setmobMenuOpen","menu","selectedNav","setselectedNav","nav","mobsize","setmobsize","mob","scrollmenu","setscrollmenu","smenu","sideNav","setsideNav","sidenav","accsideNav","setaccsideNav","accsidenav","isLoading","setisLoading","loading","ispopular","setispopular","popular","planBAccountPicUploading","setplanBAccountPicUploading","accountPicUpload","selectedDropDown","setSelectedDropDown","dropdown","loginType","setLoginType","login","singleDirectory","setSingleDirectory","eachDirectory","index","setIndex","data","buy","setBuy","step","mallCoindata","setMallCoinData","coindata","filteredcoins","setfilteredcoins","coins","mallselectedCoin","setMallSeclectedCoin","selectedcoin","balanceToggle","setBalanceToggle","toggle","coinType","setCoinType","ctype","check","setCheck","chk","selectedCoin","setSelectedCoin","coin","allDirection","setAllDirection","direction","allTypes","setAllTypes","type"],"sources":["C:/Users/chint/Downloads/Naaviverse 2/naaviverse-frontend/src/components/store/store.ts"],"sourcesContent":["import create from \"zustand\";\r\n\r\ntype Store = {\r\n  isOpen: boolean;\r\n  setOpen: (open: boolean) => void;\r\n  ismobnav: boolean;\r\n  setmobnav: (mobnav: boolean) => void;\r\n  mobMenuOpen: boolean;\r\n  setmobMenuOpen: (menu: boolean) => void;\r\n  selectedNav: string;\r\n  setselectedNav: (nav: string) => void;\r\n  mobsize: number;\r\n  setmobsize: (mob: number) => void;\r\n  scrollmenu: string;\r\n  setscrollmenu: (smenu: string) => void;\r\n  sideNav: string;\r\n  setsideNav: (sidenav: string) => void;\r\n  accsideNav: string;\r\n  setaccsideNav: (accsidenav: string) => void;\r\n  isLoading: boolean;\r\n  setisLoading: (loading: boolean) => void;\r\n  ispopular: boolean;\r\n  setispopular: (popular: boolean) => void;\r\n  planBAccountPicUploading: boolean;\r\n  setplanBAccountPicUploading: (accountPicUpload: boolean) => void;\r\n  selectedDropDown: boolean;\r\n  setSelectedDropDown: (dropdown: boolean) => void;\r\n  loginType: string;\r\n  setLoginType: (login: string) => void;\r\n  singleDirectory: any;\r\n  setSingleDirectory: (eachDirectory: any) => void;\r\n  index: number[];\r\n  setIndex: (index: number[]) => void;\r\n  buy: string;\r\n  setBuy: (buy: string) => void;\r\n  mallCoindata: number[];\r\n  setMallCoinData: (mallCoindata: number[]) => void;\r\n  filteredcoins: number[];\r\n  setfilteredcoins: (filteredcoins: number[]) => void;\r\n  mallselectedCoin: number[];\r\n  setMallSeclectedCoin: (mallselectedCoin: number[]) => void;\r\n  balanceToggle: boolean;\r\n  setBalanceToggle: (balanceToggle: boolean) => void;\r\n  coinType: string;\r\n  setCoinType: (coinType: string) => void;\r\n  check: boolean;\r\n  setCheck: (check: boolean) => void;\r\n  selectedCoin: any;\r\n  setSelectedCoin: (coin: any) => void;\r\n  allDirection: string;\r\n  setAllDirection: (direction: string) => void;\r\n  allTypes: string;\r\n  setAllTypes: (type: string) => void;\r\n};\r\n\r\nexport const useStore = create<Store>((set) => ({\r\n  isOpen: false,\r\n  setOpen: (open) => set({ isOpen: open }),\r\n  ismobnav: false,\r\n  setmobnav: (mobnav) => set({ ismobnav: mobnav }),\r\n  mobMenuOpen: false,\r\n  setmobMenuOpen: (menu) => set({ mobMenuOpen: menu }),\r\n  selectedNav: \"About Us\",\r\n  setselectedNav: (nav) => set({ selectedNav: nav }),\r\n  mobsize: 0,\r\n  setmobsize: (mob) => set({ mobsize: mob }),\r\n  scrollmenu: \"Individuals\",\r\n  setscrollmenu: (smenu) => set({ scrollmenu: smenu }),\r\n  sideNav: \"Paths\",\r\n  setsideNav: (sidenav) => set({ sideNav: sidenav }),\r\n  accsideNav: \"CRM\",\r\n  setaccsideNav: (accsidenav) => set({ accsideNav: accsidenav }),\r\n  isLoading: false,\r\n  setisLoading: (loading) => set({ isLoading: loading }),\r\n  ispopular: false,\r\n  setispopular: (popular) => set({ ispopular: popular }),\r\n  planBAccountPicUploading: false,\r\n  setplanBAccountPicUploading: (accountPicUpload) =>\r\n    set({ planBAccountPicUploading: accountPicUpload }),\r\n  selectedDropDown: false,\r\n  setSelectedDropDown: (dropdown) => set({ selectedDropDown: dropdown }),\r\n  loginType: \"Users\",\r\n  setLoginType: (login) => set({ loginType: login }),\r\n  singleDirectory: {},\r\n  setSingleDirectory: (eachDirectory) =>\r\n    set({ singleDirectory: eachDirectory }),\r\n  index: [],\r\n  setIndex: (data) => set({ index: data }),\r\n  buy: \"step1\",\r\n  setBuy: (step) => set({ buy: step }),\r\n  mallCoindata: [],\r\n  setMallCoinData: (coindata) => set({ mallCoindata: coindata }),\r\n  filteredcoins: [],\r\n  setfilteredcoins: (coins) => set({ filteredcoins: coins }),\r\n  mallselectedCoin: [],\r\n  setMallSeclectedCoin: (selectedcoin) =>\r\n    set({ mallselectedCoin: selectedcoin }),\r\n  balanceToggle: false,\r\n  setBalanceToggle: (toggle) => set({ balanceToggle: toggle }),\r\n  coinType: \"fiat\",\r\n  setCoinType: (ctype) => set({ coinType: ctype }),\r\n  check: false,\r\n  setCheck: (chk) => set({ check: chk }),\r\n  selectedCoin: {},\r\n  setSelectedCoin: (coin) => set({ selectedCoin: coin }),\r\n  allDirection: \"All Directions\",\r\n  setAllDirection: (direction) => set({ allDirection: direction }),\r\n  allTypes: \"All Types\",\r\n  setAllTypes: (type) => set({ allTypes: type }),\r\n}));\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}