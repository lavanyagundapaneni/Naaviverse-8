{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport React, { Component } from \"react\";\nimport DraggableChildComponent from \"../draggableChildren/draggableChildren\";\nclass DraggableComponent extends Component {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"state\", {\n      divs: [],\n      currentDiv: null,\n      toDiv: null\n    });\n    _defineProperty(this, \"componentDidMount\", () => {\n      this.setState({\n        divs: this.props.children\n      });\n    });\n    _defineProperty(this, \"insertElementBefore\", () => {\n      let divs = [...this.state.divs];\n      let currentDiv = this.state.currentDiv;\n      let toDiv = this.state.toDiv;\n      let currentEle;\n      if (currentDiv !== toDiv) {\n        currentEle = {\n          ...divs[currentDiv]\n        };\n        divs = divs.filter((val, idx) => {\n          return idx !== currentDiv;\n        });\n        divs.splice(toDiv, 0, currentEle); // This is a hack - Initialize the state as blank and then reset the state\n        // With only 1 setState, the entire component doesnot get rerendered.\n\n        this.setState({\n          divs: [],\n          currentDiv: null,\n          toDiv: null\n        }, () => {\n          this.setState({\n            divs\n          });\n        });\n      }\n      if (this.props?.onPosChange) this.props.onPosChange(currentDiv, toDiv, currentEle);\n    });\n    _defineProperty(this, \"dragStart\", idx => {\n      this.setState({\n        currentDiv: idx\n      });\n    });\n    _defineProperty(this, \"dragEnter\", idx => {\n      this.setState({\n        toDiv: idx\n      });\n    });\n    _defineProperty(this, \"dragDrop\", () => {\n      this.insertElementBefore();\n    });\n  }\n  render() {\n    let ele = [];\n    for (let i = 0; i < this.state.divs.length; i++) {\n      ele.push( /*#__PURE__*/React.createElement(DraggableChildComponent, {\n        dragStart: () => this.dragStart(i),\n        dragEnter: () => this.dragEnter(i),\n        dragEnd: this.dragDrop,\n        key: i\n      }, this.state.divs[i]));\n    }\n    return /*#__PURE__*/React.createElement(React.Fragment, null, ele);\n  }\n}\nexport default DraggableComponent;","map":{"version":3,"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","React","Component","DraggableChildComponent","DraggableComponent","constructor","args","divs","currentDiv","toDiv","setState","props","children","state","currentEle","filter","val","idx","splice","onPosChange","insertElementBefore","render","ele","i","length","push","createElement","dragStart","dragEnter","dragEnd","dragDrop","Fragment"],"sources":["C:/Users/chint/Downloads/Naaviverse 2/naaviverse-frontend/node_modules/react-drag-reorder/dist/components/draggable/draggable.js"],"sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport DraggableChildComponent from \"../draggableChildren/draggableChildren\";\n\nclass DraggableComponent extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      divs: [],\n      currentDiv: null,\n      toDiv: null\n    });\n\n    _defineProperty(this, \"componentDidMount\", () => {\n      this.setState({\n        divs: this.props.children\n      });\n    });\n\n    _defineProperty(this, \"insertElementBefore\", () => {\n      let divs = [...this.state.divs];\n      let currentDiv = this.state.currentDiv;\n      let toDiv = this.state.toDiv;\n      let currentEle;\n\n      if (currentDiv !== toDiv) {\n        currentEle = { ...divs[currentDiv]\n        };\n        divs = divs.filter((val, idx) => {\n          return idx !== currentDiv;\n        });\n        divs.splice(toDiv, 0, currentEle); // This is a hack - Initialize the state as blank and then reset the state\n        // With only 1 setState, the entire component doesnot get rerendered.\n\n        this.setState({\n          divs: [],\n          currentDiv: null,\n          toDiv: null\n        }, () => {\n          this.setState({\n            divs\n          });\n        });\n      }\n\n      if (this.props?.onPosChange) this.props.onPosChange(currentDiv, toDiv, currentEle);\n    });\n\n    _defineProperty(this, \"dragStart\", idx => {\n      this.setState({\n        currentDiv: idx\n      });\n    });\n\n    _defineProperty(this, \"dragEnter\", idx => {\n      this.setState({\n        toDiv: idx\n      });\n    });\n\n    _defineProperty(this, \"dragDrop\", () => {\n      this.insertElementBefore();\n    });\n  }\n\n  render() {\n    let ele = [];\n\n    for (let i = 0; i < this.state.divs.length; i++) {\n      ele.push( /*#__PURE__*/React.createElement(DraggableChildComponent, {\n        dragStart: () => this.dragStart(i),\n        dragEnter: () => this.dragEnter(i),\n        dragEnd: this.dragDrop,\n        key: i\n      }, this.state.divs[i]));\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, ele);\n  }\n\n}\n\nexport default DraggableComponent;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}