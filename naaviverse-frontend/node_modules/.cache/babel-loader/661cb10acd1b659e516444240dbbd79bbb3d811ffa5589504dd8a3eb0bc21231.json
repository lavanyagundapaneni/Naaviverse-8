{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chint\\\\Downloads\\\\Naaviverse 2\\\\naaviverse-frontend\\\\src\\\\globalComponents\\\\GlobalDrawer\\\\NewStep1\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport Scrollbars from \"react-custom-scrollbars\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport axios from \"axios\";\nimport { useStore } from \"../../../components/store/store.ts\";\nimport { useCoinContextData } from \"../../../context/CoinContext\";\nimport arrow from \"../../../pages/accDashbaoard/arrow.svg\";\nimport trash from \"../../../pages/accDashbaoard/trash.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NewStep1 = ({\n  setpstep\n}) => {\n  _s();\n  var _userDetails$user;\n  const userDetails = JSON.parse(localStorage.getItem(\"user\"));\n  const {\n    setaccsideNav,\n    setispopular\n  } = useStore();\n  const {\n    setMypathsMenu,\n    servicesToggle,\n    setServicesToggle,\n    allServices,\n    setAllServices\n  } = useCoinContextData();\n  const [loading, setLoading] = useState(false);\n  const [step, setStep] = useState(\"\");\n  const [stepForm, setStepForm] = useState({\n    email: userDetails === null || userDetails === void 0 ? void 0 : (_userDetails$user = userDetails.user) === null || _userDetails$user === void 0 ? void 0 : _userDetails$user.email,\n    name: \"\",\n    description: \"\",\n    cost: \"\",\n    gradeData: [{\n      grade: \"9\",\n      description: \"\"\n    }, {\n      grade: \"10\",\n      description: \"\"\n    }, {\n      grade: \"11\",\n      description: \"\"\n    }, {\n      grade: \"12\",\n      description: \"\"\n    }],\n    curriculumData: [{\n      curriculum: \"IB\",\n      description: \"\"\n    }, {\n      curriculum: \"IGCSE\",\n      description: \"\"\n    }, {\n      curriculum: \"CBSE\",\n      description: \"\"\n    }, {\n      curriculum: \"ICSE\",\n      description: \"\"\n    }, {\n      curriculum: \"Nordic\",\n      description: \"\"\n    }],\n    financialData: [{\n      financialSituation: \"0-25L\",\n      description: \"\"\n    }, {\n      financialSituation: \"25L-75L\",\n      description: \"\"\n    }, {\n      financialSituation: \"75L-3CR\",\n      description: \"\"\n    }, {\n      financialSituation: \"3CR+\",\n      description: \"\"\n    }, {\n      financialSituation: \"other\",\n      description: \"\"\n    }],\n    streamData: [{\n      stream: \"MPC\",\n      description: \"\"\n    }, {\n      stream: \"BIPC\",\n      description: \"\"\n    }, {\n      stream: \"CEC\",\n      description: \"\"\n    }, {\n      stream: \"MEC\",\n      description: \"\"\n    }, {\n      stream: \"HEC\",\n      description: \"\"\n    }],\n    gradePointAverageData: [{\n      gradePointAverage: \"0% - 35%\",\n      description: \"\"\n    }, {\n      gradePointAverage: \"36% - 60%\",\n      description: \"\"\n    }, {\n      gradePointAverage: \"61% - 75%\",\n      description: \"\"\n    }, {\n      gradePointAverage: \"76% - 85%\",\n      description: \"\"\n    }, {\n      gradePointAverage: \"86% - 95%\",\n      description: \"\"\n    }, {\n      gradePointAverage: \"96% - 100%\",\n      description: \"\"\n    }],\n    personalityData: [{\n      personality: \"realistic\",\n      description: \"\"\n    }, {\n      personality: \"investigative\",\n      description: \"\"\n    }, {\n      personality: \"artistic\",\n      description: \"\"\n    }, {\n      personality: \"social\",\n      description: \"\"\n    }, {\n      personality: \"enterprising\",\n      description: \"\"\n    }, {\n      personality: \"conventional\",\n      description: \"\"\n    }],\n    other_data: {},\n    length: \"\"\n  });\n  useEffect(() => {\n    if (userDetails) {\n      setStepForm(prev => {\n        var _userDetails$user2;\n        return {\n          ...prev,\n          email: userDetails === null || userDetails === void 0 ? void 0 : (_userDetails$user2 = userDetails.user) === null || _userDetails$user2 === void 0 ? void 0 : _userDetails$user2.email\n        };\n      });\n    }\n  }, []);\n  const myTimeout = () => {\n    setTimeout(reload, 3000);\n  };\n  function reload() {\n    var _userDetails$user3;\n    setispopular(false);\n    setpstep(1);\n    setStepForm({\n      email: userDetails === null || userDetails === void 0 ? void 0 : (_userDetails$user3 = userDetails.user) === null || _userDetails$user3 === void 0 ? void 0 : _userDetails$user3.email,\n      name: \"\",\n      description: \"\",\n      cost: \"\",\n      gradeData: [{\n        grade: \"9\",\n        description: \"\"\n      }, {\n        grade: \"10\",\n        description: \"\"\n      }, {\n        grade: \"11\",\n        description: \"\"\n      }, {\n        grade: \"12\",\n        description: \"\"\n      }],\n      curriculumData: [{\n        curriculum: \"IB\",\n        description: \"\"\n      }, {\n        curriculum: \"IGCSE\",\n        description: \"\"\n      }, {\n        curriculum: \"CBSE\",\n        description: \"\"\n      }, {\n        curriculum: \"ICSE\",\n        description: \"\"\n      }, {\n        curriculum: \"Nordic\",\n        description: \"\"\n      }],\n      financialData: [{\n        financialSituation: \"0-25L\",\n        description: \"\"\n      }, {\n        financialSituation: \"25L-75L\",\n        description: \"\"\n      }, {\n        financialSituation: \"75L-3CR\",\n        description: \"\"\n      }, {\n        financialSituation: \"3CR+\",\n        description: \"\"\n      }, {\n        financialSituation: \"other\",\n        description: \"\"\n      }],\n      streamData: [{\n        stream: \"MPC\",\n        description: \"\"\n      }, {\n        stream: \"BIPC\",\n        description: \"\"\n      }, {\n        stream: \"CEC\",\n        description: \"\"\n      }, {\n        stream: \"MEC\",\n        description: \"\"\n      }, {\n        stream: \"HEC\",\n        description: \"\"\n      }],\n      gradePointAverageData: [{\n        gradePointAverage: \"0% - 35%\",\n        description: \"\"\n      }, {\n        gradePointAverage: \"36% - 60%\",\n        description: \"\"\n      }, {\n        gradePointAverage: \"61% - 75%\",\n        description: \"\"\n      }, {\n        gradePointAverage: \"76% - 85%\",\n        description: \"\"\n      }, {\n        gradePointAverage: \"86% - 95%\",\n        description: \"\"\n      }, {\n        gradePointAverage: \"96% - 100%\",\n        description: \"\"\n      }],\n      personalityData: [{\n        personality: \"realistic\",\n        description: \"\"\n      }, {\n        personality: \"investigative\",\n        description: \"\"\n      }, {\n        personality: \"artistic\",\n        description: \"\"\n      }, {\n        personality: \"social\",\n        description: \"\"\n      }, {\n        personality: \"enterprising\",\n        description: \"\"\n      }, {\n        personality: \"conventional\",\n        description: \"\"\n      }],\n      other_data: {},\n      length: \"\"\n    });\n    setaccsideNav(\"Paths\");\n    setMypathsMenu(\"Steps\");\n    setStep(\"\");\n  }\n  const createNewStep = () => {\n    setLoading(true);\n    // console.log(stepForm, \"stepform\");\n    axios.post(`https://careers.marketsverse.com/steps/add`, stepForm).then(response => {\n      let result = response === null || response === void 0 ? void 0 : response.data;\n      if (result !== null && result !== void 0 && result.status) {\n        setLoading(false);\n        setStep(\"success\");\n        myTimeout();\n      } else {\n        setLoading(false);\n      }\n    });\n  };\n  useEffect(() => {\n    var _userDetails$user4;\n    axios.get(`https://careers.marketsverse.com/services/get?productcreatoremail=${userDetails === null || userDetails === void 0 ? void 0 : (_userDetails$user4 = userDetails.user) === null || _userDetails$user4 === void 0 ? void 0 : _userDetails$user4.email}`).then(response => {\n      var _response$data;\n      let result = response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.data;\n      // console.log(result, \"all services result\");\n      setAllServices(result);\n    }).catch(error => {\n      console.log(error, \"error in fetching all services\");\n    });\n  }, []);\n  const removeStep = stepId => {\n    // Find the key corresponding to the value stepId\n    const keyToRemove = Object.keys(stepForm === null || stepForm === void 0 ? void 0 : stepForm.other_data).find(key => (stepForm === null || stepForm === void 0 ? void 0 : stepForm.other_data[key]) === stepId);\n    if (!keyToRemove) {\n      // If the key is not found, do nothing\n      return;\n    }\n\n    // Remove the key from other_data\n    const {\n      [keyToRemove]: removedKey,\n      ...restOtherData\n    } = stepForm === null || stepForm === void 0 ? void 0 : stepForm.other_data;\n\n    // Reorder the remaining keys\n    const reorderedOtherData = Object.keys(restOtherData).reduce((acc, key, index) => ({\n      ...acc,\n      [`productid${index + 1}`]: restOtherData[key]\n    }), {});\n\n    // Update the state with the modified other_data\n    setStepForm({\n      ...stepForm,\n      other_data: reorderedOtherData\n    });\n  };\n  const handleDescriptionChangeGrade = (grade, value) => {\n    setStepForm(prevStepForm => {\n      const updatedGradeData = prevStepForm.gradeData.map(item => item.grade === grade ? {\n        ...item,\n        description: value\n      } : item);\n      return {\n        ...prevStepForm,\n        gradeData: updatedGradeData\n      };\n    });\n  };\n  const handleDescriptionChangeGradePoint = (gradePointAverage, value) => {\n    setStepForm(prevStepForm => {\n      const updatedGradePointData = prevStepForm.gradePointAverageData.map(item => item.gradePointAverage === gradePointAverage ? {\n        ...item,\n        description: value\n      } : item);\n      return {\n        ...prevStepForm,\n        gradePointAverageData: updatedGradePointData\n      };\n    });\n  };\n  const handleDescriptionChangeCurriculum = (curriculum, value) => {\n    setStepForm(prevStepForm => {\n      const updatedCurriculumData = prevStepForm.curriculumData.map(item => item.curriculum === curriculum ? {\n        ...item,\n        description: value\n      } : item);\n      return {\n        ...prevStepForm,\n        curriculumData: updatedCurriculumData\n      };\n    });\n  };\n  const handleDescriptionStream = (stream, value) => {\n    setStepForm(prevStepForm => {\n      const updatedStreamData = prevStepForm.streamData.map(item => item.stream === stream ? {\n        ...item,\n        description: value\n      } : item);\n      return {\n        ...prevStepForm,\n        streamData: updatedStreamData\n      };\n    });\n  };\n  const handleDescriptionFinancial = (financialSituation, value) => {\n    setStepForm(prevStepForm => {\n      const updatedFinancialData = prevStepForm.financialData.map(item => item.financialSituation === financialSituation ? {\n        ...item,\n        description: value\n      } : item);\n      return {\n        ...prevStepForm,\n        financialData: updatedFinancialData\n      };\n    });\n  };\n  const handleDescriptionPersonality = (personality, value) => {\n    setStepForm(prevStepForm => {\n      const updatedPersonalityData = prevStepForm.personalityData.map(item => item.personality === personality ? {\n        ...item,\n        description: value\n      } : item);\n      return {\n        ...prevStepForm,\n        personalityData: updatedPersonalityData\n      };\n    });\n  };\n  const getContent = () => {\n    switch (step) {\n      case \"success\":\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"newConglomerate\",\n          style: {\n            height: \"calc(100% - 4rem)\",\n            padding: \"0\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"succesView\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"labelItm\",\n              style: {\n                textAlign: \"center\"\n              },\n              children: \"You Have Successfully Created A New Step.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 11\n        }, this);\n      case \"step2\":\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"newConglomerate\",\n            style: {\n              height: \"calc(100% - 2rem)\",\n              padding: \"0\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Scrollbars, {\n              className: \"scrollForm\",\n              renderTrackHorizontal: () => /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 46\n              }, this),\n              renderThumbHorizontal: () => /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 46\n              }, this),\n              renderTrackVertical: () => /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 44\n              }, this),\n              renderThumbVertical: () => /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 44\n              }, this),\n              children: [stepForm === null || stepForm === void 0 ? void 0 : stepForm.gradeData.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"name\",\n                  children: [\"Description for grade: \", item === null || item === void 0 ? void 0 : item.grade]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 495,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  type: \"text\",\n                  className: \"text-textarea\",\n                  placeholder: \"Enter instructions...\",\n                  rows: \"5\",\n                  cols: \"40\",\n                  spellCheck: \"false\",\n                  value: item === null || item === void 0 ? void 0 : item.description,\n                  onChange: e => handleDescriptionChangeGrade(item === null || item === void 0 ? void 0 : item.grade, e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 498,\n                  columnNumber: 21\n                }, this)]\n              }, item === null || item === void 0 ? void 0 : item.grade, true, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 19\n              }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"NextBtn\",\n                style: {\n                  width: \"100%\",\n                  opacity: stepForm.gradeData.every(item => item.description.trim() !== \"\") ? \"1\" : \"0.5\",\n                  cursor: stepForm.gradeData.every(item => item.description.trim() !== \"\") ? \"pointer\" : \"not-allowed\",\n                  marginBottom: \"0\",\n                  minHeight: \"50px\"\n                },\n                onClick: () => {\n                  // Check if all textarea values are not empty\n                  const allDescriptionsFilled = stepForm.gradeData.every(item => item.description.trim() !== \"\");\n                  if (allDescriptionsFilled) {\n                    setStep(\"step3\");\n                    // console.log(stepForm?.gradeData, \"stepForm?.gradeData\");\n                  }\n                },\n                children: \"Next Step\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"NextBtn\",\n                style: {\n                  width: \"100%\",\n                  background: \"white\",\n                  color: \"#1f304f\",\n                  border: \"1px solid #e5e5e5\",\n                  minHeight: \"50px\",\n                  cursor: \"pointer\"\n                },\n                onClick: () => {\n                  setStep(\"step1\");\n                  setStepForm(prev => {\n                    return {\n                      ...prev,\n                      gradeData: [{\n                        grade: \"9\",\n                        description: \"\"\n                      }, {\n                        grade: \"10\",\n                        description: \"\"\n                      }, {\n                        grade: \"11\",\n                        description: \"\"\n                      }, {\n                        grade: \"12\",\n                        description: \"\"\n                      }]\n                    };\n                  });\n                },\n                children: \"Go Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 547,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 13\n          }, this)\n        }, void 0, false);\n      case \"step3\":\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"newConglomerate\",\n            style: {\n              height: \"calc(100% - 2rem)\",\n              padding: \"0\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Scrollbars, {\n              className: \"scrollForm\",\n              renderTrackHorizontal: () => /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 603,\n                columnNumber: 46\n              }, this),\n              renderThumbHorizontal: () => /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 604,\n                columnNumber: 46\n              }, this),\n              renderTrackVertical: () => /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 605,\n                columnNumber: 44\n              }, this),\n              renderThumbVertical: () => /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 606,\n                columnNumber: 44\n              }, this),\n              children: [stepForm === null || stepForm === void 0 ? void 0 : stepForm.gradePointAverageData.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"name\",\n                  children: [\"Description for grade point avg: \", item.gradePointAverage]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 610,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  type: \"text\",\n                  className: \"text-textarea\",\n                  placeholder: \"Enter instructions...\",\n                  rows: \"5\",\n                  cols: \"40\",\n                  spellCheck: \"false\",\n                  value: item.description,\n                  onChange: e => handleDescriptionChangeGradePoint(item.gradePointAverage, e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 613,\n                  columnNumber: 21\n                }, this)]\n              }, item.gradePointAverage, true, {\n                fileName: _jsxFileName,\n                lineNumber: 609,\n                columnNumber: 19\n              }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 631,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"NextBtn\",\n                style: {\n                  width: \"100%\",\n                  opacity: stepForm.gradePointAverageData.every(item => item.description.trim() !== \"\") ? \"1\" : \"0.5\",\n                  cursor: stepForm.gradePointAverageData.every(item => item.description.trim() !== \"\") ? \"pointer\" : \"not-allowed\",\n                  marginBottom: \"0\",\n                  minHeight: \"50px\"\n                },\n                onClick: () => {\n                  // Check if all textarea values are not empty\n                  const allDescriptionsFilled = stepForm.gradePointAverageData.every(item => item.description.trim() !== \"\");\n                  if (allDescriptionsFilled) {\n                    setStep(\"step4\");\n                    // console.log(\n                    //   stepForm?.gradePointAverageData,\n                    //   \"stepForm?.gradePointAverageData\"\n                    // );\n                  }\n                },\n                children: \"Next Step\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 632,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"NextBtn\",\n                style: {\n                  width: \"100%\",\n                  background: \"white\",\n                  color: \"#1f304f\",\n                  border: \"1px solid #e5e5e5\",\n                  minHeight: \"50px\",\n                  cursor: \"pointer\"\n                },\n                onClick: () => {\n                  setStep(\"step2\");\n                  setStepForm(prev => {\n                    return {\n                      ...prev,\n                      gradePointAverageData: [{\n                        gradePointAverage: \"0% - 35%\",\n                        description: \"\"\n                      }, {\n                        gradePointAverage: \"36% - 60%\",\n                        description: \"\"\n                      }, {\n                        gradePointAverage: \"61% - 75%\",\n                        description: \"\"\n                      }, {\n                        gradePointAverage: \"76% - 85%\",\n                        description: \"\"\n                      }, {\n                        gradePointAverage: \"86% - 95%\",\n                        description: \"\"\n                      }, {\n                        gradePointAverage: \"96% - 100%\",\n                        description: \"\"\n                      }]\n                    };\n                  });\n                },\n                children: \"Go Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 667,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 13\n          }, this)\n        }, void 0, false);\n      case \"step4\":\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"newConglomerate\",\n            style: {\n              height: \"calc(100% - 2rem)\",\n              padding: \"0\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Scrollbars, {\n              className: \"scrollForm\",\n              renderTrackHorizontal: () => /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 731,\n                columnNumber: 46\n              }, this),\n              renderThumbHorizontal: () => /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 732,\n                columnNumber: 46\n              }, this),\n              renderTrackVertical: () => /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 733,\n                columnNumber: 44\n              }, this),\n              renderThumbVertical: () => /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 734,\n                columnNumber: 44\n              }, this),\n              children: [stepForm === null || stepForm === void 0 ? void 0 : stepForm.curriculumData.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"name\",\n                  children: [\"Description for curriculum: \", item.curriculum]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 738,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  type: \"text\",\n                  className: \"text-textarea\",\n                  placeholder: \"Enter instructions...\",\n                  rows: \"5\",\n                  cols: \"40\",\n                  spellCheck: \"false\",\n                  value: item.description,\n                  onChange: e => handleDescriptionChangeCurriculum(item.curriculum, e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 741,\n                  columnNumber: 21\n                }, this)]\n              }, item.curriculum, true, {\n                fileName: _jsxFileName,\n                lineNumber: 737,\n                columnNumber: 19\n              }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 759,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"NextBtn\",\n                style: {\n                  width: \"100%\",\n                  opacity: stepForm.curriculumData.every(item => item.description.trim() !== \"\") ? \"1\" : \"0.5\",\n                  cursor: stepForm.curriculumData.every(item => item.description.trim() !== \"\") ? \"pointer\" : \"not-allowed\",\n                  marginBottom: \"0\",\n                  minHeight: \"50px\"\n                },\n                onClick: () => {\n                  // Check if all textarea values are not empty\n                  const allDescriptionsFilled = stepForm.curriculumData.every(item => item.description.trim() !== \"\");\n                  if (allDescriptionsFilled) {\n                    setStep(\"step5\");\n                    // console.log(\n                    //   stepForm?.curriculumData,\n                    //   \"stepForm?.curriculumData\"\n                    // );\n                  }\n                },\n                children: \"Next Step\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 760,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"NextBtn\",\n                style: {\n                  width: \"100%\",\n                  background: \"white\",\n                  color: \"#1f304f\",\n                  border: \"1px solid #e5e5e5\",\n                  minHeight: \"50px\",\n                  cursor: \"pointer\"\n                },\n                onClick: () => {\n                  setStep(\"step3\");\n                  setStepForm(prev => {\n                    return {\n                      ...prev,\n                      curriculumData: [{\n                        curriculum: \"IB\",\n                        description: \"\"\n                      }, {\n                        curriculum: \"IGCSE\",\n                        description: \"\"\n                      }, {\n                        curriculum: \"CBSE\",\n                        description: \"\"\n                      }, {\n                        curriculum: \"ICSE\",\n                        description: \"\"\n                      }, {\n                        curriculum: \"Nordic\",\n                        description: \"\"\n                      }]\n                    };\n                  });\n                },\n                children: \"Go Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 794,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 729,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 722,\n            columnNumber: 13\n          }, this)\n        }, void 0, false);\n      case \"step5\":\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"newConglomerate\",\n            style: {\n              height: \"calc(100% - 2rem)\",\n              padding: \"0\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Scrollbars, {\n              className: \"scrollForm\",\n              renderTrackHorizontal: () => /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 854,\n                columnNumber: 46\n              }, this),\n              renderThumbHorizontal: () => /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 855,\n                columnNumber: 46\n              }, this),\n              renderTrackVertical: () => /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 856,\n                columnNumber: 44\n              }, this),\n              renderThumbVertical: () => /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 857,\n                columnNumber: 44\n              }, this),\n              children: [stepForm === null || stepForm === void 0 ? void 0 : stepForm.streamData.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"name\",\n                  children: [\"Description for stream: \", item.stream]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 861,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  type: \"text\",\n                  className: \"text-textarea\",\n                  placeholder: \"Enter instructions...\",\n                  rows: \"5\",\n                  cols: \"40\",\n                  spellCheck: \"false\",\n                  value: item.description,\n                  onChange: e => handleDescriptionStream(item.stream, e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 864,\n                  columnNumber: 21\n                }, this)]\n              }, item.stream, true, {\n                fileName: _jsxFileName,\n                lineNumber: 860,\n                columnNumber: 19\n              }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 879,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"NextBtn\",\n                style: {\n                  width: \"100%\",\n                  opacity: stepForm.streamData.every(item => item.description.trim() !== \"\") ? \"1\" : \"0.5\",\n                  cursor: stepForm.streamData.every(item => item.description.trim() !== \"\") ? \"pointer\" : \"not-allowed\",\n                  marginBottom: \"0\",\n                  minHeight: \"50px\"\n                },\n                onClick: () => {\n                  // Check if all textarea values are not empty\n                  const allDescriptionsFilled = stepForm.streamData.every(item => item.description.trim() !== \"\");\n                  if (allDescriptionsFilled) {\n                    setStep(\"step6\");\n                    // console.log(stepForm?.streamData, \"stepForm?.streamData\");\n                  }\n                },\n                children: \"Next Step\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 880,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"NextBtn\",\n                style: {\n                  width: \"100%\",\n                  background: \"white\",\n                  color: \"#1f304f\",\n                  border: \"1px solid #e5e5e5\",\n                  minHeight: \"50px\",\n                  cursor: \"pointer\"\n                },\n                onClick: () => {\n                  setStep(\"step4\");\n                  setStepForm(prev => {\n                    return {\n                      ...prev,\n                      streamData: [{\n                        stream: \"MPC\",\n                        description: \"\"\n                      }, {\n                        stream: \"BIPC\",\n                        description: \"\"\n                      }, {\n                        stream: \"CEC\",\n                        description: \"\"\n                      }, {\n                        stream: \"MEC\",\n                        description: \"\"\n                      }, {\n                        stream: \"HEC\",\n                        description: \"\"\n                      }]\n                    };\n                  });\n                },\n                children: \"Go Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 911,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 852,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 845,\n            columnNumber: 13\n          }, this)\n        }, void 0, false);\n      case \"step6\":\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"newConglomerate\",\n            style: {\n              height: \"calc(100% - 2rem)\",\n              padding: \"0\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Scrollbars, {\n              className: \"scrollForm\",\n              renderTrackHorizontal: () => /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 971,\n                columnNumber: 46\n              }, this),\n              renderThumbHorizontal: () => /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 972,\n                columnNumber: 46\n              }, this),\n              renderTrackVertical: () => /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 973,\n                columnNumber: 44\n              }, this),\n              renderThumbVertical: () => /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 974,\n                columnNumber: 44\n              }, this),\n              children: [stepForm === null || stepForm === void 0 ? void 0 : stepForm.financialData.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"name\",\n                  children: [\"Description for financial situation:\", \" \", item.financialSituation === \"0-25L\" ? \"0-25 Lakhs\" : item.financialSituation === \"25L-75L\" ? \"25 Lahks - 75 Lahks\" : item.financialSituation === \"75L-3CR\" ? \"75 Lahks - 3 CR\" : item.financialSituation === \"3CR+\" ? \"3 CR+\" : \"Other\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 978,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  type: \"text\",\n                  className: \"text-textarea\",\n                  placeholder: \"Enter instructions...\",\n                  rows: \"5\",\n                  cols: \"40\",\n                  spellCheck: \"false\",\n                  value: item.description,\n                  onChange: e => handleDescriptionFinancial(item.financialSituation, e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 990,\n                  columnNumber: 21\n                }, this)]\n              }, item.financialSituation, true, {\n                fileName: _jsxFileName,\n                lineNumber: 977,\n                columnNumber: 19\n              }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1008,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"NextBtn\",\n                style: {\n                  width: \"100%\",\n                  opacity: stepForm.financialData.every(item => item.description.trim() !== \"\") ? \"1\" : \"0.5\",\n                  cursor: stepForm.financialData.every(item => item.description.trim() !== \"\") ? \"pointer\" : \"not-allowed\",\n                  marginBottom: \"0\",\n                  minHeight: \"50px\"\n                },\n                onClick: () => {\n                  // Check if all textarea values are not empty\n                  const allDescriptionsFilled = stepForm.financialData.every(item => item.description.trim() !== \"\");\n                  if (allDescriptionsFilled) {\n                    setStep(\"step7\");\n                    // console.log(\n                    //   stepForm?.financialData,\n                    //   \"stepForm?.financialData\"\n                    // );\n                  }\n                },\n                children: \"Next Step\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1009,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"NextBtn\",\n                style: {\n                  width: \"100%\",\n                  background: \"white\",\n                  color: \"#1f304f\",\n                  border: \"1px solid #e5e5e5\",\n                  minHeight: \"50px\",\n                  cursor: \"pointer\"\n                },\n                onClick: () => {\n                  setStep(\"step5\");\n                  setStepForm(prev => {\n                    return {\n                      ...prev,\n                      financialData: [{\n                        financialSituation: \"0-25L\",\n                        description: \"\"\n                      }, {\n                        financialSituation: \"25L-75L\",\n                        description: \"\"\n                      }, {\n                        financialSituation: \"75L-3CR\",\n                        description: \"\"\n                      }, {\n                        financialSituation: \"3CR+\",\n                        description: \"\"\n                      }, {\n                        financialSituation: \"other\",\n                        description: \"\"\n                      }]\n                    };\n                  });\n                },\n                children: \"Go Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1043,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 969,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 962,\n            columnNumber: 13\n          }, this)\n        }, void 0, false);\n      case \"step7\":\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"newConglomerate\",\n            style: {\n              height: \"calc(100% - 2rem)\",\n              padding: \"0\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Scrollbars, {\n              className: \"scrollForm\",\n              renderTrackHorizontal: () => /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1103,\n                columnNumber: 46\n              }, this),\n              renderThumbHorizontal: () => /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1104,\n                columnNumber: 46\n              }, this),\n              renderTrackVertical: () => /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1105,\n                columnNumber: 44\n              }, this),\n              renderThumbVertical: () => /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1106,\n                columnNumber: 44\n              }, this),\n              children: [stepForm === null || stepForm === void 0 ? void 0 : stepForm.personalityData.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"name\",\n                  children: [\"Description for personality:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      textTransform: \"capitalize\",\n                      paddingLeft: \"5px\"\n                    },\n                    children: item.personality\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1112,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1110,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  type: \"text\",\n                  className: \"text-textarea\",\n                  placeholder: \"Enter instructions...\",\n                  rows: \"5\",\n                  cols: \"40\",\n                  spellCheck: \"false\",\n                  value: item.description,\n                  onChange: e => handleDescriptionPersonality(item.personality, e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1121,\n                  columnNumber: 21\n                }, this)]\n              }, item.personality, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1109,\n                columnNumber: 19\n              }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1139,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"NextBtn\",\n                style: {\n                  width: \"100%\",\n                  opacity: stepForm.personalityData.every(item => item.description.trim() !== \"\") ? \"1\" : \"0.5\",\n                  cursor: stepForm.personalityData.every(item => item.description.trim() !== \"\") ? \"pointer\" : \"not-allowed\",\n                  marginBottom: \"0\",\n                  minHeight: \"50px\"\n                },\n                onClick: () => {\n                  // Check if all textarea values are not empty\n                  const allDescriptionsFilled = stepForm.personalityData.every(item => item.description.trim() !== \"\");\n                  if (allDescriptionsFilled) {\n                    createNewStep();\n                    // console.log(\n                    //   stepForm?.personalityData,\n                    //   \"stepForm?.personalityData\"\n                    // );\n                  }\n                },\n                children: \"Submit Step\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1140,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"NextBtn\",\n                style: {\n                  width: \"100%\",\n                  background: \"white\",\n                  color: \"#1f304f\",\n                  border: \"1px solid #e5e5e5\",\n                  minHeight: \"50px\",\n                  cursor: \"pointer\"\n                },\n                onClick: () => {\n                  setStep(\"step6\");\n                  setStepForm(prev => {\n                    return {\n                      ...prev,\n                      personalityData: [{\n                        personality: \"realistic\",\n                        description: \"\"\n                      }, {\n                        personality: \"investigative\",\n                        description: \"\"\n                      }, {\n                        personality: \"artistic\",\n                        description: \"\"\n                      }, {\n                        personality: \"social\",\n                        description: \"\"\n                      }, {\n                        personality: \"enterprising\",\n                        description: \"\"\n                      }, {\n                        personality: \"conventional\",\n                        description: \"\"\n                      }]\n                    };\n                  });\n                },\n                children: \"Go Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1175,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1101,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1094,\n            columnNumber: 13\n          }, this)\n        }, void 0, false);\n      default:\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"newConglomerate\",\n            style: {\n              height: \"calc(100% - 8rem)\",\n              padding: \"0\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Scrollbars, {\n              className: \"scrollForm\",\n              renderTrackHorizontal: () => /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1239,\n                columnNumber: 46\n              }, this),\n              renderThumbHorizontal: () => /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1240,\n                columnNumber: 46\n              }, this),\n              renderTrackVertical: () => /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1241,\n                columnNumber: 44\n              }, this),\n              renderThumbVertical: () => /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1242,\n                columnNumber: 44\n              }, this),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"name\",\n                children: \"What is the name of this step?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1244,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"inputWrap\",\n                style: {\n                  maxHeight: \"3.5rem\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"text\",\n                  placeholder: \"Name...\",\n                  onChange: e => {\n                    setStepForm(prev => {\n                      return {\n                        ...prev,\n                        name: e.target.value\n                      };\n                    });\n                  },\n                  value: stepForm === null || stepForm === void 0 ? void 0 : stepForm.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1246,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1245,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"name\",\n                children: \"How long does this step take?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1262,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"inputWrap\",\n                style: {\n                  maxHeight: \"3.5rem\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  className: \"text\",\n                  placeholder: \"Days...\",\n                  onChange: e => {\n                    setStepForm(prev => {\n                      return {\n                        ...prev,\n                        length: e.target.value\n                      };\n                    });\n                  },\n                  value: stepForm === null || stepForm === void 0 ? void 0 : stepForm.length\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1264,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1263,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"name\",\n                children: \"What is the instructions for the macro view?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1280,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                type: \"text\",\n                class: \"text-textarea\",\n                placeholder: \"Enter instructions...\",\n                rows: \"5\",\n                cols: \"40\",\n                spellcheck: \"false\",\n                onChange: e => {\n                  setStepForm(prev => {\n                    return {\n                      ...prev,\n                      description: e.target.value\n                    };\n                  });\n                },\n                value: stepForm === null || stepForm === void 0 ? void 0 : stepForm.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1283,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"name\",\n                children: \"What type of step is it?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1301,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"inputWrap\",\n                style: {\n                  maxHeight: \"3.5rem\",\n                  margin: \"20px 0 5px 0\",\n                  display: \"flex\",\n                  paddingLeft: \"2rem\",\n                  alignItems: \"center\",\n                  cursor: \"pointer\",\n                  fontWeight: (stepForm === null || stepForm === void 0 ? void 0 : stepForm.cost) === \"paid\" ? \"500\" : \"300\",\n                  background: (stepForm === null || stepForm === void 0 ? void 0 : stepForm.cost) === \"paid\" ? \"linear-gradient(90deg, #47b4d5 0.02%, #29449d 119.26%)\" : \"\",\n                  color: (stepForm === null || stepForm === void 0 ? void 0 : stepForm.cost) === \"paid\" ? \"white\" : \"\"\n                },\n                onClick: () => {\n                  setStepForm(prev => {\n                    return {\n                      ...prev,\n                      cost: \"paid\"\n                    };\n                  });\n                },\n                children: \"Paid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1302,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"inputWrap\",\n                style: {\n                  maxHeight: \"3.5rem\",\n                  margin: \"5px 0 40px 0\",\n                  display: \"flex\",\n                  paddingLeft: \"2rem\",\n                  alignItems: \"center\",\n                  cursor: \"pointer\",\n                  fontWeight: (stepForm === null || stepForm === void 0 ? void 0 : stepForm.cost) === \"free\" ? \"500\" : \"300\",\n                  background: (stepForm === null || stepForm === void 0 ? void 0 : stepForm.cost) === \"free\" ? \"linear-gradient(90deg, #47b4d5 0.02%, #29449d 119.26%)\" : \"\",\n                  color: (stepForm === null || stepForm === void 0 ? void 0 : stepForm.cost) === \"free\" ? \"white\" : \"\"\n                },\n                onClick: () => {\n                  setStepForm(prev => {\n                    return {\n                      ...prev,\n                      cost: \"free\"\n                    };\n                  });\n                },\n                children: \"Free\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1329,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1524,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1237,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"NextBtn\",\n            style: {\n              width: \"100%\",\n              opacity: stepForm !== null && stepForm !== void 0 && stepForm.name && stepForm !== null && stepForm !== void 0 && stepForm.description && stepForm !== null && stepForm !== void 0 && stepForm.length && stepForm !== null && stepForm !== void 0 && stepForm.cost\n              // Object.keys(stepForm?.other_data).length > 0\n              ? \"1\" : \"0.5\",\n              cursor: stepForm !== null && stepForm !== void 0 && stepForm.name && stepForm !== null && stepForm !== void 0 && stepForm.description && stepForm !== null && stepForm !== void 0 && stepForm.length && stepForm !== null && stepForm !== void 0 && stepForm.cost\n              // Object.keys(stepForm?.other_data).length > 0\n              ? \"pointer\" : \"not-allowed\"\n            },\n            onClick: () => {\n              if (stepForm !== null && stepForm !== void 0 && stepForm.name && stepForm !== null && stepForm !== void 0 && stepForm.description && stepForm !== null && stepForm !== void 0 && stepForm.length && stepForm !== null && stepForm !== void 0 && stepForm.cost\n              // &&\n              // Object.keys(stepForm?.other_data).length > 0\n              ) {\n                setStep(\"step2\");\n                // console.log(stepForm?.other_data, \"stepForm?.other_data\");\n              }\n            },\n            children: \"Next Step\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1528,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [getContent(), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1573,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(NewStep1, \"bgeUSOh/dwjzQOFeKakXLPp7SUg=\", false, function () {\n  return [useStore, useCoinContextData];\n});\n_c = NewStep1;\nexport default NewStep1;\nvar _c;\n$RefreshReg$(_c, \"NewStep1\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Scrollbars","useNavigate","toast","ToastContainer","axios","useStore","useCoinContextData","arrow","trash","jsxDEV","_jsxDEV","Fragment","_Fragment","NewStep1","setpstep","_s","_userDetails$user","userDetails","JSON","parse","localStorage","getItem","setaccsideNav","setispopular","setMypathsMenu","servicesToggle","setServicesToggle","allServices","setAllServices","loading","setLoading","step","setStep","stepForm","setStepForm","email","user","name","description","cost","gradeData","grade","curriculumData","curriculum","financialData","financialSituation","streamData","stream","gradePointAverageData","gradePointAverage","personalityData","personality","other_data","length","prev","_userDetails$user2","myTimeout","setTimeout","reload","_userDetails$user3","createNewStep","post","then","response","result","data","status","_userDetails$user4","get","_response$data","catch","error","console","log","removeStep","stepId","keyToRemove","Object","keys","find","key","removedKey","restOtherData","reorderedOtherData","reduce","acc","index","handleDescriptionChangeGrade","value","prevStepForm","updatedGradeData","map","item","handleDescriptionChangeGradePoint","updatedGradePointData","handleDescriptionChangeCurriculum","updatedCurriculumData","handleDescriptionStream","updatedStreamData","handleDescriptionFinancial","updatedFinancialData","handleDescriptionPersonality","updatedPersonalityData","getContent","className","style","height","padding","children","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","renderTrackHorizontal","renderThumbHorizontal","renderTrackVertical","renderThumbVertical","type","placeholder","rows","cols","spellCheck","onChange","e","target","width","opacity","every","trim","cursor","marginBottom","minHeight","onClick","allDescriptionsFilled","background","color","border","textTransform","paddingLeft","maxHeight","class","spellcheck","margin","display","alignItems","fontWeight","_c","$RefreshReg$"],"sources":["C:/Users/chint/Downloads/Naaviverse 2/naaviverse-frontend/src/globalComponents/GlobalDrawer/NewStep1/index.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport Scrollbars from \"react-custom-scrollbars\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport axios from \"axios\";\r\nimport { useStore } from \"../../../components/store/store.ts\";\r\nimport { useCoinContextData } from \"../../../context/CoinContext\";\r\nimport arrow from \"../../../pages/accDashbaoard/arrow.svg\";\r\nimport trash from \"../../../pages/accDashbaoard/trash.svg\";\r\n\r\nconst NewStep1 = ({ setpstep }) => {\r\n  const userDetails = JSON.parse(localStorage.getItem(\"user\"));\r\n  const { setaccsideNav, setispopular } = useStore();\r\n  const {\r\n    setMypathsMenu,\r\n    servicesToggle,\r\n    setServicesToggle,\r\n    allServices,\r\n    setAllServices,\r\n  } = useCoinContextData();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [step, setStep] = useState(\"\");\r\n  const [stepForm, setStepForm] = useState({\r\n    email: userDetails?.user?.email,\r\n    name: \"\",\r\n    description: \"\",\r\n    cost: \"\",\r\n    gradeData: [\r\n      {\r\n        grade: \"9\",\r\n        description: \"\",\r\n      },\r\n      {\r\n        grade: \"10\",\r\n        description: \"\",\r\n      },\r\n      {\r\n        grade: \"11\",\r\n        description: \"\",\r\n      },\r\n      {\r\n        grade: \"12\",\r\n        description: \"\",\r\n      },\r\n    ],\r\n    curriculumData: [\r\n      {\r\n        curriculum: \"IB\",\r\n        description: \"\",\r\n      },\r\n      {\r\n        curriculum: \"IGCSE\",\r\n        description: \"\",\r\n      },\r\n      {\r\n        curriculum: \"CBSE\",\r\n        description: \"\",\r\n      },\r\n      {\r\n        curriculum: \"ICSE\",\r\n        description: \"\",\r\n      },\r\n      {\r\n        curriculum: \"Nordic\",\r\n        description: \"\",\r\n      },\r\n    ],\r\n    financialData: [\r\n      {\r\n        financialSituation: \"0-25L\",\r\n        description: \"\",\r\n      },\r\n      {\r\n        financialSituation: \"25L-75L\",\r\n        description: \"\",\r\n      },\r\n      {\r\n        financialSituation: \"75L-3CR\",\r\n        description: \"\",\r\n      },\r\n      {\r\n        financialSituation: \"3CR+\",\r\n        description: \"\",\r\n      },\r\n      {\r\n        financialSituation: \"other\",\r\n        description: \"\",\r\n      },\r\n    ],\r\n    streamData: [\r\n      {\r\n        stream: \"MPC\",\r\n        description: \"\",\r\n      },\r\n      {\r\n        stream: \"BIPC\",\r\n        description: \"\",\r\n      },\r\n      {\r\n        stream: \"CEC\",\r\n        description: \"\",\r\n      },\r\n      {\r\n        stream: \"MEC\",\r\n        description: \"\",\r\n      },\r\n      {\r\n        stream: \"HEC\",\r\n        description: \"\",\r\n      },\r\n    ],\r\n    gradePointAverageData: [\r\n      {\r\n        gradePointAverage: \"0% - 35%\",\r\n        description: \"\",\r\n      },\r\n      {\r\n        gradePointAverage: \"36% - 60%\",\r\n        description: \"\",\r\n      },\r\n      {\r\n        gradePointAverage: \"61% - 75%\",\r\n        description: \"\",\r\n      },\r\n      {\r\n        gradePointAverage: \"76% - 85%\",\r\n        description: \"\",\r\n      },\r\n      {\r\n        gradePointAverage: \"86% - 95%\",\r\n        description: \"\",\r\n      },\r\n      {\r\n        gradePointAverage: \"96% - 100%\",\r\n        description: \"\",\r\n      },\r\n    ],\r\n    personalityData: [\r\n      {\r\n        personality: \"realistic\",\r\n        description: \"\",\r\n      },\r\n      {\r\n        personality: \"investigative\",\r\n        description: \"\",\r\n      },\r\n      {\r\n        personality: \"artistic\",\r\n        description: \"\",\r\n      },\r\n      {\r\n        personality: \"social\",\r\n        description: \"\",\r\n      },\r\n      {\r\n        personality: \"enterprising\",\r\n        description: \"\",\r\n      },\r\n      {\r\n        personality: \"conventional\",\r\n        description: \"\",\r\n      },\r\n    ],\r\n    other_data: {},\r\n    length: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (userDetails) {\r\n      setStepForm((prev) => {\r\n        return {\r\n          ...prev,\r\n          email: userDetails?.user?.email,\r\n        };\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const myTimeout = () => {\r\n    setTimeout(reload, 3000);\r\n  };\r\n\r\n  function reload() {\r\n    setispopular(false);\r\n    setpstep(1);\r\n    setStepForm({\r\n      email: userDetails?.user?.email,\r\n      name: \"\",\r\n      description: \"\",\r\n      cost: \"\",\r\n      gradeData: [\r\n        {\r\n          grade: \"9\",\r\n          description: \"\",\r\n        },\r\n        {\r\n          grade: \"10\",\r\n          description: \"\",\r\n        },\r\n        {\r\n          grade: \"11\",\r\n          description: \"\",\r\n        },\r\n        {\r\n          grade: \"12\",\r\n          description: \"\",\r\n        },\r\n      ],\r\n      curriculumData: [\r\n        {\r\n          curriculum: \"IB\",\r\n          description: \"\",\r\n        },\r\n        {\r\n          curriculum: \"IGCSE\",\r\n          description: \"\",\r\n        },\r\n        {\r\n          curriculum: \"CBSE\",\r\n          description: \"\",\r\n        },\r\n        {\r\n          curriculum: \"ICSE\",\r\n          description: \"\",\r\n        },\r\n        {\r\n          curriculum: \"Nordic\",\r\n          description: \"\",\r\n        },\r\n      ],\r\n      financialData: [\r\n        {\r\n          financialSituation: \"0-25L\",\r\n          description: \"\",\r\n        },\r\n        {\r\n          financialSituation: \"25L-75L\",\r\n          description: \"\",\r\n        },\r\n        {\r\n          financialSituation: \"75L-3CR\",\r\n          description: \"\",\r\n        },\r\n        {\r\n          financialSituation: \"3CR+\",\r\n          description: \"\",\r\n        },\r\n        {\r\n          financialSituation: \"other\",\r\n          description: \"\",\r\n        },\r\n      ],\r\n      streamData: [\r\n        {\r\n          stream: \"MPC\",\r\n          description: \"\",\r\n        },\r\n        {\r\n          stream: \"BIPC\",\r\n          description: \"\",\r\n        },\r\n        {\r\n          stream: \"CEC\",\r\n          description: \"\",\r\n        },\r\n        {\r\n          stream: \"MEC\",\r\n          description: \"\",\r\n        },\r\n        {\r\n          stream: \"HEC\",\r\n          description: \"\",\r\n        },\r\n      ],\r\n      gradePointAverageData: [\r\n        {\r\n          gradePointAverage: \"0% - 35%\",\r\n          description: \"\",\r\n        },\r\n        {\r\n          gradePointAverage: \"36% - 60%\",\r\n          description: \"\",\r\n        },\r\n        {\r\n          gradePointAverage: \"61% - 75%\",\r\n          description: \"\",\r\n        },\r\n        {\r\n          gradePointAverage: \"76% - 85%\",\r\n          description: \"\",\r\n        },\r\n        {\r\n          gradePointAverage: \"86% - 95%\",\r\n          description: \"\",\r\n        },\r\n        {\r\n          gradePointAverage: \"96% - 100%\",\r\n          description: \"\",\r\n        },\r\n      ],\r\n      personalityData: [\r\n        {\r\n          personality: \"realistic\",\r\n          description: \"\",\r\n        },\r\n        {\r\n          personality: \"investigative\",\r\n          description: \"\",\r\n        },\r\n        {\r\n          personality: \"artistic\",\r\n          description: \"\",\r\n        },\r\n        {\r\n          personality: \"social\",\r\n          description: \"\",\r\n        },\r\n        {\r\n          personality: \"enterprising\",\r\n          description: \"\",\r\n        },\r\n        {\r\n          personality: \"conventional\",\r\n          description: \"\",\r\n        },\r\n      ],\r\n      other_data: {},\r\n      length: \"\",\r\n    });\r\n    setaccsideNav(\"Paths\");\r\n    setMypathsMenu(\"Steps\");\r\n    setStep(\"\");\r\n  }\r\n\r\n  const createNewStep = () => {\r\n    setLoading(true);\r\n    // console.log(stepForm, \"stepform\");\r\n    axios\r\n      .post(`https://careers.marketsverse.com/steps/add`, stepForm)\r\n      .then((response) => {\r\n        let result = response?.data;\r\n        if (result?.status) {\r\n          setLoading(false);\r\n          setStep(\"success\");\r\n          myTimeout();\r\n        } else {\r\n          setLoading(false);\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `https://careers.marketsverse.com/services/get?productcreatoremail=${userDetails?.user?.email}`\r\n      )\r\n      .then((response) => {\r\n        let result = response?.data?.data;\r\n        // console.log(result, \"all services result\");\r\n        setAllServices(result);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error, \"error in fetching all services\");\r\n      });\r\n  }, []);\r\n\r\n  const removeStep = (stepId) => {\r\n    // Find the key corresponding to the value stepId\r\n    const keyToRemove = Object.keys(stepForm?.other_data).find(\r\n      (key) => stepForm?.other_data[key] === stepId\r\n    );\r\n\r\n    if (!keyToRemove) {\r\n      // If the key is not found, do nothing\r\n      return;\r\n    }\r\n\r\n    // Remove the key from other_data\r\n    const { [keyToRemove]: removedKey, ...restOtherData } =\r\n      stepForm?.other_data;\r\n\r\n    // Reorder the remaining keys\r\n    const reorderedOtherData = Object.keys(restOtherData).reduce(\r\n      (acc, key, index) => ({\r\n        ...acc,\r\n        [`productid${index + 1}`]: restOtherData[key],\r\n      }),\r\n      {}\r\n    );\r\n\r\n    // Update the state with the modified other_data\r\n    setStepForm({\r\n      ...stepForm,\r\n      other_data: reorderedOtherData,\r\n    });\r\n  };\r\n\r\n  const handleDescriptionChangeGrade = (grade, value) => {\r\n    setStepForm((prevStepForm) => {\r\n      const updatedGradeData = prevStepForm.gradeData.map((item) =>\r\n        item.grade === grade ? { ...item, description: value } : item\r\n      );\r\n      return { ...prevStepForm, gradeData: updatedGradeData };\r\n    });\r\n  };\r\n\r\n  const handleDescriptionChangeGradePoint = (gradePointAverage, value) => {\r\n    setStepForm((prevStepForm) => {\r\n      const updatedGradePointData = prevStepForm.gradePointAverageData.map(\r\n        (item) =>\r\n          item.gradePointAverage === gradePointAverage\r\n            ? { ...item, description: value }\r\n            : item\r\n      );\r\n      return { ...prevStepForm, gradePointAverageData: updatedGradePointData };\r\n    });\r\n  };\r\n\r\n  const handleDescriptionChangeCurriculum = (curriculum, value) => {\r\n    setStepForm((prevStepForm) => {\r\n      const updatedCurriculumData = prevStepForm.curriculumData.map((item) =>\r\n        item.curriculum === curriculum ? { ...item, description: value } : item\r\n      );\r\n      return { ...prevStepForm, curriculumData: updatedCurriculumData };\r\n    });\r\n  };\r\n\r\n  const handleDescriptionStream = (stream, value) => {\r\n    setStepForm((prevStepForm) => {\r\n      const updatedStreamData = prevStepForm.streamData.map((item) =>\r\n        item.stream === stream ? { ...item, description: value } : item\r\n      );\r\n      return { ...prevStepForm, streamData: updatedStreamData };\r\n    });\r\n  };\r\n\r\n  const handleDescriptionFinancial = (financialSituation, value) => {\r\n    setStepForm((prevStepForm) => {\r\n      const updatedFinancialData = prevStepForm.financialData.map((item) =>\r\n        item.financialSituation === financialSituation\r\n          ? { ...item, description: value }\r\n          : item\r\n      );\r\n      return { ...prevStepForm, financialData: updatedFinancialData };\r\n    });\r\n  };\r\n\r\n  const handleDescriptionPersonality = (personality, value) => {\r\n    setStepForm((prevStepForm) => {\r\n      const updatedPersonalityData = prevStepForm.personalityData.map((item) =>\r\n        item.personality === personality\r\n          ? { ...item, description: value }\r\n          : item\r\n      );\r\n      return { ...prevStepForm, personalityData: updatedPersonalityData };\r\n    });\r\n  };\r\n\r\n  const getContent = () => {\r\n    switch (step) {\r\n      case \"success\":\r\n        return (\r\n          <div\r\n            className=\"newConglomerate\"\r\n            style={{\r\n              height: \"calc(100% - 4rem)\",\r\n              padding: \"0\",\r\n            }}\r\n          >\r\n            <div className=\"succesView\">\r\n              <div className=\"labelItm\" style={{ textAlign: \"center\" }}>\r\n                You Have Successfully Created A New Step.\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      case \"step2\":\r\n        return (\r\n          <>\r\n            <div\r\n              className=\"newConglomerate\"\r\n              style={{ height: \"calc(100% - 2rem)\", padding: \"0\" }}\r\n            >\r\n              <Scrollbars\r\n                className=\"scrollForm\"\r\n                renderTrackHorizontal={() => <div />}\r\n                renderThumbHorizontal={() => <div />}\r\n                renderTrackVertical={() => <div />}\r\n                renderThumbVertical={() => <div />}\r\n              >\r\n                {stepForm?.gradeData.map((item) => (\r\n                  <div key={item?.grade}>\r\n                    <div className=\"name\">\r\n                      Description for grade: {item?.grade}\r\n                    </div>\r\n                    <textarea\r\n                      type=\"text\"\r\n                      className=\"text-textarea\"\r\n                      placeholder=\"Enter instructions...\"\r\n                      rows=\"5\"\r\n                      cols=\"40\"\r\n                      spellCheck=\"false\"\r\n                      value={item?.description}\r\n                      onChange={(e) =>\r\n                        handleDescriptionChangeGrade(\r\n                          item?.grade,\r\n                          e.target.value\r\n                        )\r\n                      }\r\n                    ></textarea>\r\n                  </div>\r\n                ))}\r\n                <div className=\"space\"></div>\r\n                <div\r\n                  className=\"NextBtn\"\r\n                  style={{\r\n                    width: \"100%\",\r\n                    opacity: stepForm.gradeData.every(\r\n                      (item) => item.description.trim() !== \"\"\r\n                    )\r\n                      ? \"1\"\r\n                      : \"0.5\",\r\n                    cursor: stepForm.gradeData.every(\r\n                      (item) => item.description.trim() !== \"\"\r\n                    )\r\n                      ? \"pointer\"\r\n                      : \"not-allowed\",\r\n                    marginBottom: \"0\",\r\n                    minHeight: \"50px\",\r\n                  }}\r\n                  onClick={() => {\r\n                    // Check if all textarea values are not empty\r\n                    const allDescriptionsFilled = stepForm.gradeData.every(\r\n                      (item) => item.description.trim() !== \"\"\r\n                    );\r\n\r\n                    if (allDescriptionsFilled) {\r\n                      setStep(\"step3\");\r\n                      // console.log(stepForm?.gradeData, \"stepForm?.gradeData\");\r\n                    }\r\n                  }}\r\n                >\r\n                  Next Step\r\n                </div>\r\n                <div\r\n                  className=\"NextBtn\"\r\n                  style={{\r\n                    width: \"100%\",\r\n                    background: \"white\",\r\n                    color: \"#1f304f\",\r\n                    border: \"1px solid #e5e5e5\",\r\n                    minHeight: \"50px\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                  onClick={() => {\r\n                    setStep(\"step1\");\r\n                    setStepForm((prev) => {\r\n                      return {\r\n                        ...prev,\r\n                        gradeData: [\r\n                          {\r\n                            grade: \"9\",\r\n                            description: \"\",\r\n                          },\r\n                          {\r\n                            grade: \"10\",\r\n                            description: \"\",\r\n                          },\r\n                          {\r\n                            grade: \"11\",\r\n                            description: \"\",\r\n                          },\r\n                          {\r\n                            grade: \"12\",\r\n                            description: \"\",\r\n                          },\r\n                        ],\r\n                      };\r\n                    });\r\n                  }}\r\n                >\r\n                  Go Back\r\n                </div>\r\n              </Scrollbars>\r\n            </div>\r\n          </>\r\n        );\r\n\r\n      case \"step3\":\r\n        return (\r\n          <>\r\n            <div\r\n              className=\"newConglomerate\"\r\n              style={{\r\n                height: \"calc(100% - 2rem)\",\r\n                padding: \"0\",\r\n              }}\r\n            >\r\n              <Scrollbars\r\n                className=\"scrollForm\"\r\n                renderTrackHorizontal={() => <div />}\r\n                renderThumbHorizontal={() => <div />}\r\n                renderTrackVertical={() => <div />}\r\n                renderThumbVertical={() => <div />}\r\n              >\r\n                {stepForm?.gradePointAverageData.map((item) => (\r\n                  <div key={item.gradePointAverage}>\r\n                    <div className=\"name\">\r\n                      Description for grade point avg: {item.gradePointAverage}\r\n                    </div>\r\n                    <textarea\r\n                      type=\"text\"\r\n                      className=\"text-textarea\"\r\n                      placeholder=\"Enter instructions...\"\r\n                      rows=\"5\"\r\n                      cols=\"40\"\r\n                      spellCheck=\"false\"\r\n                      value={item.description}\r\n                      onChange={(e) =>\r\n                        handleDescriptionChangeGradePoint(\r\n                          item.gradePointAverage,\r\n                          e.target.value\r\n                        )\r\n                      }\r\n                    ></textarea>\r\n                  </div>\r\n                ))}\r\n\r\n                <div className=\"space\"></div>\r\n                <div\r\n                  className=\"NextBtn\"\r\n                  style={{\r\n                    width: \"100%\",\r\n                    opacity: stepForm.gradePointAverageData.every(\r\n                      (item) => item.description.trim() !== \"\"\r\n                    )\r\n                      ? \"1\"\r\n                      : \"0.5\",\r\n                    cursor: stepForm.gradePointAverageData.every(\r\n                      (item) => item.description.trim() !== \"\"\r\n                    )\r\n                      ? \"pointer\"\r\n                      : \"not-allowed\",\r\n                    marginBottom: \"0\",\r\n                    minHeight: \"50px\",\r\n                  }}\r\n                  onClick={() => {\r\n                    // Check if all textarea values are not empty\r\n                    const allDescriptionsFilled =\r\n                      stepForm.gradePointAverageData.every(\r\n                        (item) => item.description.trim() !== \"\"\r\n                      );\r\n\r\n                    if (allDescriptionsFilled) {\r\n                      setStep(\"step4\");\r\n                      // console.log(\r\n                      //   stepForm?.gradePointAverageData,\r\n                      //   \"stepForm?.gradePointAverageData\"\r\n                      // );\r\n                    }\r\n                  }}\r\n                >\r\n                  Next Step\r\n                </div>\r\n                <div\r\n                  className=\"NextBtn\"\r\n                  style={{\r\n                    width: \"100%\",\r\n                    background: \"white\",\r\n                    color: \"#1f304f\",\r\n                    border: \"1px solid #e5e5e5\",\r\n                    minHeight: \"50px\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                  onClick={() => {\r\n                    setStep(\"step2\");\r\n                    setStepForm((prev) => {\r\n                      return {\r\n                        ...prev,\r\n                        gradePointAverageData: [\r\n                          {\r\n                            gradePointAverage: \"0% - 35%\",\r\n                            description: \"\",\r\n                          },\r\n                          {\r\n                            gradePointAverage: \"36% - 60%\",\r\n                            description: \"\",\r\n                          },\r\n                          {\r\n                            gradePointAverage: \"61% - 75%\",\r\n                            description: \"\",\r\n                          },\r\n                          {\r\n                            gradePointAverage: \"76% - 85%\",\r\n                            description: \"\",\r\n                          },\r\n                          {\r\n                            gradePointAverage: \"86% - 95%\",\r\n                            description: \"\",\r\n                          },\r\n                          {\r\n                            gradePointAverage: \"96% - 100%\",\r\n                            description: \"\",\r\n                          },\r\n                        ],\r\n                      };\r\n                    });\r\n                  }}\r\n                >\r\n                  Go Back\r\n                </div>\r\n              </Scrollbars>\r\n            </div>\r\n          </>\r\n        );\r\n\r\n      case \"step4\":\r\n        return (\r\n          <>\r\n            <div\r\n              className=\"newConglomerate\"\r\n              style={{\r\n                height: \"calc(100% - 2rem)\",\r\n                padding: \"0\",\r\n              }}\r\n            >\r\n              <Scrollbars\r\n                className=\"scrollForm\"\r\n                renderTrackHorizontal={() => <div />}\r\n                renderThumbHorizontal={() => <div />}\r\n                renderTrackVertical={() => <div />}\r\n                renderThumbVertical={() => <div />}\r\n              >\r\n                {stepForm?.curriculumData.map((item) => (\r\n                  <div key={item.curriculum}>\r\n                    <div className=\"name\">\r\n                      Description for curriculum: {item.curriculum}\r\n                    </div>\r\n                    <textarea\r\n                      type=\"text\"\r\n                      className=\"text-textarea\"\r\n                      placeholder=\"Enter instructions...\"\r\n                      rows=\"5\"\r\n                      cols=\"40\"\r\n                      spellCheck=\"false\"\r\n                      value={item.description}\r\n                      onChange={(e) =>\r\n                        handleDescriptionChangeCurriculum(\r\n                          item.curriculum,\r\n                          e.target.value\r\n                        )\r\n                      }\r\n                    ></textarea>\r\n                  </div>\r\n                ))}\r\n\r\n                <div className=\"space\"></div>\r\n                <div\r\n                  className=\"NextBtn\"\r\n                  style={{\r\n                    width: \"100%\",\r\n                    opacity: stepForm.curriculumData.every(\r\n                      (item) => item.description.trim() !== \"\"\r\n                    )\r\n                      ? \"1\"\r\n                      : \"0.5\",\r\n                    cursor: stepForm.curriculumData.every(\r\n                      (item) => item.description.trim() !== \"\"\r\n                    )\r\n                      ? \"pointer\"\r\n                      : \"not-allowed\",\r\n                    marginBottom: \"0\",\r\n                    minHeight: \"50px\",\r\n                  }}\r\n                  onClick={() => {\r\n                    // Check if all textarea values are not empty\r\n                    const allDescriptionsFilled = stepForm.curriculumData.every(\r\n                      (item) => item.description.trim() !== \"\"\r\n                    );\r\n\r\n                    if (allDescriptionsFilled) {\r\n                      setStep(\"step5\");\r\n                      // console.log(\r\n                      //   stepForm?.curriculumData,\r\n                      //   \"stepForm?.curriculumData\"\r\n                      // );\r\n                    }\r\n                  }}\r\n                >\r\n                  Next Step\r\n                </div>\r\n                <div\r\n                  className=\"NextBtn\"\r\n                  style={{\r\n                    width: \"100%\",\r\n                    background: \"white\",\r\n                    color: \"#1f304f\",\r\n                    border: \"1px solid #e5e5e5\",\r\n                    minHeight: \"50px\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                  onClick={() => {\r\n                    setStep(\"step3\");\r\n                    setStepForm((prev) => {\r\n                      return {\r\n                        ...prev,\r\n                        curriculumData: [\r\n                          {\r\n                            curriculum: \"IB\",\r\n                            description: \"\",\r\n                          },\r\n                          {\r\n                            curriculum: \"IGCSE\",\r\n                            description: \"\",\r\n                          },\r\n                          {\r\n                            curriculum: \"CBSE\",\r\n                            description: \"\",\r\n                          },\r\n                          {\r\n                            curriculum: \"ICSE\",\r\n                            description: \"\",\r\n                          },\r\n                          {\r\n                            curriculum: \"Nordic\",\r\n                            description: \"\",\r\n                          },\r\n                        ],\r\n                      };\r\n                    });\r\n                  }}\r\n                >\r\n                  Go Back\r\n                </div>\r\n              </Scrollbars>\r\n            </div>\r\n          </>\r\n        );\r\n\r\n      case \"step5\":\r\n        return (\r\n          <>\r\n            <div\r\n              className=\"newConglomerate\"\r\n              style={{\r\n                height: \"calc(100% - 2rem)\",\r\n                padding: \"0\",\r\n              }}\r\n            >\r\n              <Scrollbars\r\n                className=\"scrollForm\"\r\n                renderTrackHorizontal={() => <div />}\r\n                renderThumbHorizontal={() => <div />}\r\n                renderTrackVertical={() => <div />}\r\n                renderThumbVertical={() => <div />}\r\n              >\r\n                {stepForm?.streamData.map((item) => (\r\n                  <div key={item.stream}>\r\n                    <div className=\"name\">\r\n                      Description for stream: {item.stream}\r\n                    </div>\r\n                    <textarea\r\n                      type=\"text\"\r\n                      className=\"text-textarea\"\r\n                      placeholder=\"Enter instructions...\"\r\n                      rows=\"5\"\r\n                      cols=\"40\"\r\n                      spellCheck=\"false\"\r\n                      value={item.description}\r\n                      onChange={(e) =>\r\n                        handleDescriptionStream(item.stream, e.target.value)\r\n                      }\r\n                    ></textarea>\r\n                  </div>\r\n                ))}\r\n\r\n                <div className=\"space\"></div>\r\n                <div\r\n                  className=\"NextBtn\"\r\n                  style={{\r\n                    width: \"100%\",\r\n                    opacity: stepForm.streamData.every(\r\n                      (item) => item.description.trim() !== \"\"\r\n                    )\r\n                      ? \"1\"\r\n                      : \"0.5\",\r\n                    cursor: stepForm.streamData.every(\r\n                      (item) => item.description.trim() !== \"\"\r\n                    )\r\n                      ? \"pointer\"\r\n                      : \"not-allowed\",\r\n                    marginBottom: \"0\",\r\n                    minHeight: \"50px\",\r\n                  }}\r\n                  onClick={() => {\r\n                    // Check if all textarea values are not empty\r\n                    const allDescriptionsFilled = stepForm.streamData.every(\r\n                      (item) => item.description.trim() !== \"\"\r\n                    );\r\n\r\n                    if (allDescriptionsFilled) {\r\n                      setStep(\"step6\");\r\n                      // console.log(stepForm?.streamData, \"stepForm?.streamData\");\r\n                    }\r\n                  }}\r\n                >\r\n                  Next Step\r\n                </div>\r\n                <div\r\n                  className=\"NextBtn\"\r\n                  style={{\r\n                    width: \"100%\",\r\n                    background: \"white\",\r\n                    color: \"#1f304f\",\r\n                    border: \"1px solid #e5e5e5\",\r\n                    minHeight: \"50px\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                  onClick={() => {\r\n                    setStep(\"step4\");\r\n                    setStepForm((prev) => {\r\n                      return {\r\n                        ...prev,\r\n                        streamData: [\r\n                          {\r\n                            stream: \"MPC\",\r\n                            description: \"\",\r\n                          },\r\n                          {\r\n                            stream: \"BIPC\",\r\n                            description: \"\",\r\n                          },\r\n                          {\r\n                            stream: \"CEC\",\r\n                            description: \"\",\r\n                          },\r\n                          {\r\n                            stream: \"MEC\",\r\n                            description: \"\",\r\n                          },\r\n                          {\r\n                            stream: \"HEC\",\r\n                            description: \"\",\r\n                          },\r\n                        ],\r\n                      };\r\n                    });\r\n                  }}\r\n                >\r\n                  Go Back\r\n                </div>\r\n              </Scrollbars>\r\n            </div>\r\n          </>\r\n        );\r\n\r\n      case \"step6\":\r\n        return (\r\n          <>\r\n            <div\r\n              className=\"newConglomerate\"\r\n              style={{\r\n                height: \"calc(100% - 2rem)\",\r\n                padding: \"0\",\r\n              }}\r\n            >\r\n              <Scrollbars\r\n                className=\"scrollForm\"\r\n                renderTrackHorizontal={() => <div />}\r\n                renderThumbHorizontal={() => <div />}\r\n                renderTrackVertical={() => <div />}\r\n                renderThumbVertical={() => <div />}\r\n              >\r\n                {stepForm?.financialData.map((item) => (\r\n                  <div key={item.financialSituation}>\r\n                    <div className=\"name\">\r\n                      Description for financial situation:{\" \"}\r\n                      {item.financialSituation === \"0-25L\"\r\n                        ? \"0-25 Lakhs\"\r\n                        : item.financialSituation === \"25L-75L\"\r\n                        ? \"25 Lahks - 75 Lahks\"\r\n                        : item.financialSituation === \"75L-3CR\"\r\n                        ? \"75 Lahks - 3 CR\"\r\n                        : item.financialSituation === \"3CR+\"\r\n                        ? \"3 CR+\"\r\n                        : \"Other\"}\r\n                    </div>\r\n                    <textarea\r\n                      type=\"text\"\r\n                      className=\"text-textarea\"\r\n                      placeholder=\"Enter instructions...\"\r\n                      rows=\"5\"\r\n                      cols=\"40\"\r\n                      spellCheck=\"false\"\r\n                      value={item.description}\r\n                      onChange={(e) =>\r\n                        handleDescriptionFinancial(\r\n                          item.financialSituation,\r\n                          e.target.value\r\n                        )\r\n                      }\r\n                    ></textarea>\r\n                  </div>\r\n                ))}\r\n\r\n                <div className=\"space\"></div>\r\n                <div\r\n                  className=\"NextBtn\"\r\n                  style={{\r\n                    width: \"100%\",\r\n                    opacity: stepForm.financialData.every(\r\n                      (item) => item.description.trim() !== \"\"\r\n                    )\r\n                      ? \"1\"\r\n                      : \"0.5\",\r\n                    cursor: stepForm.financialData.every(\r\n                      (item) => item.description.trim() !== \"\"\r\n                    )\r\n                      ? \"pointer\"\r\n                      : \"not-allowed\",\r\n                    marginBottom: \"0\",\r\n                    minHeight: \"50px\",\r\n                  }}\r\n                  onClick={() => {\r\n                    // Check if all textarea values are not empty\r\n                    const allDescriptionsFilled = stepForm.financialData.every(\r\n                      (item) => item.description.trim() !== \"\"\r\n                    );\r\n\r\n                    if (allDescriptionsFilled) {\r\n                      setStep(\"step7\");\r\n                      // console.log(\r\n                      //   stepForm?.financialData,\r\n                      //   \"stepForm?.financialData\"\r\n                      // );\r\n                    }\r\n                  }}\r\n                >\r\n                  Next Step\r\n                </div>\r\n                <div\r\n                  className=\"NextBtn\"\r\n                  style={{\r\n                    width: \"100%\",\r\n                    background: \"white\",\r\n                    color: \"#1f304f\",\r\n                    border: \"1px solid #e5e5e5\",\r\n                    minHeight: \"50px\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                  onClick={() => {\r\n                    setStep(\"step5\");\r\n                    setStepForm((prev) => {\r\n                      return {\r\n                        ...prev,\r\n                        financialData: [\r\n                          {\r\n                            financialSituation: \"0-25L\",\r\n                            description: \"\",\r\n                          },\r\n                          {\r\n                            financialSituation: \"25L-75L\",\r\n                            description: \"\",\r\n                          },\r\n                          {\r\n                            financialSituation: \"75L-3CR\",\r\n                            description: \"\",\r\n                          },\r\n                          {\r\n                            financialSituation: \"3CR+\",\r\n                            description: \"\",\r\n                          },\r\n                          {\r\n                            financialSituation: \"other\",\r\n                            description: \"\",\r\n                          },\r\n                        ],\r\n                      };\r\n                    });\r\n                  }}\r\n                >\r\n                  Go Back\r\n                </div>\r\n              </Scrollbars>\r\n            </div>\r\n          </>\r\n        );\r\n\r\n      case \"step7\":\r\n        return (\r\n          <>\r\n            <div\r\n              className=\"newConglomerate\"\r\n              style={{\r\n                height: \"calc(100% - 2rem)\",\r\n                padding: \"0\",\r\n              }}\r\n            >\r\n              <Scrollbars\r\n                className=\"scrollForm\"\r\n                renderTrackHorizontal={() => <div />}\r\n                renderThumbHorizontal={() => <div />}\r\n                renderTrackVertical={() => <div />}\r\n                renderThumbVertical={() => <div />}\r\n              >\r\n                {stepForm?.personalityData.map((item) => (\r\n                  <div key={item.personality}>\r\n                    <div className=\"name\">\r\n                      Description for personality:{\" \"}\r\n                      <span\r\n                        style={{\r\n                          textTransform: \"capitalize\",\r\n                          paddingLeft: \"5px\",\r\n                        }}\r\n                      >\r\n                        {item.personality}\r\n                      </span>\r\n                    </div>\r\n                    <textarea\r\n                      type=\"text\"\r\n                      className=\"text-textarea\"\r\n                      placeholder=\"Enter instructions...\"\r\n                      rows=\"5\"\r\n                      cols=\"40\"\r\n                      spellCheck=\"false\"\r\n                      value={item.description}\r\n                      onChange={(e) =>\r\n                        handleDescriptionPersonality(\r\n                          item.personality,\r\n                          e.target.value\r\n                        )\r\n                      }\r\n                    ></textarea>\r\n                  </div>\r\n                ))}\r\n\r\n                <div className=\"space\"></div>\r\n                <div\r\n                  className=\"NextBtn\"\r\n                  style={{\r\n                    width: \"100%\",\r\n                    opacity: stepForm.personalityData.every(\r\n                      (item) => item.description.trim() !== \"\"\r\n                    )\r\n                      ? \"1\"\r\n                      : \"0.5\",\r\n                    cursor: stepForm.personalityData.every(\r\n                      (item) => item.description.trim() !== \"\"\r\n                    )\r\n                      ? \"pointer\"\r\n                      : \"not-allowed\",\r\n                    marginBottom: \"0\",\r\n                    minHeight: \"50px\",\r\n                  }}\r\n                  onClick={() => {\r\n                    // Check if all textarea values are not empty\r\n                    const allDescriptionsFilled =\r\n                      stepForm.personalityData.every(\r\n                        (item) => item.description.trim() !== \"\"\r\n                      );\r\n\r\n                    if (allDescriptionsFilled) {\r\n                      createNewStep();\r\n                      // console.log(\r\n                      //   stepForm?.personalityData,\r\n                      //   \"stepForm?.personalityData\"\r\n                      // );\r\n                    }\r\n                  }}\r\n                >\r\n                  Submit Step\r\n                </div>\r\n                <div\r\n                  className=\"NextBtn\"\r\n                  style={{\r\n                    width: \"100%\",\r\n                    background: \"white\",\r\n                    color: \"#1f304f\",\r\n                    border: \"1px solid #e5e5e5\",\r\n                    minHeight: \"50px\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                  onClick={() => {\r\n                    setStep(\"step6\");\r\n                    setStepForm((prev) => {\r\n                      return {\r\n                        ...prev,\r\n                        personalityData: [\r\n                          {\r\n                            personality: \"realistic\",\r\n                            description: \"\",\r\n                          },\r\n                          {\r\n                            personality: \"investigative\",\r\n                            description: \"\",\r\n                          },\r\n                          {\r\n                            personality: \"artistic\",\r\n                            description: \"\",\r\n                          },\r\n                          {\r\n                            personality: \"social\",\r\n                            description: \"\",\r\n                          },\r\n                          {\r\n                            personality: \"enterprising\",\r\n                            description: \"\",\r\n                          },\r\n                          {\r\n                            personality: \"conventional\",\r\n                            description: \"\",\r\n                          },\r\n                        ],\r\n                      };\r\n                    });\r\n                  }}\r\n                >\r\n                  Go Back\r\n                </div>\r\n              </Scrollbars>\r\n            </div>\r\n          </>\r\n        );\r\n\r\n      default:\r\n        return (\r\n          <>\r\n            <div\r\n              className=\"newConglomerate\"\r\n              style={{\r\n                height: \"calc(100% - 8rem)\",\r\n                padding: \"0\",\r\n              }}\r\n            >\r\n              <Scrollbars\r\n                className=\"scrollForm\"\r\n                renderTrackHorizontal={() => <div />}\r\n                renderThumbHorizontal={() => <div />}\r\n                renderTrackVertical={() => <div />}\r\n                renderThumbVertical={() => <div />}\r\n              >\r\n                <div className=\"name\">What is the name of this step?</div>\r\n                <div className=\"inputWrap\" style={{ maxHeight: \"3.5rem\" }}>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"text\"\r\n                    placeholder=\"Name...\"\r\n                    onChange={(e) => {\r\n                      setStepForm((prev) => {\r\n                        return {\r\n                          ...prev,\r\n                          name: e.target.value,\r\n                        };\r\n                      });\r\n                    }}\r\n                    value={stepForm?.name}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"name\">How long does this step take?</div>\r\n                <div className=\"inputWrap\" style={{ maxHeight: \"3.5rem\" }}>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"text\"\r\n                    placeholder=\"Days...\"\r\n                    onChange={(e) => {\r\n                      setStepForm((prev) => {\r\n                        return {\r\n                          ...prev,\r\n                          length: e.target.value,\r\n                        };\r\n                      });\r\n                    }}\r\n                    value={stepForm?.length}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"name\">\r\n                  What is the instructions for the macro view?\r\n                </div>\r\n                <textarea\r\n                  type=\"text\"\r\n                  class=\"text-textarea\"\r\n                  placeholder=\"Enter instructions...\"\r\n                  rows=\"5\"\r\n                  cols=\"40\"\r\n                  spellcheck=\"false\"\r\n                  onChange={(e) => {\r\n                    setStepForm((prev) => {\r\n                      return {\r\n                        ...prev,\r\n                        description: e.target.value,\r\n                      };\r\n                    });\r\n                  }}\r\n                  value={stepForm?.description}\r\n                ></textarea>\r\n\r\n                <div className=\"name\">What type of step is it?</div>\r\n                <div\r\n                  className=\"inputWrap\"\r\n                  style={{\r\n                    maxHeight: \"3.5rem\",\r\n                    margin: \"20px 0 5px 0\",\r\n                    display: \"flex\",\r\n                    paddingLeft: \"2rem\",\r\n                    alignItems: \"center\",\r\n                    cursor: \"pointer\",\r\n                    fontWeight: stepForm?.cost === \"paid\" ? \"500\" : \"300\",\r\n                    background:\r\n                      stepForm?.cost === \"paid\"\r\n                        ? \"linear-gradient(90deg, #47b4d5 0.02%, #29449d 119.26%)\"\r\n                        : \"\",\r\n                    color: stepForm?.cost === \"paid\" ? \"white\" : \"\",\r\n                  }}\r\n                  onClick={() => {\r\n                    setStepForm((prev) => {\r\n                      return {\r\n                        ...prev,\r\n                        cost: \"paid\",\r\n                      };\r\n                    });\r\n                  }}\r\n                >\r\n                  Paid\r\n                </div>\r\n                <div\r\n                  className=\"inputWrap\"\r\n                  style={{\r\n                    maxHeight: \"3.5rem\",\r\n                    margin: \"5px 0 40px 0\",\r\n                    display: \"flex\",\r\n                    paddingLeft: \"2rem\",\r\n                    alignItems: \"center\",\r\n                    cursor: \"pointer\",\r\n                    fontWeight: stepForm?.cost === \"free\" ? \"500\" : \"300\",\r\n                    background:\r\n                      stepForm?.cost === \"free\"\r\n                        ? \"linear-gradient(90deg, #47b4d5 0.02%, #29449d 119.26%)\"\r\n                        : \"\",\r\n                    color: stepForm?.cost === \"free\" ? \"white\" : \"\",\r\n                  }}\r\n                  onClick={() => {\r\n                    setStepForm((prev) => {\r\n                      return {\r\n                        ...prev,\r\n                        cost: \"free\",\r\n                      };\r\n                    });\r\n                  }}\r\n                >\r\n                  Free\r\n                </div>\r\n\r\n                {/* <div className=\"name\">Add services</div>\r\n                <div\r\n                  className=\"each-acc-addpath-field-input-addstep\"\r\n                  style={{ flexDirection: \"column\" }}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      width: \"100%\",\r\n                      display: \"flex\",\r\n                      cursor: \"pointer\",\r\n                    }}\r\n                    onClick={() => {\r\n                      setServicesToggle(!servicesToggle);\r\n                    }}\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        width: \"85%\",\r\n                        cursor: \"pointer\",\r\n                        paddingLeft: \"1.5rem\",\r\n                        borderRadius: \"35px\",\r\n                        opacity: \"0.25\",\r\n                        fontSize: \"1rem\",\r\n                        fontWeight: \"500\",\r\n                        display: \"flex\",\r\n                        height: \"56px\",\r\n                        alignItems: \"center\",\r\n                      }}\r\n                    >\r\n                      Click To Select\r\n                    </div>\r\n                    <div className=\"arrow-box-addstep\">\r\n                      <img\r\n                        src={arrow}\r\n                        alt=\"\"\r\n                        style={{\r\n                          transform: servicesToggle ? \"rotate(180deg)\" : \"\",\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  {/* <div\r\n                    className=\"hidden-steps-addstep\"\r\n                    style={{ display: servicesToggle ? \"flex\" : \"none\" }}\r\n                  >\r\n                    {allServices?.map((e, i) => {\r\n                      return (\r\n                        <div\r\n                          className=\"each-hidden-step-addstep\"\r\n                          key={i}\r\n                          onClick={() => {\r\n                            setStepForm((prev) => {\r\n                              const productId = `productid${\r\n                                Object.keys(prev?.other_data).length + 1\r\n                              }`;\r\n                              return {\r\n                                ...prev,\r\n                                other_data: {\r\n                                  ...prev?.other_data,\r\n                                  [productId]: e?.product_id,\r\n                                },\r\n                              };\r\n                            });\r\n                            setServicesToggle(false);\r\n                          }}\r\n                        >\r\n                          <div className=\"stepp-textt-addstep\">\r\n                            <div>{e?.name}</div>\r\n                              {/* <div>\r\n                                <img src={e?.product_icon} alt=\"\" />\r\n                              </div>\r\n                          </div>\r\n                          <div className=\"stepp-textt1-addstep\">\r\n                            {e?.description}\r\n                          </div>\r\n                          {/* <div className=\"stepp-text-amountt-addstep\">\r\n                            <span style={{ fontSize: \"1.2rem\" }}>\r\n                              {e?.billing_cycle && e?.billing_cycle?.monthly\r\n                                ? e?.billing_cycle?.monthly?.coin\r\n                                : e?.billing_cycle && e?.billing_cycle?.lifetime\r\n                                ? e?.billing_cycle?.lifetime?.coin\r\n                                : \"\"}\r\n                            </span>\r\n                            <span style={{ fontSize: \"1.2rem\" }}>\r\n                              {e?.billing_cycle && e?.billing_cycle?.monthly\r\n                                ? Number(\r\n                                    e?.billing_cycle?.monthly?.price\r\n                                  )?.toFixed(2)\r\n                                : e?.billing_cycle && e?.billing_cycle?.lifetime\r\n                                ? Number(\r\n                                    e?.billing_cycle?.lifetime?.price\r\n                                  )?.toFixed(2)\r\n                                : \"\"}\r\n                            </span>\r\n                            <span\r\n                              style={{\r\n                                fontSize: \"0.9rem\",\r\n                              }}\r\n                            >\r\n                              {e?.monthly ? \"/Month\" : \"/Lifetime\"}\r\n                            </span>\r\n                          </div> \r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div> \r\n                </div> */}\r\n                {/* <div className=\"selected-steps-addstep\">\r\n                  {allServices?.map((e, i) => {\r\n                    if (\r\n                      Object.values(stepForm?.other_data).includes(\r\n                        e?.product_id\r\n                      )\r\n                    ) {\r\n                      return (\r\n                        <div\r\n                          className=\"each-selected-addstep\"\r\n                          key={e?.product_id}\r\n                        >\r\n                          <div className=\"stepp-textt-addstep\">\r\n                            <div>{e?.name}</div>\r\n                            <div>\r\n                              <img src={e?.product_icon} alt=\"\" />\r\n                            </div> \r\n                          </div>\r\n                          <div className=\"stepp-textt1-addstep\">\r\n                            {e?.description}\r\n                          </div>\r\n                          <div className=\"stepp-text-amountt-addstep\">\r\n                            <span style={{ fontSize: \"1.2rem\" }}>\r\n                              {e?.billing_cycle && e?.billing_cycle?.monthly\r\n                                ? e?.billing_cycle?.monthly?.coin\r\n                                : e?.billing_cycle && e?.billing_cycle?.lifetime\r\n                                ? e?.billing_cycle?.lifetime?.coin\r\n                                : \"\"}\r\n                            </span>\r\n                            <span style={{ fontSize: \"1.2rem\" }}>\r\n                              {e?.billing_cycle && e?.billing_cycle?.monthly\r\n                                ? Number(\r\n                                    e?.billing_cycle?.monthly?.price\r\n                                  )?.toFixed(2)\r\n                                : e?.billing_cycle && e?.billing_cycle?.lifetime\r\n                                ? Number(\r\n                                    e?.billing_cycle?.lifetime?.price\r\n                                  )?.toFixed(2)\r\n                                : \"\"}\r\n                            </span>\r\n                            <span\r\n                              style={{\r\n                                fontSize: \"0.9rem\",\r\n                              }}\r\n                            >\r\n                              {e?.monthly ? \"/Month\" : \"/Lifetime\"}\r\n                            </span>\r\n                          </div>\r\n                          <div\r\n                            className=\"trash-icon-div-addstep\"\r\n                            onClick={() => removeStep(e?.product_id)}\r\n                          >\r\n                            <img src={trash} alt=\"\" />\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    }\r\n                    return null;\r\n                  })}\r\n                </div> */}\r\n                <div className=\"space\"></div>\r\n              </Scrollbars>\r\n            </div>\r\n\r\n            <div\r\n              className=\"NextBtn\"\r\n              style={{\r\n                width: \"100%\",\r\n                opacity:\r\n                  stepForm?.name &&\r\n                  stepForm?.description &&\r\n                  stepForm?.length &&\r\n                  stepForm?.cost\r\n                  // Object.keys(stepForm?.other_data).length > 0\r\n                    ? \"1\"\r\n                    : \"0.5\",\r\n                cursor:\r\n                  stepForm?.name &&\r\n                  stepForm?.description &&\r\n                  stepForm?.length &&\r\n                  stepForm?.cost\r\n                  // Object.keys(stepForm?.other_data).length > 0\r\n                    ? \"pointer\"\r\n                    : \"not-allowed\",\r\n              }}\r\n              onClick={() => {\r\n                if (\r\n                  stepForm?.name &&\r\n                  stepForm?.description &&\r\n                  stepForm?.length &&\r\n                  stepForm?.cost \r\n                  // &&\r\n                  // Object.keys(stepForm?.other_data).length > 0\r\n                ) {\r\n                  setStep(\"step2\");\r\n                  // console.log(stepForm?.other_data, \"stepForm?.other_data\");\r\n                }\r\n              }}\r\n            >\r\n              Next Step\r\n            </div>\r\n          </>\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {getContent()}\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewStep1;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}